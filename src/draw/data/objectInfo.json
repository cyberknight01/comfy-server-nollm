{
  "KSampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler",
    "display_name": "KSampler",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "CheckpointLoaderSimple": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoaderSimple",
    "display_name": "Load Checkpoint",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPTextEncode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncode",
    "display_name": "CLIP Text Encode (Prompt)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "CLIPSetLastLayer": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPSetLastLayer",
    "display_name": "CLIP Set Last Layer",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "VAEDecode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecode",
    "display_name": "VAE Decode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncode": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncode",
    "display_name": "VAE Encode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncodeForInpaint": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "mask": [
          "MASK"
        ],
        "grow_mask_by": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeForInpaint",
    "display_name": "VAE Encode (for Inpainting)",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "VAELoader": {
    "input": {
      "required": {
        "vae_name": [
          [
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VAE"
    ],
    "name": "VAELoader",
    "display_name": "Load VAE",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "EmptyLatentImage",
    "display_name": "Empty Latent Image",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscale",
    "display_name": "Upscale Latent",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscaleBy": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.01,
            "max": 8.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleBy",
    "display_name": "Upscale Latent By",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentFromBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 63
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFromBatch",
    "display_name": "Latent From Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RepeatLatentBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RepeatLatentBatch",
    "display_name": "Repeat Latent Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "SaveImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImage",
    "display_name": "Save Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "PreviewImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "PreviewImage",
    "display_name": "Preview Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "LoadImage": {
    "input": {
      "required": {
        "image": [
          [
            "2022-06-23 19-46-52-280417 (1).png",
            "2022-06-23 19-46-52-280417.png",
            "ChMkJ13cwnOIK4FoAAXGX559JJgAAvbPAImQfAABcZ3473 (1).jpg",
            "IMG_20230624_115309.jpg",
            "R-C.jpg",
            "example.png",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (1).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (2).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG.webp"
          ],
          {
            "image_upload": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImage",
    "display_name": "Load Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageMask": {
    "input": {
      "required": {
        "image": [
          [
            "2022-06-23 19-46-52-280417 (1).png",
            "2022-06-23 19-46-52-280417.png",
            "ChMkJ13cwnOIK4FoAAXGX559JJgAAvbPAImQfAABcZ3473 (1).jpg",
            "IMG_20230624_115309.jpg",
            "R-C.jpg",
            "example.png",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (1).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (2).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG.webp"
          ],
          {
            "image_upload": true
          }
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "LoadImageMask",
    "display_name": "Load Image (as Mask)",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageScale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScale",
    "display_name": "Upscale Image",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageScaleBy": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 8.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleBy",
    "display_name": "Upscale Image By",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageInvert": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageInvert",
    "display_name": "Invert Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImageBatch": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatch",
    "display_name": "Batch Images",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImagePadForOutpaint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 40,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImagePadForOutpaint",
    "display_name": "Pad Image for Outpainting",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "EmptyImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "EmptyImage",
    "display_name": "EmptyImage",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ConditioningAverage": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningAverage",
    "display_name": "ConditioningAverage",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningCombine": {
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningCombine",
    "display_name": "Conditioning (Combine)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningConcat": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningConcat",
    "display_name": "Conditioning (Concat)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetArea": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetArea",
    "display_name": "Conditioning (Set Area)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaPercentage": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "height": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetAreaPercentage",
    "display_name": "Conditioning (Set Area with Percentage)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaStrength": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetAreaStrength",
    "display_name": "ConditioningSetAreaStrength",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetMask": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "mask": [
          "MASK"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetMask",
    "display_name": "Conditioning (Set Mask)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "KSamplerAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerAdvanced",
    "display_name": "KSampler (Advanced)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "SetLatentNoiseMask": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "SetLatentNoiseMask",
    "display_name": "Set Latent Noise Mask",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "LatentComposite": {
    "input": {
      "required": {
        "samples_to": [
          "LATENT"
        ],
        "samples_from": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentComposite",
    "display_name": "Latent Composite",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentBlend": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBlend",
    "display_name": "Latent Blend",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "LatentRotate": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "rotation": [
          [
            "none",
            "90 degrees",
            "180 degrees",
            "270 degrees"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentRotate",
    "display_name": "Rotate Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentFlip": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "flip_method": [
          [
            "x-axis: vertically",
            "y-axis: horizontally"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFlip",
    "display_name": "Flip Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentCrop": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCrop",
    "display_name": "Crop Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LoraLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader",
    "display_name": "Load LoRA",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPLoader": {
    "input": {
      "required": {
        "clip_name": [
          []
        ],
        "type": [
          [
            "stable_diffusion",
            "stable_cascade"
          ]
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPLoader",
    "display_name": "Load CLIP",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "UNETLoader": {
    "input": {
      "required": {
        "unet_name": [
          []
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "UNETLoader",
    "display_name": "UNETLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DualCLIPLoader": {
    "input": {
      "required": {
        "clip_name1": [
          []
        ],
        "clip_name2": [
          []
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "DualCLIPLoader",
    "display_name": "DualCLIPLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "CLIPVisionEncode": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION_OUTPUT"
    ],
    "name": "CLIPVisionEncode",
    "display_name": "CLIP Vision Encode",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "StyleModelApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "style_model": [
          "STYLE_MODEL"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "StyleModelApply",
    "display_name": "Apply Style Model",
    "description": "",
    "category": "conditioning/style_model",
    "output_node": false
  },
  "unCLIPConditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "unCLIPConditioning",
    "display_name": "unCLIPConditioning",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ControlNetApply",
    "display_name": "Apply ControlNet",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApplyAdvanced": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ControlNetApplyAdvanced",
    "display_name": "Apply ControlNet (Advanced)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetLoader": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetLoader",
    "display_name": "Load ControlNet Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "DiffControlNetLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "DiffControlNetLoader",
    "display_name": "Load ControlNet Model (diff)",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "StyleModelLoader": {
    "input": {
      "required": {
        "style_model_name": [
          []
        ]
      }
    },
    "output": [
      "STYLE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STYLE_MODEL"
    ],
    "name": "StyleModelLoader",
    "display_name": "Load Style Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPVisionLoader": {
    "input": {
      "required": {
        "clip_name": [
          [
            "clip_h.pth"
          ]
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIPVisionLoader",
    "display_name": "Load CLIP Vision",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "VAEDecodeTiled": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecodeTiled",
    "display_name": "VAE Decode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "VAEEncodeTiled": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeTiled",
    "display_name": "VAE Encode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "unCLIPCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "name": "unCLIPCheckpointLoader",
    "display_name": "unCLIPCheckpointLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENLoader": {
    "input": {
      "required": {
        "gligen_name": [
          []
        ]
      }
    },
    "output": [
      "GLIGEN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GLIGEN"
    ],
    "name": "GLIGENLoader",
    "display_name": "GLIGENLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENTextBoxApply": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "clip": [
          "CLIP"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "GLIGENTextBoxApply",
    "display_name": "GLIGENTextBoxApply",
    "description": "",
    "category": "conditioning/gligen",
    "output_node": false
  },
  "InpaintModelConditioning": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "pixels": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "InpaintModelConditioning",
    "display_name": "InpaintModelConditioning",
    "description": "",
    "category": "conditioning/inpaint",
    "output_node": false
  },
  "CheckpointLoader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoader",
    "display_name": "Load Checkpoint With Config (DEPRECATED)",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DiffusersLoader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "DiffusersLoader",
    "display_name": "DiffusersLoader",
    "description": "",
    "category": "advanced/loaders/deprecated",
    "output_node": false
  },
  "LoadLatent": {
    "input": {
      "required": {
        "latent": [
          []
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LoadLatent",
    "display_name": "LoadLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "SaveLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveLatent",
    "display_name": "SaveLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "ConditioningZeroOut": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningZeroOut",
    "display_name": "ConditioningZeroOut",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "ConditioningSetTimestepRange": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "start": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetTimestepRange",
    "display_name": "ConditioningSetTimestepRange",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "LoraLoaderModelOnly": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "lora_name": [
          [
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "LoraLoaderModelOnly",
    "display_name": "LoraLoaderModelOnly",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "LatentAdd": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentAdd",
    "display_name": "LatentAdd",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentSubtract": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentSubtract",
    "display_name": "LatentSubtract",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentMultiply": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentMultiply",
    "display_name": "LatentMultiply",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentInterpolate": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentInterpolate",
    "display_name": "LatentInterpolate",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentBatch": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatch",
    "display_name": "LatentBatch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "LatentBatchSeedBehavior": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "seed_behavior": [
          [
            "random",
            "fixed"
          ],
          {
            "default": "fixed"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatchSeedBehavior",
    "display_name": "LatentBatchSeedBehavior",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "HypernetworkLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "hypernetwork_name": [
          [
            "easy_negative.safetensors"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "HypernetworkLoader",
    "display_name": "HypernetworkLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "UpscaleModelLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "RealESRGAN_x2plus.pth",
            "RealESRGAN_x4plus.pth",
            "RealESRGAN_x4plus_anime_6B.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "UpscaleModelLoader",
    "display_name": "Load Upscale Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "ImageUpscaleWithModel": {
    "input": {
      "required": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageUpscaleWithModel",
    "display_name": "Upscale Image (using Model)",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageBlend": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "difference"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlend",
    "display_name": "ImageBlend",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageBlur": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "blur_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 10.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlur",
    "display_name": "ImageBlur",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageQuantize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "none",
            "floyd-steinberg",
            "bayer-2",
            "bayer-4",
            "bayer-8",
            "bayer-16"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageQuantize",
    "display_name": "ImageQuantize",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageSharpen": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 5.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSharpen",
    "display_name": "ImageSharpen",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageScaleToTotalPixels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "megapixels": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleToTotalPixels",
    "display_name": "ImageScaleToTotalPixels",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "LatentCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "LATENT"
        ],
        "source": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCompositeMasked",
    "display_name": "LatentCompositeMasked",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "ImageCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "source": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeMasked",
    "display_name": "ImageCompositeMasked",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "MaskToImage": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MaskToImage",
    "display_name": "Convert Mask to Image",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue",
            "alpha"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImageToMask",
    "display_name": "Convert Image to Mask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageColorToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImageColorToMask",
    "display_name": "ImageColorToMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "SolidMask": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SolidMask",
    "display_name": "SolidMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "InvertMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "InvertMask",
    "display_name": "InvertMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "CropMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "CropMask",
    "display_name": "CropMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "MaskComposite": {
    "input": {
      "required": {
        "destination": [
          "MASK"
        ],
        "source": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "operation": [
          [
            "multiply",
            "add",
            "subtract",
            "and",
            "or",
            "xor"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "MaskComposite",
    "display_name": "MaskComposite",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "FeatherMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "FeatherMask",
    "display_name": "FeatherMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "GrowMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "expand": [
          "INT",
          {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "GrowMask",
    "display_name": "GrowMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ThresholdMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "value": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ThresholdMask",
    "display_name": "ThresholdMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "PorterDuffImageComposite": {
    "input": {
      "required": {
        "source": [
          "IMAGE"
        ],
        "source_alpha": [
          "MASK"
        ],
        "destination": [
          "IMAGE"
        ],
        "destination_alpha": [
          "MASK"
        ],
        "mode": [
          [
            "ADD",
            "CLEAR",
            "DARKEN",
            "DST",
            "DST_ATOP",
            "DST_IN",
            "DST_OUT",
            "DST_OVER",
            "LIGHTEN",
            "MULTIPLY",
            "OVERLAY",
            "SCREEN",
            "SRC",
            "SRC_ATOP",
            "SRC_IN",
            "SRC_OUT",
            "SRC_OVER",
            "XOR"
          ],
          {
            "default": "DST"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PorterDuffImageComposite",
    "display_name": "Porter-Duff Image Composite",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "SplitImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SplitImageWithAlpha",
    "display_name": "Split Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "JoinImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "alpha": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "JoinImageWithAlpha",
    "display_name": "Join Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "RebatchLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RebatchLatents",
    "display_name": "Rebatch Latents",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RebatchImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "RebatchImages",
    "display_name": "Rebatch Images",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ModelMergeSimple": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSimple",
    "display_name": "ModelMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeBlocks": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "input": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "middle": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeBlocks",
    "display_name": "ModelMergeBlocks",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeSubtract": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSubtract",
    "display_name": "ModelMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeAdd": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeAdd",
    "display_name": "ModelMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CheckpointSave",
    "display_name": "CheckpointSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "CLIPMergeSimple": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeSimple",
    "display_name": "CLIPMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPMergeSubtract": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeSubtract",
    "display_name": "CLIPMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPMergeAdd": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeAdd",
    "display_name": "CLIPMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPSave": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "clip/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CLIPSave",
    "display_name": "CLIPSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "VAESave": {
    "input": {
      "required": {
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "vae/ComfyUI_vae"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "VAESave",
    "display_name": "VAESave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "TomePatchModel": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "TomePatchModel",
    "display_name": "TomePatchModel",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "CLIPTextEncodeSDXLRefiner": {
    "input": {
      "required": {
        "ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXLRefiner",
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "CLIPTextEncodeSDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true,
            "default": "CLIP_G"
          }
        ],
        "clip": [
          "CLIP"
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true,
            "default": "CLIP_L"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXL",
    "display_name": "CLIPTextEncodeSDXL",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "Canny": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Canny",
    "display_name": "Canny",
    "description": "",
    "category": "image/preprocessors",
    "output_node": false
  },
  "FreeU": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.1,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU",
    "display_name": "FreeU",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "FreeU_V2": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.3,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.4,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU_V2",
    "display_name": "FreeU_V2",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "SamplerCustom": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "name": "SamplerCustom",
    "display_name": "SamplerCustom",
    "description": "",
    "category": "sampling/custom_sampling",
    "output_node": false
  },
  "BasicScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "BasicScheduler",
    "display_name": "BasicScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KarrasScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "KarrasScheduler",
    "display_name": "KarrasScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "ExponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "ExponentialScheduler",
    "display_name": "ExponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "PolyexponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "PolyexponentialScheduler",
    "display_name": "PolyexponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "VPScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "beta_d": [
          "FLOAT",
          {
            "default": 19.9,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "default": 0.001,
            "min": 0.0,
            "max": 1.0,
            "step": 0.0001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "VPScheduler",
    "display_name": "VPScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "SDTurboScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "SDTurboScheduler",
    "display_name": "SDTurboScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KSamplerSelect": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "KSamplerSelect",
    "display_name": "KSamplerSelect",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerEulerAncestral": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerEulerAncestral",
    "display_name": "SamplerEulerAncestral",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerLMS": {
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerLMS",
    "display_name": "SamplerLMS",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_3M_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_3M_SDE",
    "display_name": "SamplerDPMPP_3M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_2M_SDE": {
    "input": {
      "required": {
        "solver_type": [
          [
            "midpoint",
            "heun"
          ]
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_2M_SDE",
    "display_name": "SamplerDPMPP_2M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "r": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_SDE",
    "display_name": "SamplerDPMPP_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMAdaptative": {
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "default": 3,
            "min": 2,
            "max": 3
          }
        ],
        "rtol": [
          "FLOAT",
          {
            "default": 0.05,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "atol": [
          "FLOAT",
          {
            "default": 0.0078,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "h_init": [
          "FLOAT",
          {
            "default": 0.05,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "pcoeff": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "icoeff": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "dcoeff": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "accept_safety": [
          "FLOAT",
          {
            "default": 0.81,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "eta": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMAdaptative",
    "display_name": "SamplerDPMAdaptative",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SplitSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SIGMAS",
      "SIGMAS"
    ],
    "name": "SplitSigmas",
    "display_name": "SplitSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "FlipSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "FlipSigmas",
    "display_name": "FlipSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "HyperTile": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "HyperTile",
    "display_name": "HyperTile",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "ModelSamplingDiscrete": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "eps",
            "v_prediction",
            "lcm",
            "x0"
          ]
        ],
        "zsnr": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingDiscrete",
    "display_name": "ModelSamplingDiscrete",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingContinuousEDM": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "v_prediction",
            "edm_playground_v2.5",
            "eps"
          ]
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 120.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.001,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.002,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingContinuousEDM",
    "display_name": "ModelSamplingContinuousEDM",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingStableCascade": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingStableCascade",
    "display_name": "ModelSamplingStableCascade",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "RescaleCFG": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "RescaleCFG",
    "display_name": "RescaleCFG",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "PatchModelAddDownscale": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "block_number": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 32,
            "step": 1
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 9.0,
            "step": 0.001
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "downscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ],
        "upscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "PatchModelAddDownscale",
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "ImageCrop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCrop",
    "display_name": "ImageCrop",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "RepeatImageBatch": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "RepeatImageBatch",
    "display_name": "RepeatImageBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageFromBatch": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4095
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFromBatch",
    "display_name": "ImageFromBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "SaveAnimatedWEBP": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.01,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "lossless": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "quality": [
          "INT",
          {
            "default": 80,
            "min": 0,
            "max": 100
          }
        ],
        "method": [
          [
            "default",
            "fastest",
            "slowest"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedWEBP",
    "display_name": "SaveAnimatedWEBP",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "SaveAnimatedPNG": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.01,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "compress_level": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 9
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedPNG",
    "display_name": "SaveAnimatedPNG",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "ImageOnlyCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "name": "ImageOnlyCheckpointLoader",
    "display_name": "Image Only Checkpoint Loader (img2vid model)",
    "description": "",
    "category": "loaders/video_models",
    "output_node": false
  },
  "SVD_img2vid_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 14,
            "min": 1,
            "max": 4096
          }
        ],
        "motion_bucket_id": [
          "INT",
          {
            "default": 127,
            "min": 1,
            "max": 1023
          }
        ],
        "fps": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 1024
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SVD_img2vid_Conditioning",
    "display_name": "SVD_img2vid_Conditioning",
    "description": "",
    "category": "conditioning/video_models",
    "output_node": false
  },
  "VideoLinearCFGGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "VideoLinearCFGGuidance",
    "display_name": "VideoLinearCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "VideoTriangleCFGGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "VideoTriangleCFGGuidance",
    "display_name": "VideoTriangleCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "ImageOnlyCheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageOnlyCheckpointSave",
    "display_name": "ImageOnlyCheckpointSave",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "SelfAttentionGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -2.0,
            "max": 5.0,
            "step": 0.1
          }
        ],
        "blur_sigma": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "SelfAttentionGuidance",
    "display_name": "Self-Attention Guidance",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "PerpNeg": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "empty_conditioning": [
          "CONDITIONING"
        ],
        "neg_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "PerpNeg",
    "display_name": "Perp-Neg",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "StableZero123_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_Conditioning",
    "display_name": "StableZero123_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "StableZero123_Conditioning_Batched": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0,
            "step": 0.1,
            "round": false
          }
        ],
        "elevation_batch_increment": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth_batch_increment": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_Conditioning_Batched",
    "display_name": "StableZero123_Conditioning_Batched",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "SV3D_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 21,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -90.0,
            "max": 90.0,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SV3D_Conditioning",
    "display_name": "SV3D_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "SD_4XUpscale_Conditioning": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "scale_ratio": [
          "FLOAT",
          {
            "default": 4.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SD_4XUpscale_Conditioning",
    "display_name": "SD_4XUpscale_Conditioning",
    "description": "",
    "category": "conditioning/upscale_diffusion",
    "output_node": false
  },
  "PhotoMakerLoader": {
    "input": {
      "required": {
        "photomaker_model_name": [
          []
        ]
      }
    },
    "output": [
      "PHOTOMAKER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PHOTOMAKER"
    ],
    "name": "PhotoMakerLoader",
    "display_name": "PhotoMakerLoader",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "PhotoMakerEncode": {
    "input": {
      "required": {
        "photomaker": [
          "PHOTOMAKER"
        ],
        "image": [
          "IMAGE"
        ],
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "photograph of photomaker"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "PhotoMakerEncode",
    "display_name": "PhotoMakerEncode",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "CLIPTextEncodeControlnet": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeControlnet",
    "display_name": "CLIPTextEncodeControlnet",
    "description": "",
    "category": "_for_testing/conditioning",
    "output_node": false
  },
  "Morphology": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "operation": [
          [
            "erode",
            "dilate",
            "open",
            "close",
            "gradient",
            "bottom_hat",
            "top_hat"
          ]
        ],
        "kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 3,
            "max": 999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Morphology",
    "display_name": "ImageMorphology",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "StableCascade_EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 256,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 256,
            "max": 16384,
            "step": 8
          }
        ],
        "compression": [
          "INT",
          {
            "default": 42,
            "min": 4,
            "max": 128,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_EmptyLatentImage",
    "display_name": "StableCascade_EmptyLatentImage",
    "description": "",
    "category": "latent/stable_cascade",
    "output_node": false
  },
  "StableCascade_StageB_Conditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "stage_c": [
          "LATENT"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "StableCascade_StageB_Conditioning",
    "display_name": "StableCascade_StageB_Conditioning",
    "description": "",
    "category": "conditioning/stable_cascade",
    "output_node": false
  },
  "StableCascade_StageC_VAEEncode": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "compression": [
          "INT",
          {
            "default": 42,
            "min": 4,
            "max": 128,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_StageC_VAEEncode",
    "display_name": "StableCascade_StageC_VAEEncode",
    "description": "",
    "category": "latent/stable_cascade",
    "output_node": false
  },
  "StableCascade_SuperResolutionControlnet": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "controlnet_input",
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_SuperResolutionControlnet",
    "display_name": "StableCascade_SuperResolutionControlnet",
    "description": "",
    "category": "_for_testing/stable_cascade",
    "output_node": false
  },
  "DifferentialDiffusion": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "DifferentialDiffusion",
    "display_name": "Differential Diffusion",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "SAMLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_b_01ec64.pth",
            "sam_vit_h_4b8939.pth"
          ]
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAMLoader",
    "display_name": "SAMLoader (Impact)",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "CLIPSegDetectorProvider": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "blur": [
          "FLOAT",
          {
            "min": 0,
            "max": 15,
            "step": 0.1,
            "default": 7
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.05,
            "default": 0.4
          }
        ],
        "dilation_factor": [
          "INT",
          {
            "min": 0,
            "max": 10,
            "step": 1,
            "default": 4
          }
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BBOX_DETECTOR"
    ],
    "name": "CLIPSegDetectorProvider",
    "display_name": "CLIPSegDetectorProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ONNXDetectorProvider": {
    "input": {
      "required": {
        "model_name": [
          []
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BBOX_DETECTOR"
    ],
    "name": "ONNXDetectorProvider",
    "display_name": "ONNXDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "BitwiseAndMaskForEach": {
    "input": {
      "required": {
        "base_segs": [
          "SEGS"
        ],
        "mask_segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "BitwiseAndMaskForEach",
    "display_name": "Bitwise(SEGS & SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMaskForEach": {
    "input": {
      "required": {
        "base_segs": [
          "SEGS"
        ],
        "mask_segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "SubtractMaskForEach",
    "display_name": "Bitwise(SEGS - SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "DetailerForEach": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DetailerForEach",
    "display_name": "Detailer (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebug": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      true,
      true
    ],
    "output_name": [
      "image",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebug",
    "display_name": "DetailerDebug (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      true
    ],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cnet_images"
    ],
    "name": "DetailerForEachPipe",
    "display_name": "Detailer (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebugPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      true,
      true,
      true,
      true
    ],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebugPipe",
    "display_name": "DetailerDebug (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachPipeForAnimateDiff": {
    "input": {
      "required": {
        "image_frames": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      true
    ],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cnet_images"
    ],
    "name": "DetailerForEachPipeForAnimateDiff",
    "display_name": "Detailer For AnimateDiff (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SAMDetectorCombined": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SAMDetectorCombined",
    "display_name": "SAMDetector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SAMDetectorSegmented": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "combined_mask",
      "batch_masks"
    ],
    "name": "SAMDetectorSegmented",
    "display_name": "SAMDetector (segmented)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "FaceDetailer": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      false,
      false,
      true
    ],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailer",
    "display_name": "FaceDetailer",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "FaceDetailerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      false,
      false,
      true
    ],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailerPipe",
    "display_name": "FaceDetailer (pipe)",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "MaskDetailerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "mask bbox",
            "label_off": "crop region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "mask_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "masked only",
            "label_off": "whole"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 10,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "BASIC_PIPE",
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      false,
      false
    ],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "basic_pipe",
      "refiner_basic_pipe_opt"
    ],
    "name": "MaskDetailerPipe",
    "display_name": "MaskDetailer (pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "ToDetailerPipe": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "ToDetailerPipe",
    "display_name": "ToDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToDetailerPipeSDXL": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "ToDetailerPipeSDXL",
    "display_name": "ToDetailerPipeSDXL",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe",
    "display_name": "FromDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe_v2": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe_v2",
    "display_name": "FromDetailerPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook",
      "refiner_model",
      "refiner_clip",
      "refiner_positive",
      "refiner_negative"
    ],
    "name": "FromDetailerPipeSDXL",
    "display_name": "FromDetailer (SDXL/pipe)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToBasicPipe": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "basic_pipe"
    ],
    "name": "ToBasicPipe",
    "display_name": "ToBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "FromBasicPipe",
    "display_name": "FromBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe_v2": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "basic_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "FromBasicPipe_v2",
    "display_name": "FromBasicPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "BasicPipeToDetailerPipe",
    "display_name": "BasicPipe -> DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipeSDXL": {
    "input": {
      "required": {
        "base_basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_basic_pipe": [
          "BASIC_PIPE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "BasicPipeToDetailerPipeSDXL",
    "display_name": "BasicPipe -> DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "DetailerPipeToBasicPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "base_basic_pipe",
      "refiner_basic_pipe"
    ],
    "name": "DetailerPipeToBasicPipe",
    "display_name": "DetailerPipe -> BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "basic_pipe"
    ],
    "name": "EditBasicPipe",
    "display_name": "Edit BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "sam_model": [
          "SAM_MODEL"
        ],
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "EditDetailerPipe",
    "display_name": "Edit DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "sam_model": [
          "SAM_MODEL"
        ],
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "EditDetailerPipeSDXL",
    "display_name": "Edit DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "LatentPixelScale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "vae": [
          "VAE"
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "IMAGE"
    ],
    "name": "LatentPixelScale",
    "display_name": "Latent Scale (on Pixel Space)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelKSampleUpscalerProvider",
    "display_name": "PixelKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelKSampleUpscalerProviderPipe",
    "display_name": "PixelKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeLatentUpscale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": [
          "UPSCALER"
        ],
        "step_mode": [
          [
            "simple",
            "geometric"
          ],
          {
            "default": "simple"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latent",
      "vae"
    ],
    "name": "IterativeLatentUpscale",
    "display_name": "Iterative Upscale (Latent/on Pixel Space)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeImageUpscale": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": [
          "UPSCALER"
        ],
        "vae": [
          "VAE"
        ],
        "step_mode": [
          [
            "simple",
            "geometric"
          ],
          {
            "default": "simple"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "IterativeImageUpscale",
    "display_name": "Iterative Upscale (Image)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelTiledKSampleUpscalerProvider",
    "display_name": "PixelTiledKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelTiledKSampleUpscalerProviderPipe",
    "display_name": "PixelTiledKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": [
          "KSAMPLER"
        ],
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_base_opt": [
          "PK_HOOK"
        ],
        "pk_hook_mask_opt": [
          "PK_HOOK"
        ],
        "pk_hook_full_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "TwoSamplersForMaskUpscalerProvider",
    "display_name": "TwoSamplersForMask Upscaler Provider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "lanczos",
            "area"
          ]
        ],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": [
          "KSAMPLER"
        ],
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_base_opt": [
          "PK_HOOK"
        ],
        "pk_hook_mask_opt": [
          "PK_HOOK"
        ],
        "pk_hook_full_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "TwoSamplersForMaskUpscalerProviderPipe",
    "display_name": "TwoSamplersForMask Upscaler Provider (pipe)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleHookCombine": {
    "input": {
      "required": {
        "hook1": [
          "PK_HOOK"
        ],
        "hook2": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "PixelKSampleHookCombine",
    "display_name": "PixelKSampleHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "DenoiseScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "DenoiseScheduleHookProvider",
    "display_name": "DenoiseScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "StepsScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "StepsScheduleHookProvider",
    "display_name": "StepsScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "CfgScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_cfg": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 0.0,
            "max": 100.0
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "CfgScheduleHookProvider",
    "display_name": "CfgScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "NoiseInjectionHookProvider",
    "display_name": "NoiseInjectionHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "UnsamplerHookProvider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "UnsamplerHookProvider",
    "display_name": "UnsamplerHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "CoreMLDetailerHookProvider": {
    "input": {
      "required": {
        "mode": [
          [
            "512x512",
            "768x768",
            "512x768",
            "768x512"
          ]
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "CoreMLDetailerHookProvider",
    "display_name": "CoreMLDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "PreviewDetailerHookProvider": {
    "input": {
      "required": {
        "quality": [
          "INT",
          {
            "default": 95,
            "min": 20,
            "max": 100
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "DETAILER_HOOK",
      "UPSCALER_HOOK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "DETAILER_HOOK",
      "UPSCALER_HOOK"
    ],
    "name": "PreviewDetailerHookProvider",
    "display_name": "PreviewDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "DetailerHookCombine": {
    "input": {
      "required": {
        "hook1": [
          "DETAILER_HOOK"
        ],
        "hook2": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "DetailerHookCombine",
    "display_name": "DetailerHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [
          [
            "skip_start",
            "from_start"
          ]
        ],
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "NoiseInjectionDetailerHookProvider",
    "display_name": "NoiseInjectionDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "UnsamplerDetailerHookProvider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "schedule_for_cycle": [
          [
            "skip_start",
            "from_start"
          ]
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "UnsamplerDetailerHookProvider",
    "display_name": "UnsamplerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DenoiseSchedulerDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [
          [
            "simple"
          ]
        ],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "DenoiseSchedulerDetailerHookProvider",
    "display_name": "DenoiseSchedulerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSOrderedFilterDetailerHookProvider": {
    "input": {
      "required": {
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2"
          ]
        ],
        "order": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "descending",
            "label_off": "ascending"
          }
        ],
        "take_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "take_count": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "SEGSOrderedFilterDetailerHookProvider",
    "display_name": "SEGSOrderedFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSRangeFilterDetailerHookProvider": {
    "input": {
      "required": {
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent"
          ]
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "inside",
            "label_off": "outside"
          }
        ],
        "min_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "max_value": [
          "INT",
          {
            "default": 67108864,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "SEGSRangeFilterDetailerHookProvider",
    "display_name": "SEGSRangeFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSLabelFilterDetailerHookProvider": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "preset": [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush"
          ]
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "SEGSLabelFilterDetailerHookProvider",
    "display_name": "SEGSLabelFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BitwiseAndMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "BitwiseAndMask",
    "display_name": "Bitwise(MASK & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SubtractMask",
    "display_name": "Bitwise(MASK - MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "AddMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "AddMask",
    "display_name": "Bitwise(MASK + MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMask": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSegsAndMask",
    "display_name": "Bitwise(SEGS & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMaskForEach": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSegsAndMaskForEach",
    "display_name": "Bitwise(SEGS & MASKS ForEach)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "EmptySegs": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "EmptySegs",
    "display_name": "EmptySegs",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "MediaPipeFaceMeshToSEGS": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "crop_min_size": [
          "INT",
          {
            "min": 10,
            "max": 16384,
            "step": 1,
            "default": 50
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 1
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "MediaPipeFaceMeshToSEGS",
    "display_name": "MediaPipe FaceMesh to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "MaskToSEGS",
    "display_name": "MASK to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS_for_AnimateDiff": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "MaskToSEGS_for_AnimateDiff",
    "display_name": "MASK to SEGS for AnimateDiff",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ToBinaryMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ToBinaryMask",
    "display_name": "ToBinaryMask",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MasksToMaskList": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "MASK"
    ],
    "name": "MasksToMaskList",
    "display_name": "Masks to Mask List",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskListToMaskBatch": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "MaskListToMaskBatch",
    "display_name": "Mask List to Masks",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImageListToImageBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageListToImageBatch",
    "display_name": "Image List to Image Batch",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SetDefaultImageForSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "override": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "SetDefaultImageForSEGS",
    "display_name": "Set Default Image for SEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RemoveImageFromSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "RemoveImageFromSEGS",
    "display_name": "Remove Image from SEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "BboxDetectorSEGS",
    "display_name": "BBOX Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorSEGS": {
    "input": {
      "required": {
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "SegmDetectorSEGS",
    "display_name": "SEGM Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ONNXDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ONNXDetectorSEGS",
    "display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS_for_AD": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image_frames": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "masking_mode": [
          [
            "Pivot SEGS",
            "Combine neighboring frames",
            "Don't combine"
          ]
        ],
        "segs_pivot": [
          [
            "Combined mask",
            "1st frame mask"
          ]
        ],
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGS_for_AD",
    "display_name": "Simple Detector for AnimateDiff (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGS",
    "display_name": "Simple Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGSPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "image": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGSPipe",
    "display_name": "Simple Detector (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactControlNetApplySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "segs_preprocessor": [
          "SEGS_PREPROCESSOR"
        ],
        "control_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactControlNetApplySEGS",
    "display_name": "ControlNetApply (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactControlNetApplyAdvancedSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "segs_preprocessor": [
          "SEGS_PREPROCESSOR"
        ],
        "control_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactControlNetApplyAdvancedSEGS",
    "display_name": "ControlNetApplyAdvanced (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactControlNetClearSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactControlNetClearSEGS",
    "display_name": "ImpactControlNetClearSEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactIPAdapterApplySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ],
          {
            "default": "channel penalty"
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "context_crop_factor": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "reference_image": [
          "IMAGE"
        ]
      },
      "optional": {
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "neg_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactIPAdapterApplySEGS",
    "display_name": "IPAdapterApply (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDecomposeSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS_HEADER",
      "SEG_ELT"
    ],
    "output_is_list": [
      false,
      true
    ],
    "output_name": [
      "SEGS_HEADER",
      "SEG_ELT"
    ],
    "name": "ImpactDecomposeSEGS",
    "display_name": "Decompose (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactAssembleSEGS": {
    "input": {
      "required": {
        "seg_header": [
          "SEGS_HEADER"
        ],
        "seg_elt": [
          "SEG_ELT"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactAssembleSEGS",
    "display_name": "Assemble (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ]
      }
    },
    "output": [
      "SEG_ELT",
      "IMAGE",
      "MASK",
      "SEG_ELT_crop_region",
      "SEG_ELT_bbox",
      "SEG_ELT_control_net_wrapper",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "seg_elt",
      "cropped_image",
      "cropped_mask",
      "crop_region",
      "bbox",
      "control_net_wrapper",
      "confidence",
      "label"
    ],
    "name": "ImpactFrom_SEG_ELT",
    "display_name": "From SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactEdit_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ]
      },
      "optional": {
        "cropped_image_opt": [
          "IMAGE"
        ],
        "cropped_mask_opt": [
          "MASK"
        ],
        "crop_region_opt": [
          "SEG_ELT_crop_region"
        ],
        "bbox_opt": [
          "SEG_ELT_bbox"
        ],
        "control_net_wrapper_opt": [
          "SEG_ELT_control_net_wrapper"
        ],
        "confidence_opt": [
          "FLOAT",
          {
            "min": 0,
            "max": 1.0,
            "step": 0.1,
            "forceInput": true
          }
        ],
        "label_opt": [
          "STRING",
          {
            "multiline": false,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactEdit_SEG_ELT",
    "display_name": "Edit SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilate_Mask_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactDilate_Mask_SEG_ELT",
    "display_name": "Dilate Mask (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilateMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactDilateMask",
    "display_name": "Dilate Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactGaussianBlurMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "kernel_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 10.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactGaussianBlurMask",
    "display_name": "Gaussian Blur Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilateMaskInSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactDilateMaskInSEGS",
    "display_name": "Dilate Mask (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactGaussianBlurMaskInSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "kernel_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 10.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactGaussianBlurMaskInSEGS",
    "display_name": "Gaussian Blur Mask (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactScaleBy_BBOX_SEG_ELT": {
    "input": {
      "required": {
        "seg": [
          "SEG_ELT"
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 8.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactScaleBy_BBOX_SEG_ELT",
    "display_name": "ScaleBy BBOX (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT_bbox": {
    "input": {
      "required": {
        "bbox": [
          "SEG_ELT_bbox"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "left",
      "top",
      "right",
      "bottom"
    ],
    "name": "ImpactFrom_SEG_ELT_bbox",
    "display_name": "From SEG_ELT bbox",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT_crop_region": {
    "input": {
      "required": {
        "crop_region": [
          "SEG_ELT_crop_region"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "left",
      "top",
      "right",
      "bottom"
    ],
    "name": "ImpactFrom_SEG_ELT_crop_region",
    "display_name": "From SEG_ELT crop_region",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorCombined_v2": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 4,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "BboxDetectorCombined_v2",
    "display_name": "BBOX Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorCombined_v2": {
    "input": {
      "required": {
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SegmDetectorCombined_v2",
    "display_name": "SEGM Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegsToCombinedMask": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SegsToCombinedMask",
    "display_name": "SEGS to MASK (combined)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "KSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "KSAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "KSAMPLER"
    ],
    "name": "KSamplerProvider",
    "display_name": "KSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoSamplersForMask": {
    "input": {
      "required": {
        "latent_image": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "TwoSamplersForMask",
    "display_name": "TwoSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TiledKSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 16384,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "KSAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "KSAMPLER"
    ],
    "name": "TiledKSamplerProvider",
    "display_name": "TiledKSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "KSamplerAdvancedProvider": {
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "sampler_opt": [
          "SAMPLER"
        ]
      }
    },
    "output": [
      "KSAMPLER_ADVANCED"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "KSAMPLER_ADVANCED"
    ],
    "name": "KSamplerAdvancedProvider",
    "display_name": "KSamplerAdvancedProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoAdvancedSamplersForMask": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "mask_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "mask": [
          "MASK"
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "TwoAdvancedSamplersForMask",
    "display_name": "TwoAdvancedSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "PreviewBridge": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PreviewBridge",
    "display_name": "Preview Bridge (Image)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "PreviewBridgeLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ],
        "preview_method": [
          [
            "Latent2RGB-SDXL",
            "Latent2RGB-SD15",
            "TAESDXL",
            "TAESD15"
          ]
        ]
      },
      "optional": {
        "vae_opt": [
          "VAE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "MASK"
    ],
    "name": "PreviewBridgeLatent",
    "display_name": "Preview Bridge (Latent)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageSender": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ImgSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageSender",
    "display_name": "Image Sender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageReceiver": {
    "input": {
      "required": {
        "image": [
          [
            "2022-06-23 19-46-52-280417 (1).png",
            "2022-06-23 19-46-52-280417.png",
            "ChMkJ13cwnOIK4FoAAXGX559JJgAAvbPAImQfAABcZ3473 (1).jpg",
            "IMG_20230624_115309.jpg",
            "R-C.jpg",
            "example.png",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (1).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (2).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG.webp"
          ]
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "save_to_workflow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageReceiver",
    "display_name": "Image Receiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "LatentSender": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/LatentSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "preview_method": [
          [
            "Latent2RGB-SDXL",
            "Latent2RGB-SD15",
            "TAESDXL",
            "TAESD15"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LatentSender",
    "display_name": "LatentSender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "LatentReceiver": {
    "input": {
      "required": {
        "latent": [
          []
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentReceiver",
    "display_name": "LatentReceiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImageMaskSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "images1": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask1_opt": [
          "MASK"
        ],
        "images2_opt": [
          "IMAGE"
        ],
        "mask2_opt": [
          "MASK"
        ],
        "images3_opt": [
          "IMAGE"
        ],
        "mask3_opt": [
          "MASK"
        ],
        "images4_opt": [
          "IMAGE"
        ],
        "mask4_opt": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageMaskSwitch",
    "display_name": "Switch (images, mask)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "LatentSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "LatentSwitch",
    "display_name": "Switch (latent/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "SEGSSwitch",
    "display_name": "Switch (SEGS/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "ImpactSwitch",
    "display_name": "Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactInversedSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "input": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactInversedSwitch",
    "display_name": "Inversed Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactWildcardProcessor": {
    "input": {
      "required": {
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ImpactWildcardProcessor",
    "display_name": "ImpactWildcardProcessor",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "ImpactWildcardEncode": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "conditioning",
      "populated_text"
    ],
    "name": "ImpactWildcardEncode",
    "display_name": "ImpactWildcardEncode",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "SEGSUpscaler": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "upscaler_hook_opt": [
          "UPSCALER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSUpscaler",
    "display_name": "Upscaler (SEGS)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "SEGSUpscalerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "upscaler_hook_opt": [
          "UPSCALER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSUpscalerPipe",
    "display_name": "Upscaler (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "SEGSDetailer": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true
    ],
    "output_name": [
      "segs",
      "cnet_images"
    ],
    "name": "SEGSDetailer",
    "display_name": "SEGSDetailer",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPaste": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {
        "ref_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSPaste",
    "display_name": "SEGSPaste",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPreview": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "alpha_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "min_alpha": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSPreview",
    "display_name": "SEGSPreview",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSPreviewCNet": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSPreviewCNet",
    "display_name": "SEGSPreview (CNET Image)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSToImageList": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSToImageList",
    "display_name": "SEGSToImageList",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskList": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactSEGSToMaskList",
    "display_name": "SEGS to Mask List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskBatch": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactSEGSToMaskBatch",
    "display_name": "SEGS to Mask Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSConcat": {
    "input": {
      "required": {
        "segs1": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSConcat",
    "display_name": "SEGS Concat",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSPicker": {
    "input": {
      "required": {
        "picks": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "segs": [
          "SEGS"
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSPicker",
    "display_name": "Picker (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImpactMakeTileSEGS": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "bbox_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096,
            "step": 8
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 10,
            "step": 0.1
          }
        ],
        "min_overlap": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 512,
            "step": 1
          }
        ],
        "filter_segs_dilation": [
          "INT",
          {
            "default": 20,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "mask_irregularity": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "irregular_mask_mode": [
          [
            "Reuse fast",
            "Reuse quality",
            "All random fast",
            "All random quality"
          ]
        ]
      },
      "optional": {
        "filter_in_segs_opt": [
          "SEGS"
        ],
        "filter_out_segs_opt": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactMakeTileSEGS",
    "display_name": "Make Tile SEGS",
    "description": "",
    "category": "ImpactPack/__for_testing",
    "output_node": false
  },
  "SEGSDetailerForAnimateDiff": {
    "input": {
      "required": {
        "image_frames": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "SEGS",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true
    ],
    "output_name": [
      "segs",
      "cnet_images"
    ],
    "name": "SEGSDetailerForAnimateDiff",
    "display_name": "SEGSDetailer For AnimateDiff (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "ImpactKSamplerBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "name": "ImpactKSamplerBasicPipe",
    "display_name": "KSampler (pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ImpactKSamplerAdvancedBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "name": "ImpactKSamplerAdvancedBasicPipe",
    "display_name": "KSampler (Advanced/pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ReencodeLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "tile_mode": [
          [
            "None",
            "Both",
            "Decode(input) only",
            "Encode(output) only"
          ]
        ],
        "input_vae": [
          "VAE"
        ],
        "output_vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "ReencodeLatent",
    "display_name": "Reencode Latent",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ReencodeLatentPipe": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "tile_mode": [
          [
            "None",
            "Both",
            "Decode(input) only",
            "Encode(output) only"
          ]
        ],
        "input_basic_pipe": [
          "BASIC_PIPE"
        ],
        "output_basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "ReencodeLatentPipe",
    "display_name": "Reencode Latent (pipe)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactImageBatchToImageList": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactImageBatchToImageList",
    "display_name": "Image batch to Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageList": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactMakeImageList",
    "display_name": "Make Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageBatch": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactMakeImageBatch",
    "display_name": "Make Image Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RegionalSampler": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "seed_2nd": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "seed_2nd_mode": [
          [
            "ignore",
            "fixed",
            "seed+seed_2nd",
            "seed-seed_2nd",
            "increment",
            "decrement",
            "randomize"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "base_only_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "additional_mode": [
          [
            "DISABLE",
            "ratio additional",
            "ratio between"
          ],
          {
            "default": "ratio between"
          }
        ],
        "additional_sampler": [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm"
          ]
        ],
        "additional_sigma_ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RegionalSampler",
    "display_name": "RegionalSampler",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalSamplerAdvanced": {
    "input": {
      "required": {
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "latent_image": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ],
        "additional_mode": [
          [
            "DISABLE",
            "ratio additional",
            "ratio between"
          ],
          {
            "default": "ratio between"
          }
        ],
        "additional_sampler": [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm"
          ]
        ],
        "additional_sigma_ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RegionalSamplerAdvanced",
    "display_name": "RegionalSamplerAdvanced",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "CombineRegionalPrompts": {
    "input": {
      "required": {
        "regional_prompts1": [
          "REGIONAL_PROMPTS"
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "CombineRegionalPrompts",
    "display_name": "CombineRegionalPrompts",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalPrompt": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "advanced_sampler": [
          "KSAMPLER_ADVANCED"
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RegionalPrompt",
    "display_name": "RegionalPrompt",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "ImpactCombineConditionings": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ImpactCombineConditionings",
    "display_name": "Combine Conditionings",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactConcatConditionings": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ImpactConcatConditionings",
    "display_name": "Concat Conditionings",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSLabelAssign": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the label to be assigned in order of segs, separated by commas"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSLabelAssign",
    "display_name": "SEGS Assign (label)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSLabelFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "preset": [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush"
          ]
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSLabelFilter",
    "display_name": "SEGS Filter (label)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSRangeFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent"
          ]
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "inside",
            "label_off": "outside"
          }
        ],
        "min_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "max_value": [
          "INT",
          {
            "default": 67108864,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSRangeFilter",
    "display_name": "SEGS Filter (range)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSOrderedFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2"
          ]
        ],
        "order": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "descending",
            "label_off": "ascending"
          }
        ],
        "take_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "take_count": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSOrderedFilter",
    "display_name": "SEGS Filter (ordered)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactCompare": {
    "input": {
      "required": {
        "cmp": [
          [
            "a = b",
            "a <> b",
            "a > b",
            "a < b",
            "a >= b",
            "a <= b",
            "tt",
            "ff"
          ]
        ],
        "a": [
          "*"
        ],
        "b": [
          "*"
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactCompare",
    "display_name": "ImpactCompare",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalBranch": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN"
        ],
        "tt_value": [
          "*"
        ],
        "ff_value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactConditionalBranch",
    "display_name": "ImpactConditionalBranch",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalBranchSelMode": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN"
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution"
          }
        ]
      },
      "optional": {
        "tt_value": [
          "*"
        ],
        "ff_value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactConditionalBranchSelMode",
    "display_name": "ImpactConditionalBranchSelMode",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactIfNone": {
    "input": {
      "required": {},
      "optional": {
        "signal": [
          "*"
        ],
        "any_input": [
          "*"
        ]
      }
    },
    "output": [
      "*",
      "BOOLEAN"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "signal_opt",
      "bool"
    ],
    "name": "ImpactIfNone",
    "display_name": "ImpactIfNone",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConvertDataType": {
    "input": {
      "required": {
        "value": [
          "*"
        ]
      }
    },
    "output": [
      "STRING",
      "FLOAT",
      "INT",
      "BOOLEAN"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "STRING",
      "FLOAT",
      "INT",
      "BOOLEAN"
    ],
    "name": "ImpactConvertDataType",
    "display_name": "ImpactConvertDataType",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactLogicalOperators": {
    "input": {
      "required": {
        "operator": [
          [
            "and",
            "or",
            "xor"
          ]
        ],
        "bool_a": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "bool_b": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactLogicalOperators",
    "display_name": "ImpactLogicalOperators",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactInt": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "ImpactInt",
    "display_name": "ImpactInt",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactFloat": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -3.402823466e+38,
            "max": 3.402823466e+38
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "ImpactFloat",
    "display_name": "ImpactFloat",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactValueSender": {
    "input": {
      "required": {
        "value": [
          "*"
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal"
    ],
    "name": "ImpactValueSender",
    "display_name": "ImpactValueSender",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactValueReceiver": {
    "input": {
      "required": {
        "typ": [
          [
            "STRING",
            "INT",
            "FLOAT",
            "BOOLEAN"
          ]
        ],
        "value": [
          "STRING",
          {
            "default": ""
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactValueReceiver",
    "display_name": "ImpactValueReceiver",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactImageInfo": {
    "input": {
      "required": {
        "value": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "batch",
      "height",
      "width",
      "channel"
    ],
    "name": "ImpactImageInfo",
    "display_name": "ImpactImageInfo",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactLatentInfo": {
    "input": {
      "required": {
        "value": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "batch",
      "height",
      "width",
      "channel"
    ],
    "name": "ImpactLatentInfo",
    "display_name": "ImpactLatentInfo",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactMinMax": {
    "input": {
      "required": {
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "max",
            "label_off": "min"
          }
        ],
        "a": [
          "*"
        ],
        "b": [
          "*"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "ImpactMinMax",
    "display_name": "ImpactMinMax",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactNeg": {
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactNeg",
    "display_name": "ImpactNeg",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalStopIteration": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactConditionalStopIteration",
    "display_name": "ImpactConditionalStopIteration",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactStringSelector": {
    "input": {
      "required": {
        "strings": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "multiline": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "select": [
          "INT",
          {
            "min": 0,
            "max": 9223372036854775807,
            "step": 1,
            "default": 0
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ImpactStringSelector",
    "display_name": "String Selector",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RemoveNoiseMask": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RemoveNoiseMask",
    "display_name": "Remove Noise Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactLogger": {
    "input": {
      "required": {
        "data": [
          "*",
          ""
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactLogger",
    "display_name": "ImpactLogger",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": true
  },
  "ImpactDummyInput": {
    "input": {
      "required": {}
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactDummyInput",
    "display_name": "ImpactDummyInput",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": false
  },
  "ImpactQueueTrigger": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Trigger",
            "label_off": "Don't trigger"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactQueueTrigger",
    "display_name": "Queue Trigger",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactQueueTriggerCountdown": {
    "input": {
      "required": {
        "count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "total": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 18446744073709551615
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Trigger",
            "label_off": "Don't trigger"
          }
        ]
      },
      "optional": {
        "signal": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "signal_opt",
      "count",
      "total"
    ],
    "name": "ImpactQueueTriggerCountdown",
    "display_name": "Queue Trigger (Countdown)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactSetWidgetValue": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "boolean_value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "int_value": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "float_value": [
          "FLOAT",
          {
            "forceInput": true
          }
        ],
        "string_value": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactSetWidgetValue",
    "display_name": "Set Widget Value",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactNodeSetMuteState": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "set_state": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "active",
            "label_off": "mute"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactNodeSetMuteState",
    "display_name": "Set Mute State",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactControlBridge": {
    "input": {
      "required": {
        "value": [
          "*"
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Active",
            "label_off": "Mute/Bypass"
          }
        ],
        "behavior": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Mute",
            "label_off": "Bypass"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "value"
    ],
    "name": "ImpactControlBridge",
    "display_name": "Control Bridge",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactIsNotEmptySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactIsNotEmptySEGS",
    "display_name": "SEGS isn't Empty",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactSleep": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "seconds": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 3600
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactSleep",
    "display_name": "Sleep",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteBoolean": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteBoolean",
    "display_name": "Remote Boolean (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteInt": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "INT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteInt",
    "display_name": "Remote Int (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactHFTransformersClassifierProvider": {
    "input": {
      "required": {
        "preset_repo_id": [
          [
            "rizvandwiki/gender-classification-2",
            "NTQAI/pedestrian_gender_recognition",
            "Leilab/gender_class",
            "ProjectPersonal/GenderClassifier",
            "crangana/trained-gender",
            "cledoux42/GenderNew_v002",
            "ivensamdh/genderage2",
            "Manual repo id"
          ]
        ],
        "manual_repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "TRANSFORMERS_CLASSIFIER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "TRANSFORMERS_CLASSIFIER"
    ],
    "name": "ImpactHFTransformersClassifierProvider",
    "display_name": "HF Transformers Classifier Provider",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "ImpactSEGSClassify": {
    "input": {
      "required": {
        "classifier": [
          "TRANSFORMERS_CLASSIFIER"
        ],
        "segs": [
          "SEGS"
        ],
        "preset_expr": [
          [
            "#Female > #Male",
            "#Female < #Male",
            "female > 0.5",
            "male > 0.5",
            "Age16to25 > 0.1",
            "Age50to69 > 0.1",
            "Manual expr"
          ]
        ],
        "manual_expr": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "ref_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSClassify",
    "display_name": "SEGS Classify",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "UltralyticsDetectorProvider": {
    "input": {
      "required": {
        "model_name": [
          [
            "bbox/face_yolov8m.pt",
            "bbox/hand_yolov8s.pt",
            "segm/person_yolov8m-seg.pt"
          ]
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "name": "UltralyticsDetectorProvider",
    "display_name": "UltralyticsDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "BLIP Model Loader": {
    "input": {
      "required": {
        "blip_model": [
          [
            "caption",
            "interrogate"
          ]
        ]
      }
    },
    "output": [
      "BLIP_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BLIP_MODEL"
    ],
    "name": "BLIP Model Loader",
    "display_name": "BLIP Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Blend Latents": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "operation": [
          [
            "add",
            "multiply",
            "divide",
            "subtract",
            "overlay",
            "hard_light",
            "soft_light",
            "screen",
            "linear_dodge",
            "difference",
            "exclusion",
            "random"
          ]
        ],
        "blend": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Blend Latents",
    "display_name": "Blend Latents",
    "description": "",
    "category": "WAS Suite/Latent",
    "output_node": false
  },
  "Bus Node": {
    "input": {
      "required": {},
      "optional": {
        "bus": [
          "BUS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BUS",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "bus",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "Bus Node",
    "display_name": "Bus Node",
    "description": "",
    "category": "WAS Suite/Utilities",
    "output_node": false
  },
  "Cache Node": {
    "input": {
      "required": {
        "latent_suffix": [
          "STRING",
          {
            "default": "84107563_cache",
            "multiline": false
          }
        ],
        "image_suffix": [
          "STRING",
          {
            "default": "15139025_cache",
            "multiline": false
          }
        ],
        "conditioning_suffix": [
          "STRING",
          {
            "default": "52369824_cache",
            "multiline": false
          }
        ]
      },
      "optional": {
        "output_path": [
          "STRING",
          {
            "default": "/root/ComfyUI/custom_nodes/was-node-suite-comfyui/cache",
            "multiline": false
          }
        ],
        "latent": [
          "LATENT"
        ],
        "image": [
          "IMAGE"
        ],
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "latent_filename",
      "image_filename",
      "conditioning_filename"
    ],
    "name": "Cache Node",
    "display_name": "Cache Node",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Checkpoint Loader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader",
    "display_name": "Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Checkpoint Loader (Simple)": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader (Simple)",
    "display_name": "Checkpoint Loader (Simple)",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPTextEncode (NSP)": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "conditioning",
      "parsed_text",
      "raw_text"
    ],
    "name": "CLIPTextEncode (NSP)",
    "display_name": "CLIPTextEncode (NSP)",
    "description": "",
    "category": "WAS Suite/Conditioning",
    "output_node": true
  },
  "CLIP Input Switch": {
    "input": {
      "required": {
        "clip_a": [
          "CLIP"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIP Input Switch",
    "display_name": "CLIP Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "CLIP Vision Input Switch": {
    "input": {
      "required": {
        "clip_vision_a": [
          "CLIP_VISION"
        ],
        "clip_vision_b": [
          "CLIP_VISION"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIP Vision Input Switch",
    "display_name": "CLIP Vision Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Conditioning Input Switch": {
    "input": {
      "required": {
        "conditioning_a": [
          "CONDITIONING"
        ],
        "conditioning_b": [
          "CONDITIONING"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Conditioning Input Switch",
    "display_name": "Conditioning Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Constant Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "number": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "number_as_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Constant Number",
    "display_name": "Constant Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Create Grid Image": {
    "input": {
      "required": {
        "images_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/",
            "multiline": false
          }
        ],
        "pattern_glob": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "include_subfolders": [
          [
            "false",
            "true"
          ]
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 1280,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image",
    "display_name": "Create Grid Image",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Grid Image from Batch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 2048,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image from Batch",
    "display_name": "Create Grid Image from Batch",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Morph Image": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500.0,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "image_a_pass",
      "image_b_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image",
    "display_name": "Create Morph Image",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Morph Image from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500.0,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI",
            "multiline": false
          }
        ],
        "input_pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image from Path",
    "display_name": "Create Morph Image from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Video from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.01,
            "max": 60000.0,
            "step": 0.01
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60.0,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI/input",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_video",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Video from Path",
    "display_name": "Create Video from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "CLIPSeg Masking": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "clipseg_model": [
          "CLIPSEG_MODEL"
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MASK",
      "MASK_IMAGE"
    ],
    "name": "CLIPSeg Masking",
    "display_name": "CLIPSeg Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "CLIPSeg Model Loader": {
    "input": {
      "required": {
        "model": [
          "STRING",
          {
            "default": "CIDAS/clipseg-rd64-refined",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "CLIPSEG_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "clipseg_model"
    ],
    "name": "CLIPSeg Model Loader",
    "display_name": "CLIPSeg Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPSeg Batch Masking": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "text_a": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "image_c": [
          "IMAGE"
        ],
        "image_d": [
          "IMAGE"
        ],
        "image_e": [
          "IMAGE"
        ],
        "image_f": [
          "IMAGE"
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_e": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_f": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGES_BATCH",
      "MASKS_BATCH",
      "MASK_IMAGES_BATCH"
    ],
    "name": "CLIPSeg Batch Masking",
    "display_name": "CLIPSeg Batch Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Convert Masks to Images": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGES"
    ],
    "name": "Convert Masks to Images",
    "display_name": "Convert Masks to Images",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Control Net Model Input Switch": {
    "input": {
      "required": {
        "control_net_a": [
          "CONTROL_NET"
        ],
        "control_net_b": [
          "CONTROL_NET"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "Control Net Model Input Switch",
    "display_name": "Control Net Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Debug Number to Console": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NUMBER"
    ],
    "name": "Debug Number to Console",
    "display_name": "Debug Number to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Dictionary to Console": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ],
        "label": [
          "STRING",
          {
            "default": "Dictionary Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DICT"
    ],
    "name": "Dictionary to Console",
    "display_name": "Dictionary to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Diffusers Model Loader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Model Loader",
    "display_name": "Diffusers Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Diffusers Hub Model Down-Loader": {
    "input": {
      "required": {
        "repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "revision": [
          "STRING",
          {
            "default": "None",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Hub Model Down-Loader",
    "display_name": "Diffusers Hub Model Down-Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Export API": {
    "input": {
      "required": {
        "save_prompt_api": [
          [
            "true",
            "true"
          ]
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output/",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI_Prompt"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 2,
            "max": 9,
            "step": 1
          }
        ],
        "parse_text_tokens": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Export API",
    "display_name": "Export API",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Latent Input Switch": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Input Switch",
    "display_name": "Latent Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Load Cache": {
    "input": {
      "required": {
        "latent_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "image_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "conditioning_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "name": "Load Cache",
    "display_name": "Load Cache",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Logic Boolean": {
    "input": {
      "required": {
        "boolean_number": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "INT"
    ],
    "name": "Logic Boolean",
    "display_name": "Logic Boolean",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Boolean Primitive": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Boolean Primitive",
    "display_name": "Logic Boolean Primitive",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison OR": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison OR",
    "display_name": "Logic Comparison OR",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison AND": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison AND",
    "display_name": "Logic Comparison AND",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison XOR": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison XOR",
    "display_name": "Logic Comparison XOR",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic NOT": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic NOT",
    "display_name": "Logic NOT",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Lora Loader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Lora Loader",
    "display_name": "Lora Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Image SSAO (Ambient Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 5.0,
            "default": 1.0,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "ao_blur": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 2.5,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 25,
            "step": 1
          }
        ],
        "enable_specular_masking": [
          [
            "True",
            "False"
          ]
        ],
        "tile_size": [
          "INT",
          {
            "min": 1,
            "max": 512,
            "default": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "composited_images",
      "ssao_images",
      "specular_mask_images"
    ],
    "name": "Image SSAO (Ambient Occlusion)",
    "display_name": "Image SSAO (Ambient Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image SSDO (Direct Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 5.0,
            "default": 1.0,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 128,
            "step": 1
          }
        ],
        "colored_occlusion": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "composited_images",
      "ssdo_images",
      "ssdo_image_masks",
      "light_source_image_masks"
    ],
    "name": "Image SSDO (Direct Occlusion)",
    "display_name": "Image SSDO (Direct Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Analyze": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Black White Levels",
            "RGB Levels"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Analyze",
    "display_name": "Image Analyze",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Aspect Ratio": {
    "input": {
      "required": {},
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "NUMBER"
        ],
        "height": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "NUMBER",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "aspect_number",
      "aspect_float",
      "is_landscape_bool",
      "aspect_ratio_common",
      "aspect_type"
    ],
    "name": "Image Aspect Ratio",
    "display_name": "Image Aspect Ratio",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Batch": {
    "input": {
      "required": {},
      "optional": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_c": [
          "IMAGE"
        ],
        "images_d": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Batch",
    "display_name": "Image Batch",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blank": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blank",
    "display_name": "Image Blank",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend by Mask": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mask": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blend by Mask",
    "display_name": "Image Blend by Mask",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Blend",
    "display_name": "Image Blend",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blending Mode": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mode": [
          [
            "add",
            "color",
            "color_burn",
            "color_dodge",
            "darken",
            "difference",
            "exclusion",
            "hard_light",
            "hue",
            "lighten",
            "multiply",
            "overlay",
            "screen",
            "soft_light"
          ]
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Blending Mode",
    "display_name": "Image Blending Mode",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Bloom Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 10,
            "min": 0.0,
            "max": 1024,
            "step": 0.1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Bloom Filter",
    "display_name": "Image Bloom Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Canny Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "enable_threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Canny Filter",
    "display_name": "Image Canny Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Chromatic Aberration": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red_offset": [
          "INT",
          {
            "default": 2,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "green_offset": [
          "INT",
          {
            "default": -1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "blue_offset": [
          "INT",
          {
            "default": 1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "fade_radius": [
          "INT",
          {
            "default": 12,
            "min": 0,
            "max": 1024,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Chromatic Aberration",
    "display_name": "Image Chromatic Aberration",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Color Palette": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 16,
            "min": 8,
            "max": 256,
            "step": 1
          }
        ],
        "mode": [
          [
            "Chart",
            "back_to_back"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "LIST"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "color_palettes"
    ],
    "name": "Image Color Palette",
    "display_name": "Image Color Palette",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Crop Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_padding_factor": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 2.0,
            "step": 0.01
          }
        ],
        "cascade_xml": [
          [
            "lbpcascade_animeface.xml",
            "haarcascade_frontalface_default.xml",
            "haarcascade_frontalface_alt.xml",
            "haarcascade_frontalface_alt2.xml",
            "haarcascade_frontalface_alt_tree.xml",
            "haarcascade_profileface.xml",
            "haarcascade_upperbody.xml",
            "haarcascade_eye.xml"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Face",
    "display_name": "Image Crop Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Location",
    "display_name": "Image Crop Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Square Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "max": 4096,
            "min": 5,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Square Location",
    "display_name": "Image Crop Square Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Displacement Warp": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "displacement_maps": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 25.0,
            "min": -4096,
            "max": 4096,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Displacement Warp",
    "display_name": "Image Displacement Warp",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Lucy Sharpen": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "iterations": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Lucy Sharpen",
    "display_name": "Image Lucy Sharpen",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Paste Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK_IMAGE"
    ],
    "name": "Image Paste Face",
    "display_name": "Image Paste Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop",
    "display_name": "Image Paste Crop",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop by Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop by Location",
    "display_name": "Image Paste Crop by Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Pixelate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "pixelation_size": [
          "FLOAT",
          {
            "default": 164,
            "min": 16,
            "max": 480,
            "step": 1
          }
        ],
        "num_colors": [
          "FLOAT",
          {
            "default": 16,
            "min": 2,
            "max": 256,
            "step": 1
          }
        ],
        "init_mode": [
          [
            "k-means++",
            "random",
            "none"
          ]
        ],
        "max_iterations": [
          "FLOAT",
          {
            "default": 100,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "False",
            "True"
          ]
        ],
        "dither_mode": [
          [
            "FloydSteinberg",
            "Ordered"
          ]
        ]
      },
      "optional": {
        "color_palettes": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "color_palette_mode": [
          [
            "Brightness",
            "BrightnessAndTonal",
            "Linear",
            "Tonal"
          ]
        ],
        "reverse_palette": [
          [
            "False",
            "True"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Pixelate",
    "display_name": "Image Pixelate",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Power Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "attenuation": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "noise_type": [
          [
            "grey",
            "white",
            "pink",
            "blue",
            "green",
            "mix"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Power Noise",
    "display_name": "Image Power Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Dragan Photography Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 6.0,
            "step": 0.01
          }
        ],
        "highpass_radius": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.01
          }
        ],
        "highpass_samples": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 6.0,
            "step": 1
          }
        ],
        "highpass_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 3.0,
            "step": 0.01
          }
        ],
        "colorize": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Dragan Photography Filter",
    "display_name": "Image Dragan Photography Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Edge Detection Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "normal",
            "laplacian"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Edge Detection Filter",
    "display_name": "Image Edge Detection Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Film Grain": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "density": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "highlights": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 255.0,
            "step": 0.01
          }
        ],
        "supersample_factor": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 8,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Film Grain",
    "display_name": "Image Film Grain",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Filter Adjustments": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -1.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1.0,
            "max": 2.0,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 5.0,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -5.0,
            "max": 5.0,
            "step": 0.01
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ],
        "gaussian_blur": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1024.0,
            "step": 0.1
          }
        ],
        "edge_enhance": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "detail_enhance": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Filter Adjustments",
    "display_name": "Image Filter Adjustments",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Flip": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "horizontal",
            "vertical"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Flip",
    "display_name": "Image Flip",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Gradient Map": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "gradient_image": [
          "IMAGE"
        ],
        "flip_left_right": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Gradient Map",
    "display_name": "Image Gradient Map",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Generate Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "direction": [
          [
            "horizontal",
            "vertical"
          ]
        ],
        "tolerance": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "min": 0,
            "step": 1
          }
        ],
        "gradient_stops": [
          "STRING",
          {
            "default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Generate Gradient",
    "display_name": "Image Generate Gradient",
    "description": "",
    "category": "WAS Suite/Image/Generate",
    "output_node": false
  },
  "Image High Pass Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 500,
            "step": 1
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "color_output": [
          [
            "true",
            "false"
          ]
        ],
        "neutral_background": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image High Pass Filter",
    "display_name": "Image High Pass Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image History Loader": {
    "input": {
      "required": {
        "image": [
          [
            "No History"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Image History Loader",
    "display_name": "Image History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Image Input Switch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Input Switch",
    "display_name": "Image Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Levels Adjustment": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "black_level": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "mid_level": [
          "FLOAT",
          {
            "default": 127.5,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "white_level": [
          "FLOAT",
          {
            "default": 255,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Levels Adjustment",
    "display_name": "Image Levels Adjustment",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Load": {
    "input": {
      "required": {
        "image_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/example.png",
            "multiline": false
          }
        ],
        "RGBA": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "image",
      "mask",
      "filename_text"
    ],
    "name": "Image Load",
    "display_name": "Image Load",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Image Median Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "diameter": [
          "INT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 255,
            "step": 1
          }
        ],
        "sigma_color": [
          "FLOAT",
          {
            "default": 10.0,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "sigma_space": [
          "FLOAT",
          {
            "default": 10.0,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Median Filter",
    "display_name": "Image Median Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Mix RGB Channels": {
    "input": {
      "required": {
        "red_channel": [
          "IMAGE"
        ],
        "green_channel": [
          "IMAGE"
        ],
        "blue_channel": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Mix RGB Channels",
    "display_name": "Image Mix RGB Channels",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Monitor Effects Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Digital Distortion",
            "Signal Distortion",
            "TV Distortion"
          ]
        ],
        "amplitude": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "offset": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Monitor Effects Filter",
    "display_name": "Image Monitor Effects Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Nova Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 3.14,
            "min": 0.0,
            "max": 100.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Nova Filter",
    "display_name": "Image Nova Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Padding": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "feathering": [
          "INT",
          {
            "default": 120,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ],
        "feather_second_pass": [
          [
            "true",
            "false"
          ]
        ],
        "left_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "right_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "top_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "bottom_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Padding",
    "display_name": "Image Padding",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Perlin Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Noise",
    "display_name": "Image Perlin Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Rembg (Remove Background)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "transparency": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "model": [
          [
            "u2net",
            "u2netp",
            "u2net_human_seg",
            "silueta",
            "isnet-general-use",
            "isnet-anime"
          ]
        ],
        "post_processing": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "only_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "background_color": [
          [
            "none",
            "black",
            "white",
            "magenta",
            "chroma green",
            "chroma blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Rembg (Remove Background)",
    "display_name": "Image Rembg (Remove Background)",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Image Perlin Power Fractal": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "lacunarity": [
          "FLOAT",
          {
            "default": 2.0,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "exponent": [
          "FLOAT",
          {
            "default": 2.0,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Power Fractal",
    "display_name": "Image Perlin Power Fractal",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Remove Background (Alpha)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "background",
            "foreground"
          ]
        ],
        "threshold": [
          "INT",
          {
            "default": 127,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_tolerance": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Remove Background (Alpha)",
    "display_name": "Image Remove Background (Alpha)",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Remove Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "target_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "clip_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Remove Color",
    "display_name": "Image Remove Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Resize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "rescale",
            "resize"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "resampling": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "resize_width": [
          "INT",
          {
            "default": 1024,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ],
        "resize_height": [
          "INT",
          {
            "default": 1536,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Resize",
    "display_name": "Image Resize",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "transpose",
            "internal"
          ]
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 360,
            "step": 90
          }
        ],
        "sampler": [
          [
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Rotate",
    "display_name": "Image Rotate",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate Hue": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "hue_shift": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Rotate Hue",
    "display_name": "Image Rotate Hue",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Save": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "output_path": [
          "STRING",
          {
            "default": "[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 9,
            "step": 1
          }
        ],
        "filename_number_start": [
          [
            "false",
            "true"
          ]
        ],
        "extension": [
          [
            "png",
            "jpg",
            "jpeg",
            "gif",
            "tiff",
            "webp",
            "bmp"
          ]
        ],
        "quality": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "lossless_webp": [
          [
            "false",
            "true"
          ]
        ],
        "overwrite_mode": [
          [
            "false",
            "prefix_as_filename"
          ]
        ],
        "show_history": [
          [
            "false",
            "true"
          ]
        ],
        "show_history_by_prefix": [
          [
            "true",
            "false"
          ]
        ],
        "embed_workflow": [
          [
            "true",
            "false"
          ]
        ],
        "show_previews": [
          [
            "true",
            "false"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Image Save",
    "display_name": "Image Save",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Image Seamless Texture": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "blending": [
          "FLOAT",
          {
            "default": 0.4,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "tiled": [
          [
            "true",
            "false"
          ]
        ],
        "tiles": [
          "INT",
          {
            "default": 2,
            "max": 6,
            "min": 2,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Seamless Texture",
    "display_name": "Image Seamless Texture",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Channel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Channel",
    "display_name": "Image Select Channel",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red": [
          "INT",
          {
            "default": 255.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "variance": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Color",
    "display_name": "Image Select Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Shadows and Highlights": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "shadow_threshold": [
          "FLOAT",
          {
            "default": 75,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "shadow_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": -12.0,
            "max": 12.0,
            "step": 0.1
          }
        ],
        "shadow_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "highlight_threshold": [
          "FLOAT",
          {
            "default": 175,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "highlight_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -12.0,
            "max": 12.0,
            "step": 0.1
          }
        ],
        "highlight_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "simplify_isolation": [
          "FLOAT",
          {
            "default": 0,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "image",
      "shadow_map",
      "highlight_map"
    ],
    "name": "Image Shadows and Highlights",
    "display_name": "Image Shadows and Highlights",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Size to Number": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "width_num",
      "height_num",
      "width_float",
      "height_float",
      "width_int",
      "height_int"
    ],
    "name": "Image Size to Number",
    "display_name": "Image Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Image Stitch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "stitch": [
          [
            "top",
            "left",
            "bottom",
            "right"
          ]
        ],
        "feathering": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Stitch",
    "display_name": "Image Stitch",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Style Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "style": [
          [
            "1977",
            "aden",
            "brannan",
            "brooklyn",
            "clarendon",
            "earlybird",
            "fairy tale",
            "gingham",
            "hudson",
            "inkwell",
            "kelvin",
            "lark",
            "lofi",
            "maven",
            "mayfair",
            "moon",
            "nashville",
            "perpetua",
            "reyes",
            "rise",
            "slumber",
            "stinson",
            "toaster",
            "valencia",
            "walden",
            "willow",
            "xpro2"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Style Filter",
    "display_name": "Image Style Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Threshold": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Threshold",
    "display_name": "Image Threshold",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Tiled": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "num_tiles": [
          "INT",
          {
            "default": 4,
            "max": 64,
            "min": 2,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGES"
    ],
    "name": "Image Tiled",
    "display_name": "Image Tiled",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Transpose": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_overlay": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "X": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "Y": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Transpose",
    "display_name": "Image Transpose",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image fDOF Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "depth": [
          "IMAGE"
        ],
        "mode": [
          [
            "mock",
            "gaussian",
            "box"
          ]
        ],
        "radius": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 128,
            "step": 1
          }
        ],
        "samples": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image fDOF Filter",
    "display_name": "Image fDOF Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image to Latent Mask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Image to Latent Mask",
    "display_name": "Image to Latent Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Image to Noise": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "num_colors": [
          "INT",
          {
            "default": 16,
            "max": 256,
            "min": 2,
            "step": 2
          }
        ],
        "black_mix": [
          "INT",
          {
            "default": 0,
            "max": 20,
            "min": 0,
            "step": 1
          }
        ],
        "gaussian_mix": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1024,
            "min": 0,
            "step": 0.1
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_mode": [
          [
            "batch",
            "list"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image to Noise",
    "display_name": "Image to Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image to Seed": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "INT"
    ],
    "name": "Image to Seed",
    "display_name": "Image to Seed",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Images to RGB": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to RGB",
    "display_name": "Images to RGB",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Images to Linear": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to Linear",
    "display_name": "Images to Linear",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Integer place counter": {
    "input": {
      "required": {
        "int_input": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT_PLACES"
    ],
    "name": "Integer place counter",
    "display_name": "Integer place counter",
    "description": "",
    "category": "WAS Suite/Integer",
    "output_node": false
  },
  "Image Voronoi Noise Filter": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "density": [
          "INT",
          {
            "default": 50,
            "max": 256,
            "min": 10,
            "step": 2
          }
        ],
        "modulator": [
          "INT",
          {
            "default": 0,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "flat": [
          [
            "False",
            "True"
          ]
        ],
        "RGB_output": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Voronoi Noise Filter",
    "display_name": "Image Voronoi Noise Filter",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "KSampler (WAS)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "SEED"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler (WAS)",
    "display_name": "KSampler (WAS)",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "KSampler Cycle": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "tiled_vae": [
          [
            "disable",
            "enable"
          ]
        ],
        "latent_upscale": [
          [
            "disable",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 8.0,
            "step": 0.1
          }
        ],
        "upscale_cycles": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 12,
            "step": 1
          }
        ],
        "starting_denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "cycle_denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "scale_denoise": [
          [
            "enable",
            "disable"
          ]
        ],
        "scale_sampling": [
          [
            "bilinear",
            "bicubic",
            "nearest",
            "lanczos"
          ]
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": {
        "secondary_model": [
          "MODEL"
        ],
        "secondary_start_cycle": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 16,
            "step": 1
          }
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "processor_model": [
          "UPSCALE_MODEL"
        ],
        "pos_additive": [
          "CONDITIONING"
        ],
        "neg_additive": [
          "CONDITIONING"
        ],
        "pos_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "pos_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "pos_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "pos_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.01,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "neg_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "neg_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "neg_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "neg_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.01,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "sharpen_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "steps_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "steps_control": [
          [
            "decrement",
            "increment"
          ]
        ],
        "steps_scaling_value": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "steps_cutoff": [
          "INT",
          {
            "default": 20,
            "min": 4,
            "max": 1000,
            "step": 1
          }
        ],
        "denoise_cutoff": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "latent(s)"
    ],
    "name": "KSampler Cycle",
    "display_name": "KSampler Cycle",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "Latent Batch": {
    "input": {
      "required": {},
      "optional": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "latent_c": [
          "LATENT"
        ],
        "latent_d": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "latent"
    ],
    "name": "Latent Batch",
    "display_name": "Latent Batch",
    "description": "",
    "category": "WAS Suite/Latent",
    "output_node": false
  },
  "Latent Noise Injection": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "noise_std": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Noise Injection",
    "display_name": "Latent Noise Injection",
    "description": "",
    "category": "WAS Suite/Latent/Generate",
    "output_node": false
  },
  "Latent Size to Number": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "tensor_w_num",
      "tensor_h_num"
    ],
    "name": "Latent Size to Number",
    "display_name": "Latent Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Latent Upscale by Factor (WAS)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mode": [
          [
            "area",
            "bicubic",
            "bilinear",
            "nearest"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 8.0,
            "step": 0.01
          }
        ],
        "align": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Upscale by Factor (WAS)",
    "display_name": "Latent Upscale by Factor (WAS)",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "Load Image Batch": {
    "input": {
      "required": {
        "mode": [
          [
            "single_image",
            "incremental_image",
            "random"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 150000,
            "step": 1
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Batch 001",
            "multiline": false
          }
        ],
        "path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "allow_RGBA_output": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Load Image Batch",
    "display_name": "Load Image Batch",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Text File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Load Text File",
    "display_name": "Load Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Lora": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Load Lora",
    "display_name": "Load Lora",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Lora Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "clip_a": [
          "CLIP"
        ],
        "model_b": [
          "MODEL"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "Lora Input Switch",
    "display_name": "Lora Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Masks Add": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Add",
    "display_name": "Masks Add",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Subtract": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Subtract",
    "display_name": "Masks Subtract",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Arbitrary Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Arbitrary Region",
    "display_name": "Mask Arbitrary Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch to Mask": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "batch_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "Mask Batch to Mask",
    "display_name": "Mask Batch to Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch": {
    "input": {
      "optional": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ],
        "masks_c": [
          "MASK"
        ],
        "masks_d": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "masks"
    ],
    "name": "Mask Batch",
    "display_name": "Mask Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Ceiling Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Ceiling Region",
    "display_name": "Mask Ceiling Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Dominant Region",
    "display_name": "Mask Crop Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Minority Region",
    "display_name": "Mask Crop Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "region_type": [
          [
            "dominant",
            "minority"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "CROP_DATA",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "cropped_mask",
      "crop_data",
      "top_int",
      "left_int",
      "right_int",
      "bottom_int",
      "width_int",
      "height_int"
    ],
    "name": "Mask Crop Region",
    "display_name": "Mask Crop Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Paste Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "crop_mask": [
          "MASK"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MASK",
      "MASK"
    ],
    "name": "Mask Paste Region",
    "display_name": "Mask Paste Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dilate Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dilate Region",
    "display_name": "Mask Dilate Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dominant Region",
    "display_name": "Mask Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Erode Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Erode Region",
    "display_name": "Mask Erode Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Fill Holes": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Fill Holes",
    "display_name": "Mask Fill Holes",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Floor Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Floor Region",
    "display_name": "Mask Floor Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Gaussian Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 1024,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Gaussian Region",
    "display_name": "Mask Gaussian Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Invert": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Invert",
    "display_name": "Mask Invert",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Minority Region",
    "display_name": "Mask Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Smooth Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 128.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Smooth Region",
    "display_name": "Mask Smooth Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Threshold Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "black_threshold": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "white_threshold": [
          "INT",
          {
            "default": 175,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Threshold Region",
    "display_name": "Mask Threshold Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Regions": {
    "input": {
      "required": {
        "mask_a": [
          "MASK"
        ],
        "mask_b": [
          "MASK"
        ]
      },
      "optional": {
        "mask_c": [
          "MASK"
        ],
        "mask_d": [
          "MASK"
        ],
        "mask_e": [
          "MASK"
        ],
        "mask_f": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Regions",
    "display_name": "Masks Combine Regions",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Batch": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Batch",
    "display_name": "Masks Combine Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "MiDaS Model Loader": {
    "input": {
      "required": {
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ]
      }
    },
    "output": [
      "MIDAS_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "midas_model"
    ],
    "name": "MiDaS Model Loader",
    "display_name": "MiDaS Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "MiDaS Depth Approximation": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_type": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ],
        "invert_depth": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "midas_model": [
          "MIDAS_MODEL"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "MiDaS Depth Approximation",
    "display_name": "MiDaS Depth Approximation",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "MiDaS Mask Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid",
            "DPT_Small"
          ]
        ],
        "remove": [
          [
            "background",
            "foregroud"
          ]
        ],
        "threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_mid": [
          "FLOAT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 210,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "background_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "MiDaS Mask Image",
    "display_name": "MiDaS Mask Image",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Model Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "model_b": [
          "MODEL"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "Model Input Switch",
    "display_name": "Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Counter": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float"
          ]
        ],
        "mode": [
          [
            "increment",
            "decrement",
            "increment_to_stop",
            "decrement_to_stop"
          ]
        ],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615,
            "step": 0.01
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615,
            "step": 0.01
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 99999,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "reset_bool": [
          "NUMBER"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "number",
      "float",
      "int"
    ],
    "name": "Number Counter",
    "display_name": "Number Counter",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number Operation": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "operation": [
          [
            "addition",
            "subtraction",
            "division",
            "floor division",
            "multiplication",
            "exponentiation",
            "modulus",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Operation",
    "display_name": "Number Operation",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Float": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Number to Float",
    "display_name": "Number to Float",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number Input Switch": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Switch",
    "display_name": "Number Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Input Condition": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "return_boolean": [
          [
            "false",
            "true"
          ]
        ],
        "comparison": [
          [
            "and",
            "or",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal",
            "divisible by",
            "if A odd",
            "if A even",
            "if A prime",
            "factor of"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Condition",
    "display_name": "Number Input Condition",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Multiple Of": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "multiple": [
          "INT",
          {
            "default": 8,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Multiple Of",
    "display_name": "Number Multiple Of",
    "description": "",
    "category": "WAS Suite/Number/Functions",
    "output_node": false
  },
  "Number PI": {
    "input": {
      "required": {}
    },
    "output": [
      "NUMBER",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT"
    ],
    "name": "Number PI",
    "display_name": "Number PI",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number to Int": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Number to Int",
    "display_name": "Number to Int",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Seed": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "SEED"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEED"
    ],
    "name": "Number to Seed",
    "display_name": "Number to Seed",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to String": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Number to String",
    "display_name": "Number to String",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Text": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Number to Text",
    "display_name": "Number to Text",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Boolean To Text": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Boolean To Text",
    "display_name": "Boolean To Text",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Prompt Styles Selector": {
    "input": {
      "required": {
        "style": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Styles Selector",
    "display_name": "Prompt Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Prompt Multiple Styles Selector": {
    "input": {
      "required": {
        "style1": [
          [
            "None"
          ]
        ],
        "style2": [
          [
            "None"
          ]
        ],
        "style3": [
          [
            "None"
          ]
        ],
        "style4": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Multiple Styles Selector",
    "display_name": "Prompt Multiple Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Random Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Random Number",
    "display_name": "Random Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Save Text File": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "path": [
          "STRING",
          {
            "default": "./ComfyUI/output/[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 2,
            "max": 9,
            "step": 1
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Text File",
    "display_name": "Save Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "SEED",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "seed",
      "number",
      "float",
      "int"
    ],
    "name": "Seed",
    "display_name": "Seed",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Tensor Batch to Image": {
    "input": {
      "required": {
        "images_batch": [
          "IMAGE"
        ],
        "batch_image_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Tensor Batch to Image",
    "display_name": "Tensor Batch to Image",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "BLIP Analyze Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "caption",
            "interrogate"
          ]
        ],
        "question": [
          "STRING",
          {
            "default": "What does the background consist of?",
            "multiline": true
          }
        ]
      },
      "optional": {
        "blip_model": [
          "BLIP_MODEL"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "BLIP Analyze Image",
    "display_name": "BLIP Analyze Image",
    "description": "",
    "category": "WAS Suite/Text/AI",
    "output_node": false
  },
  "SAM Model Loader": {
    "input": {
      "required": {
        "model_size": [
          [
            "ViT-H",
            "ViT-L",
            "ViT-B"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAM Model Loader",
    "display_name": "SAM Model Loader",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters": {
    "input": {
      "required": {
        "points": [
          "STRING",
          {
            "default": "[128, 128]; [0, 0]",
            "multiline": false
          }
        ],
        "labels": [
          "STRING",
          {
            "default": "[1, 0]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters",
    "display_name": "SAM Parameters",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters Combine": {
    "input": {
      "required": {
        "sam_parameters_a": [
          "SAM_PARAMETERS"
        ],
        "sam_parameters_b": [
          "SAM_PARAMETERS"
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters Combine",
    "display_name": "SAM Parameters Combine",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Image Mask": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "sam_parameters": [
          "SAM_PARAMETERS"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SAM Image Mask",
    "display_name": "SAM Image Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Samples Passthrough (Stat System)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "samples"
    ],
    "name": "Samples Passthrough (Stat System)",
    "display_name": "Samples Passthrough (Stat System)",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": false
  },
  "String to Text": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {}
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "String to Text",
    "display_name": "String to Text",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Image Bounds": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds",
    "display_name": "Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Inset Image Bounds": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "inset_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "inset_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "inset_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "inset_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Inset Image Bounds",
    "display_name": "Inset Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend",
    "display_name": "Bounded Image Blend",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend with Mask": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_mask": [
          "MASK"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend with Mask",
    "display_name": "Bounded Image Blend with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_bounds": [
          "IMAGE_BOUNDS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Crop",
    "display_name": "Bounded Image Crop",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop with Mask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "padding_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "padding_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "padding_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "padding_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "name": "Bounded Image Crop with Mask",
    "display_name": "Bounded Image Crop with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Image Bounds to Console": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds to Console",
    "display_name": "Image Bounds to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text Dictionary Update": {
    "input": {
      "required": {
        "dictionary_a": [
          "DICT"
        ],
        "dictionary_b": [
          "DICT"
        ]
      },
      "optional": {
        "dictionary_c": [
          "DICT"
        ],
        "dictionary_d": [
          "DICT"
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary Update",
    "display_name": "Text Dictionary Update",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Get": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ],
        "key": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "default_value": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Dictionary Get",
    "display_name": "Text Dictionary Get",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Convert": {
    "input": {
      "required": {
        "dictionary_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary Convert",
    "display_name": "Text Dictionary Convert",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary New": {
    "input": {
      "required": {
        "key_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "key_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary New",
    "display_name": "Text Dictionary New",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Keys": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ]
      },
      "optional": {}
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LIST"
    ],
    "name": "Text Dictionary Keys",
    "display_name": "Text Dictionary Keys",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary To Text": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ]
      },
      "optional": {}
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Dictionary To Text",
    "display_name": "Text Dictionary To Text",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Add Tokens": {
    "input": {
      "required": {
        "tokens": [
          "STRING",
          {
            "default": "[hello]: world",
            "multiline": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Tokens",
    "display_name": "Text Add Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Add Token by Input": {
    "input": {
      "required": {
        "token_name": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "token_value": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Token by Input",
    "display_name": "Text Add Token by Input",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Compare": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "mode": [
          [
            "similarity",
            "difference"
          ]
        ],
        "tolerance": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "BOOLEAN",
      "NUMBER",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "TEXT_A_PASS",
      "TEXT_B_PASS",
      "BOOLEAN",
      "SCORE_NUMBER",
      "COMPARISON_TEXT"
    ],
    "name": "Text Compare",
    "display_name": "Text Compare",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Concatenate": {
    "input": {
      "required": {
        "delimiter": [
          "STRING",
          {
            "default": ", "
          }
        ],
        "clean_whitespace": [
          [
            "true",
            "false"
          ]
        ]
      },
      "optional": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Concatenate",
    "display_name": "Text Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text File History Loader": {
    "input": {
      "required": {
        "file": [
          [
            "No History"
          ]
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Text File History Loader",
    "display_name": "Text File History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Text Find and Replace by Dictionary": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "dictionary": [
          "DICT"
        ],
        "replacement_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Find and Replace by Dictionary",
    "display_name": "Text Find and Replace by Dictionary",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace Input": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "replace": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace Input",
    "display_name": "Text Find and Replace Input",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace",
    "display_name": "Text Find and Replace",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Input Switch": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Input Switch",
    "display_name": "Text Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Text List": {
    "input": {
      "required": {},
      "optional": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_e": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_f": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_g": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LIST"
    ],
    "name": "Text List",
    "display_name": "Text List",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text List Concatenate": {
    "input": {
      "required": {},
      "optional": {
        "list_a": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_b": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_c": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_d": [
          "LIST",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LIST"
    ],
    "name": "Text List Concatenate",
    "display_name": "Text List Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text List to Text": {
    "input": {
      "required": {
        "delimiter": [
          "STRING",
          {
            "default": ", "
          }
        ],
        "text_list": [
          "LIST",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text List to Text",
    "display_name": "Text List to Text",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Load Line From File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ],
        "label": [
          "STRING",
          {
            "default": "TextBatch",
            "multiline": false
          }
        ],
        "mode": [
          [
            "automatic",
            "index"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "multiline_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "line_text",
      "dictionary"
    ],
    "name": "Text Load Line From File",
    "display_name": "Text Load Line From File",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Multiline": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Multiline",
    "display_name": "Text Multiline",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Parse A1111 Embeddings": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse A1111 Embeddings",
    "display_name": "Text Parse A1111 Embeddings",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": false
  },
  "Text Parse Noodle Soup Prompts": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Noodle Soup Prompts",
    "display_name": "Text Parse Noodle Soup Prompts",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": true
  },
  "Text Parse Tokens": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Tokens",
    "display_name": "Text Parse Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": false
  },
  "Text Random Line": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Line",
    "display_name": "Text Random Line",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Random Prompt": {
    "input": {
      "required": {
        "search_seed": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Prompt",
    "display_name": "Text Random Prompt",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String",
    "display_name": "Text String",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Contains": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "sub_text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "case_insensitive": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Text Contains",
    "display_name": "Text Contains",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Text Shuffle": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "separator": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Shuffle",
    "display_name": "Text Shuffle",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Conditioning": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Text to Conditioning",
    "display_name": "Text to Conditioning",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Console": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Text Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text to Console",
    "display_name": "Text to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text to Number": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NUMBER"
    ],
    "name": "Text to Number",
    "display_name": "Text to Number",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text to String",
    "display_name": "Text to String",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text String Truncate": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "truncate_by": [
          [
            "characters",
            "words"
          ]
        ],
        "truncate_from": [
          [
            "end",
            "beginning"
          ]
        ],
        "truncate_to": [
          "INT",
          {
            "default": 10,
            "min": -99999999,
            "max": 99999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String Truncate",
    "display_name": "Text String Truncate",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "True Random.org Number Generator": {
    "input": {
      "required": {
        "api_key": [
          "STRING",
          {
            "default": "00000000-0000-0000-0000-000000000000",
            "multiline": false
          }
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 10000000,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "mode": [
          [
            "random",
            "fixed"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "True Random.org Number Generator",
    "display_name": "True Random.org Number Generator",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "unCLIP Checkpoint Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "NAME_STRING"
    ],
    "name": "unCLIP Checkpoint Loader",
    "display_name": "unCLIP Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Loader": {
    "input": {
      "required": {
        "model_name": [
          [
            "RealESRGAN_x2plus.pth",
            "RealESRGAN_x4plus.pth",
            "RealESRGAN_x4plus_anime_6B.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "UPSCALE_MODEL",
      "MODEL_NAME_TEXT"
    ],
    "name": "Upscale Model Loader",
    "display_name": "Upscale Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Switch": {
    "input": {
      "required": {
        "upscale_model_a": [
          "UPSCALE_MODEL"
        ],
        "upscale_model_b": [
          "UPSCALE_MODEL"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "Upscale Model Switch",
    "display_name": "Upscale Model Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Write to GIF": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "image_delay_ms": [
          "FLOAT",
          {
            "default": 2500.0,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "/root/ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph_writer",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "image_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to GIF",
    "display_name": "Write to GIF",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "Write to Video": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60.0,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_writer",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE_PASS",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to Video",
    "display_name": "Write to Video",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "VAE Input Switch": {
    "input": {
      "required": {
        "vae_a": [
          "VAE"
        ],
        "vae_b": [
          "VAE"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VAE"
    ],
    "name": "VAE Input Switch",
    "display_name": "VAE Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Video Dump Frames": {
    "input": {
      "required": {
        "video_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo.mp4",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo",
            "multiline": false
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "frame_",
            "multiline": false
          }
        ],
        "filenumber_digits": [
          "INT",
          {
            "default": 4,
            "min": -1,
            "max": 8,
            "step": 1
          }
        ],
        "extension": [
          [
            "png",
            "jpg",
            "gif",
            "tiff"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output_path",
      "processed_count"
    ],
    "name": "Video Dump Frames",
    "display_name": "Video Dump Frames",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "CLIPTextEncode (BlenderNeko Advanced + NSP)": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++"
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "conditioning",
      "parsed_text",
      "raw_text"
    ],
    "name": "CLIPTextEncode (BlenderNeko Advanced + NSP)",
    "display_name": "CLIPTextEncode (BlenderNeko Advanced + NSP)",
    "description": "A node based on Blenderneko's <a href='https://github.com/BlenderNeko/ComfyUI_ADV_CLIP_embw' target='_blank'>Advanced CLIP Text Encode</a>. This version adds the ability to use Noodle Soup Prompts and Wildcards. Wildcards are stored in WAS Node Suite root under the folder 'wildcards'. You can create the folder if it doesn't exist and move your wildcards into it.",
    "category": "WAS Suite/Conditioning",
    "output_node": true
  },
  "ttN pipeLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "config_name": [
          [
            "Default",
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ],
          {
            "default": "Default"
          }
        ],
        "vae_name": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "lora1_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora1_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora1_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora2_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora2_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora2_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora3_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora3_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora3_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "Positive",
            "multiline": true
          }
        ],
        "positive_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "positive_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "negative": [
          "STRING",
          {
            "default": "Negative",
            "multiline": true
          }
        ],
        "negative_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "negative_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "model_override": [
          "MODEL"
        ],
        "clip_override": [
          "CLIP"
        ],
        "optional_lora_stack": [
          "LORA_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "ttNnodeVersion": "1.1.2"
      },
      "my_unique_id": "UNIQUE_ID"
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pipe",
      "model",
      "positive",
      "negative",
      "latent",
      "vae",
      "clip",
      "seed"
    ],
    "name": "ttN pipeLoader",
    "display_name": "pipeLoader",
    "description": "",
    "category": "ttN/pipe",
    "output_node": false
  },
  "ttN pipeKSampler": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "lora_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "upscale_method": [
          [
            "None",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.25
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ],
        "sampler_state": [
          [
            "Sample",
            "Hold"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ]
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "optional_model": [
          "MODEL"
        ],
        "optional_positive": [
          "CONDITIONING"
        ],
        "optional_negative": [
          "CONDITIONING"
        ],
        "optional_latent": [
          "LATENT"
        ],
        "optional_vae": [
          "VAE"
        ],
        "optional_clip": [
          "CLIP"
        ],
        "xyPlot": [
          "XYPLOT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "easy_negative.safetensors"
          ]
        ],
        "ttNnodeVersion": "1.0.5"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pipe",
      "model",
      "positive",
      "negative",
      "latent",
      "vae",
      "clip",
      "image",
      "seed"
    ],
    "name": "ttN pipeKSampler",
    "display_name": "pipeKSampler",
    "description": "",
    "category": "ttN/pipe",
    "output_node": true
  },
  "ttN pipeKSamplerAdvanced": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "lora_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "upscale_method": [
          [
            "None",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.25
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ],
        "sampler_state": [
          [
            "Sample",
            "Hold"
          ]
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ]
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "optional_model": [
          "MODEL"
        ],
        "optional_positive": [
          "CONDITIONING"
        ],
        "optional_negative": [
          "CONDITIONING"
        ],
        "optional_latent": [
          "LATENT"
        ],
        "optional_vae": [
          "VAE"
        ],
        "optional_clip": [
          "CLIP"
        ],
        "xyPlot": [
          "XYPLOT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "easy_negative.safetensors"
          ]
        ],
        "ttNnodeVersion": "1.0.5"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pipe",
      "model",
      "positive",
      "negative",
      "latent",
      "vae",
      "clip",
      "image",
      "seed"
    ],
    "name": "ttN pipeKSamplerAdvanced",
    "display_name": "pipeKSamplerAdvanced",
    "description": "",
    "category": "ttN/pipe",
    "output_node": true
  },
  "ttN pipeLoaderSDXL": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "lora1_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora1_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora1_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora2_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora2_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora2_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "refiner_ckpt_name": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "refiner_vae_name": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "refiner_lora1_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "refiner_lora1_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "refiner_lora1_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "refiner_lora2_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "refiner_lora2_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "refiner_lora2_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": 0,
            "step": 1
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "Positive",
            "multiline": true
          }
        ],
        "positive_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "positive_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "negative": [
          "STRING",
          {
            "default": "Negative",
            "multiline": true
          }
        ],
        "negative_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "negative_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "ttNnodeVersion": "1.1.2"
      },
      "my_unique_id": "UNIQUE_ID"
    },
    "output": [
      "PIPE_LINE_SDXL",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "CLIP",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "CLIP",
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "sdxl_pipe",
      "model",
      "positive",
      "negative",
      "vae",
      "clip",
      "refiner_model",
      "refiner_positive",
      "refiner_negative",
      "refiner_vae",
      "refiner_clip",
      "latent",
      "seed"
    ],
    "name": "ttN pipeLoaderSDXL",
    "display_name": "pipeLoaderSDXL",
    "description": "",
    "category": "ttN/pipe",
    "output_node": false
  },
  "ttN pipeKSamplerSDXL": {
    "input": {
      "required": {
        "sdxl_pipe": [
          "PIPE_LINE_SDXL"
        ],
        "upscale_method": [
          [
            "None",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.25
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ],
        "sampler_state": [
          [
            "Sample",
            "Hold"
          ]
        ],
        "base_steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "refiner_steps": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ]
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "optional_model": [
          "MODEL"
        ],
        "optional_positive": [
          "CONDITIONING"
        ],
        "optional_negative": [
          "CONDITIONING"
        ],
        "optional_vae": [
          "VAE"
        ],
        "optional_refiner_model": [
          "MODEL"
        ],
        "optional_refiner_positive": [
          "CONDITIONING"
        ],
        "optional_refiner_negative": [
          "CONDITIONING"
        ],
        "optional_refiner_vae": [
          "VAE"
        ],
        "optional_latent": [
          "LATENT"
        ],
        "optional_clip": [
          "CLIP"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "embeddingsList": [
          [
            "easy_negative.safetensors"
          ]
        ],
        "ttNnodeVersion": "1.0.2"
      }
    },
    "output": [
      "PIPE_LINE_SDXL",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "LATENT",
      "CLIP",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "sdxl_pipe",
      "model",
      "positive",
      "negative",
      "vae",
      "refiner_model",
      "refiner_positive",
      "refiner_negative",
      "refiner_vae",
      "latent",
      "clip",
      "image",
      "seed"
    ],
    "name": "ttN pipeKSamplerSDXL",
    "display_name": "pipeKSamplerSDXL",
    "description": "",
    "category": "ttN/pipe",
    "output_node": true
  },
  "ttN xyPlot": {
    "input": {
      "required": {
        "grid_spacing": [
          "INT",
          {
            "min": 0,
            "max": 500,
            "step": 5,
            "default": 0
          }
        ],
        "latent_id": [
          "INT",
          {
            "min": 0,
            "max": 100,
            "step": 1,
            "default": 0
          }
        ],
        "output_individuals": [
          [
            "False",
            "True"
          ],
          {
            "default": "False"
          }
        ],
        "flip_xy": [
          [
            "False",
            "True"
          ],
          {
            "default": "False"
          }
        ],
        "x_axis": [
          [
            "None",
            "---------------------",
            "sampler: lora_name",
            "sampler: lora_model_strength",
            "sampler: lora_clip_strength",
            "sampler: lora_model&clip_strength",
            "sampler: steps",
            "sampler: cfg",
            "sampler: sampler_name",
            "sampler: scheduler",
            "sampler: denoise",
            "sampler: seed",
            "---------------------",
            "loader: ckpt_name",
            "loader: vae_name",
            "loader: clip_skip",
            "loader: lora1_name",
            "loader: lora1_model_strength",
            "loader: lora1_clip_strength",
            "loader: lora1_model&clip_strength",
            "loader: lora2_name",
            "loader: lora2_model_strength",
            "loader: lora2_clip_strength",
            "loader: lora2_model&clip_strength",
            "loader: lora3_name",
            "loader: lora3_model_strength",
            "loader: lora3_clip_strength",
            "loader: lora3_model&clip_strength",
            "loader: positive",
            "loader: positive_token_normalization",
            "loader: positive_weight_interpretation",
            "loader: negative",
            "loader: negative_token_normalization",
            "loader: negative_weight_interpretation"
          ],
          {
            "default": "None"
          }
        ],
        "x_values": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "insert values seperated by \"; \""
          }
        ],
        "y_axis": [
          [
            "None",
            "---------------------",
            "sampler: lora_name",
            "sampler: lora_model_strength",
            "sampler: lora_clip_strength",
            "sampler: lora_model&clip_strength",
            "sampler: steps",
            "sampler: cfg",
            "sampler: sampler_name",
            "sampler: scheduler",
            "sampler: denoise",
            "sampler: seed",
            "---------------------",
            "loader: ckpt_name",
            "loader: vae_name",
            "loader: clip_skip",
            "loader: lora1_name",
            "loader: lora1_model_strength",
            "loader: lora1_clip_strength",
            "loader: lora1_model&clip_strength",
            "loader: lora2_name",
            "loader: lora2_model_strength",
            "loader: lora2_clip_strength",
            "loader: lora2_model&clip_strength",
            "loader: lora3_name",
            "loader: lora3_model_strength",
            "loader: lora3_clip_strength",
            "loader: lora3_model&clip_strength",
            "loader: positive",
            "loader: positive_token_normalization",
            "loader: positive_weight_interpretation",
            "loader: negative",
            "loader: negative_token_normalization",
            "loader: negative_weight_interpretation"
          ],
          {
            "default": "None"
          }
        ],
        "y_values": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "placeholder": "insert values seperated by \"; \""
          }
        ]
      },
      "hidden": {
        "plot_dict": [
          {
            "lora_name": [
              "None",
              "ip-adapter-faceid-plus_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
              "ip-adapter-faceid_sd15_lora.safetensors",
              "ip-adapter-faceid_sdxl_lora.safetensors",
              "sd15_lcm_lora_rank1.safetensors",
              "sdxl_LCM_lora_rank1.safetensors"
            ],
            "lora_model_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora_clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora_model&clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "steps": {
              "min": 1,
              "max": 100,
              "step": 1
            },
            "cfg": {
              "min": 0.0,
              "max": 100.0,
              "step": 1.0
            },
            "sampler_name": [
              "euler",
              "euler_ancestral",
              "heun",
              "heunpp2",
              "dpm_2",
              "dpm_2_ancestral",
              "lms",
              "dpm_fast",
              "dpm_adaptive",
              "dpmpp_2s_ancestral",
              "dpmpp_sde",
              "dpmpp_sde_gpu",
              "dpmpp_2m",
              "dpmpp_2m_alt",
              "dpmpp_2m_sde",
              "dpmpp_2m_sde_gpu",
              "dpmpp_3m_sde",
              "dpmpp_3m_sde_gpu",
              "ddpm",
              "lcm",
              "ddim",
              "uni_pc",
              "uni_pc_bh2"
            ],
            "scheduler": [
              "normal",
              "karras",
              "exponential",
              "sgm_uniform",
              "simple",
              "ddim_uniform"
            ],
            "denoise": {
              "min": 0.0,
              "max": 1.0,
              "step": 0.01
            },
            "seed": [
              "increment",
              "decrement",
              "randomize"
            ],
            "ckpt_name": [
              "ghostmix_v20Bakedvae.safetensors",
              "juggernautXL_v9Rundiffusionphoto2.safetensors",
              "majicmixRealistic_v7.safetensors",
              "svd-fp16.safetensors"
            ],
            "vae_name": [
              "Baked-VAE",
              "sdxl_vae_fp16_fix.safetensors",
              "vae-ft-mse-840000-ema-pruned.safetensors"
            ],
            "clip_skip": {
              "min": -24,
              "max": -1,
              "step": 1
            },
            "lora1_name": [
              "None",
              "ip-adapter-faceid-plus_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
              "ip-adapter-faceid_sd15_lora.safetensors",
              "ip-adapter-faceid_sdxl_lora.safetensors",
              "sd15_lcm_lora_rank1.safetensors",
              "sdxl_LCM_lora_rank1.safetensors"
            ],
            "lora1_model_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora1_clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora1_model&clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora2_name": [
              "None",
              "ip-adapter-faceid-plus_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
              "ip-adapter-faceid_sd15_lora.safetensors",
              "ip-adapter-faceid_sdxl_lora.safetensors",
              "sd15_lcm_lora_rank1.safetensors",
              "sdxl_LCM_lora_rank1.safetensors"
            ],
            "lora2_model_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora2_clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora2_model&clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora3_name": [
              "None",
              "ip-adapter-faceid-plus_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
              "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
              "ip-adapter-faceid_sd15_lora.safetensors",
              "ip-adapter-faceid_sdxl_lora.safetensors",
              "sd15_lcm_lora_rank1.safetensors",
              "sdxl_LCM_lora_rank1.safetensors"
            ],
            "lora3_model_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora3_clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "lora3_model&clip_strength": {
              "min": -4.0,
              "max": 4.0,
              "step": 0.01
            },
            "positive": [],
            "positive_token_normalization": [
              "none",
              "mean",
              "length",
              "length+mean"
            ],
            "positive_weight_interpretation": [
              "comfy",
              "A1111",
              "compel",
              "comfy++"
            ],
            "negative": [],
            "negative_token_normalization": [
              "none",
              "mean",
              "length",
              "length+mean"
            ],
            "negative_weight_interpretation": [
              "comfy",
              "A1111",
              "compel",
              "comfy++"
            ]
          }
        ],
        "ttNnodeVersion": "1.2.0"
      }
    },
    "output": [
      "XYPLOT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "xyPlot"
    ],
    "name": "ttN xyPlot",
    "display_name": "xyPlot",
    "description": "",
    "category": "ttN/pipe",
    "output_node": false
  },
  "ttN pipeIN": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.1.0"
      }
    },
    "output": [
      "PIPE_LINE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "pipe"
    ],
    "name": "ttN pipeIN",
    "display_name": "pipeIN (Legacy)",
    "description": "",
    "category": "ttN/legacy",
    "output_node": false
  },
  "ttN pipeOUT": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.1.0"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT",
      "PIPE_LINE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "image",
      "seed",
      "pipe"
    ],
    "name": "ttN pipeOUT",
    "display_name": "pipeOUT (Legacy)",
    "description": "",
    "category": "ttN/legacy",
    "output_node": false
  },
  "ttN pipeEDIT": {
    "input": {
      "required": {},
      "optional": {
        "pipe": [
          "PIPE_LINE"
        ],
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "image": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.1.1",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "image",
      "seed"
    ],
    "name": "ttN pipeEDIT",
    "display_name": "pipeEDIT",
    "description": "",
    "category": "ttN/pipe",
    "output_node": false
  },
  "ttN pipe2BASIC": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.1.0"
      }
    },
    "output": [
      "BASIC_PIPE",
      "PIPE_LINE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "basic_pipe",
      "pipe"
    ],
    "name": "ttN pipe2BASIC",
    "display_name": "pipe > basic_pipe",
    "description": "",
    "category": "ttN/pipe",
    "output_node": false
  },
  "ttN pipe2DETAILER": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "wildcard spec: if kept empty, this option will be ignored"
          }
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.2.0"
      }
    },
    "output": [
      "DETAILER_PIPE",
      "PIPE_LINE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "detailer_pipe",
      "pipe"
    ],
    "name": "ttN pipe2DETAILER",
    "display_name": "pipe > detailer_pipe",
    "description": "",
    "category": "ttN/pipe",
    "output_node": false
  },
  "ttN pipeEncodeConcat": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ],
        "toggle": [
          [
            true,
            false
          ]
        ]
      },
      "optional": {
        "positive": [
          "STRING",
          {
            "default": "Positive",
            "multiline": true
          }
        ],
        "positive_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "positive_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "negative": [
          "STRING",
          {
            "default": "Negative",
            "multiline": true
          }
        ],
        "negative_token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "negative_weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "optional_positive_from": [
          "CONDITIONING"
        ],
        "optional_negative_from": [
          "CONDITIONING"
        ],
        "optional_clip": [
          "CLIP"
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.2",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "PIPE_LINE",
      "CONDITIONING",
      "CONDITIONING",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pipe",
      "positive",
      "negative",
      "clip"
    ],
    "name": "ttN pipeEncodeConcat",
    "display_name": "pipeEncodeConcat",
    "description": "",
    "category": "ttN/pipe",
    "output_node": true
  },
  "ttN pipeLoraStack": {
    "input": {
      "required": {
        "toggle": [
          [
            true,
            false
          ]
        ],
        "mode": [
          [
            "simple",
            "advanced"
          ]
        ],
        "num_loras": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 20
          }
        ]
      },
      "optional": {
        "optional_pipe": [
          "PIPE_LINE",
          {
            "default": null
          }
        ],
        "model_override": [
          "MODEL"
        ],
        "clip_override": [
          "CLIP"
        ],
        "optional_lora_stack": [
          "LORA_STACK"
        ],
        "lora_1_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_1_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_1_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_1_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_2_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_2_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_2_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_2_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_3_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_3_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_3_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_3_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_4_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_4_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_4_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_4_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_5_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_5_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_5_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_5_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_6_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_6_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_6_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_6_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_7_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_7_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_7_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_7_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_8_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_8_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_8_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_8_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_9_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_9_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_9_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_9_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_10_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_10_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_10_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_10_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_11_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_11_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_11_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_11_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_12_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_12_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_12_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_12_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_13_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_13_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_13_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_13_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_14_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_14_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_14_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_14_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_15_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_15_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_15_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_15_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_16_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_16_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_16_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_16_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_17_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_17_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_17_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_17_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_18_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_18_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_18_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_18_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_19_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_19_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_19_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_19_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_20_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ],
          {
            "default": "None"
          }
        ],
        "lora_20_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_20_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_20_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.1.1"
      }
    },
    "output": [
      "PIPE_LINE",
      "LORA_STACK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "optional_pipe",
      "lora_stack"
    ],
    "name": "ttN pipeLoraStack",
    "display_name": "pipeLoraStack",
    "description": "",
    "category": "ttN/pipe",
    "output_node": false
  },
  "ttN multiModelMerge": {
    "input": {
      "required": {
        "ckpt_A_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "config_A_name": [
          [
            "Default",
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ],
          {
            "default": "Default"
          }
        ],
        "ckpt_B_name": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "config_B_name": [
          [
            "Default",
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ],
          {
            "default": "Default"
          }
        ],
        "ckpt_C_name": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "config_C_name": [
          [
            "Default",
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ],
          {
            "default": "Default"
          }
        ],
        "model_interpolation": [
          [
            "Weighted sum = (  A*(1-M) + B*M  )",
            "Add difference = (  A + (B-C)*M  )",
            "A Only"
          ]
        ],
        "model_multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "clip_interpolation": [
          [
            "Follow model interp",
            "Weighted sum = (  A*(1-M) + B*M  )",
            "Add difference = (  A + (B-C)*M  )",
            "A Only",
            "B Only",
            "C Only"
          ]
        ],
        "clip_multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "save_model": [
          [
            "True",
            "False"
          ],
          {
            "default": "False"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "optional": {
        "model_A_override": [
          "MODEL"
        ],
        "model_B_override": [
          "MODEL"
        ],
        "model_C_override": [
          "MODEL"
        ],
        "clip_A_override": [
          "CLIP"
        ],
        "clip_B_override": [
          "CLIP"
        ],
        "clip_C_override": [
          "CLIP"
        ],
        "optional_vae": [
          "VAE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "ttNnodeVersion": "1.0.1",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae"
    ],
    "name": "ttN multiModelMerge",
    "display_name": "multiModelMerge",
    "description": "",
    "category": "ttN",
    "output_node": false
  },
  "ttN text": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "text"
    ],
    "name": "ttN text",
    "display_name": "text",
    "description": "",
    "category": "ttN/text",
    "output_node": false
  },
  "ttN textDebug": {
    "input": {
      "required": {
        "print_to_console": [
          [
            false,
            true
          ]
        ],
        "console_title": [
          "STRING",
          {
            "default": ""
          }
        ],
        "execute": [
          [
            "Always",
            "On Change"
          ]
        ],
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "ttNnodeVersion": "1.0."
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "text"
    ],
    "name": "ttN textDebug",
    "display_name": "textDebug",
    "description": "",
    "category": "ttN/text",
    "output_node": true
  },
  "ttN concat": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text3": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "delimiter": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "concat"
    ],
    "name": "ttN concat",
    "display_name": "textConcat",
    "description": "",
    "category": "ttN/text",
    "output_node": false
  },
  "ttN text3BOX_3WAYconcat": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text3": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "delimiter": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "text1",
      "text2",
      "text3",
      "1 & 2",
      "1 & 3",
      "2 & 3",
      "concat"
    ],
    "name": "ttN text3BOX_3WAYconcat",
    "display_name": "3x TXT Loader MultiConcat",
    "description": "",
    "category": "ttN/text",
    "output_node": false
  },
  "ttN text7BOX_concat": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text3": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text4": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text5": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text6": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "text7": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "delimiter": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "text1",
      "text2",
      "text3",
      "text4",
      "text5",
      "text6",
      "text7",
      "concat"
    ],
    "name": "ttN text7BOX_concat",
    "display_name": "7x TXT Loader Concat",
    "description": "",
    "category": "ttN/text",
    "output_node": false
  },
  "ttN imageOutput": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "/root/ComfyUI/output",
            "multiline": false
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "number_padding": [
          [
            "None",
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          {
            "default": 5
          }
        ],
        "file_type": [
          [
            "PNG",
            "JPG",
            "JPEG",
            "BMP",
            "TIFF",
            "TIF"
          ],
          {
            "default": "PNG"
          }
        ],
        "overwrite_existing": [
          [
            "True",
            "False"
          ],
          {
            "default": "False"
          }
        ],
        "embed_workflow": [
          [
            "True",
            "False"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "ttNnodeVersion": "1.1.0"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "ttN imageOutput",
    "display_name": "imageOutput",
    "description": "",
    "category": "ttN/image",
    "output_node": true
  },
  "ttN imageREMBG": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ],
          {
            "default": "Preview"
          }
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "ttN imageREMBG",
    "display_name": "imageRemBG",
    "description": "",
    "category": "ttN/image",
    "output_node": true
  },
  "ttN hiresfixScale": {
    "input": {
      "required": {
        "model_name": [
          [
            "RealESRGAN_x2plus.pth",
            "RealESRGAN_x4plus.pth",
            "RealESRGAN_x4plus_anime_6B.pth"
          ]
        ],
        "image": [
          "IMAGE"
        ],
        "rescale_after_model": [
          [
            false,
            true
          ],
          {
            "default": true
          }
        ],
        "rescale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp"
          ]
        ],
        "rescale": [
          [
            "by percentage",
            "to Width/Height",
            "to longer side - maintain aspect"
          ]
        ],
        "percent": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "longer_side": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ],
        "image_output": [
          [
            "Hide",
            "Preview",
            "Save",
            "Hide/Save"
          ]
        ],
        "save_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "output_latent": [
          [
            false,
            true
          ],
          {
            "default": true
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID",
        "ttNnodeVersion": "1.0.3"
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latent",
      "image"
    ],
    "name": "ttN hiresfixScale",
    "display_name": "hiresfixScale",
    "description": "",
    "category": "ttN/image",
    "output_node": true
  },
  "ttN int": {
    "input": {
      "required": {
        "int": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "int",
      "float",
      "text"
    ],
    "name": "ttN int",
    "display_name": "int",
    "description": "",
    "category": "ttN/util",
    "output_node": false
  },
  "ttN float": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "float",
      "int",
      "text"
    ],
    "name": "ttN float",
    "display_name": "float",
    "description": "",
    "category": "ttN/util",
    "output_node": false
  },
  "ttN seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "ttNnodeVersion": "1.0.0"
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "seed"
    ],
    "name": "ttN seed",
    "display_name": "seed",
    "description": "",
    "category": "ttN/util",
    "output_node": true
  },
  "TilePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "TilePreprocessor",
    "display_name": "Tile",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "OneFormer-COCO-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-COCO-SemSegPreprocessor",
    "display_name": "OneFormer COCO Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "OneFormer-ADE20K-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-ADE20K-SemSegPreprocessor",
    "display_name": "OneFormer ADE20K Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "InpaintPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "InpaintPreprocessor",
    "display_name": "Inpaint Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "LineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "coarse": [
          [
            "disable",
            "enable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "LineArtPreprocessor",
    "display_name": "Realistic Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "AnimeLineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "AnimeLineArtPreprocessor",
    "display_name": "Anime Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Zoe-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Zoe-DepthMapPreprocessor",
    "display_name": "Zoe Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "BinaryPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bin_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "BinaryPreprocessor",
    "display_name": "Binary Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "CannyEdgePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "low_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "high_threshold": [
          "INT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "CannyEdgePreprocessor",
    "display_name": "Canny Edge",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Manga2Anime_LineArt_Preprocessor",
    "display_name": "Manga Lineart (aka lineart_anime_denoise)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ShufflePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ShufflePreprocessor",
    "display_name": "Content Shuffle",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "LineartStandardPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "guassian_sigma": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "intensity_threshold": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "LineartStandardPreprocessor",
    "display_name": "Standard Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SAMPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SAMPreprocessor",
    "display_name": "SAM Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "MiDaS-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.283185307179586,
            "min": 0.0,
            "max": 15.707963267948966,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-NormalMapPreprocessor",
    "display_name": "MiDaS Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MiDaS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.283185307179586,
            "min": 0.0,
            "max": 15.707963267948966,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-DepthMapPreprocessor",
    "display_name": "MiDaS Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "ckpt_name": [
          [
            "depth_anything_vitl14.pth",
            "depth_anything_vitb14.pth",
            "depth_anything_vits14.pth"
          ],
          {
            "default": "depth_anything_vitl14.pth"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DepthAnythingPreprocessor",
    "display_name": "Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Zoe_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "outdoor"
          ],
          {
            "default": "indoor"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Zoe_DepthAnythingPreprocessor",
    "display_name": "Zoe Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "UniFormer-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "UniFormer-SemSegPreprocessor",
    "display_name": "UniFormer Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SemSegPreprocessor",
    "display_name": "Semantic Segmentor (legacy, alias for UniFormer)",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "HEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "HEDPreprocessor",
    "display_name": "HED Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "FakeScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "FakeScribblePreprocessor",
    "display_name": "Fake Scribble Lines (aka scribble_hed)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Unimatch_OptFlowPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "ckpt_name": [
          [
            "gmflow-scale1-mixdata.pth",
            "gmflow-scale2-mixdata.pth",
            "gmflow-scale2-regrefine6-mixdata.pth"
          ],
          {
            "default": "gmflow-scale2-regrefine6-mixdata.pth"
          }
        ],
        "backward_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bidirectional_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "Unimatch_OptFlowPreprocessor",
    "display_name": "Unimatch Optical Flow",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "MaskOptFlow": {
    "input": {
      "required": {
        "optical_flow": [
          "OPTICAL_FLOW"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "MaskOptFlow",
    "display_name": "Mask Optical Flow (DragNUWA)",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "MediaPipe-FaceMeshPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MediaPipe-FaceMeshPreprocessor",
    "display_name": "MediaPipe Face Mesh",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "TEEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "TEEDPreprocessor",
    "display_name": "TEEDPreprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "OpenposePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "OpenposePreprocessor",
    "display_name": "OpenPose Pose",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "ColorPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorPreprocessor",
    "display_name": "Color Pallete",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "DSINE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "fov": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 365.0,
            "step": 1.0,
            "default": 60.0
          }
        ],
        "iterations": [
          "INT",
          {
            "min": 1,
            "max": 20,
            "step": 1,
            "default": 5
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DSINE-NormalMapPreprocessor",
    "display_name": "DSINE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DiffusionEdge_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "urban",
            "natrual"
          ],
          {
            "default": "indoor"
          }
        ],
        "patch_batch_size": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DiffusionEdge_Preprocessor",
    "display_name": "Diffusion Edge (batch size \u2191 => speed \u2191, VRAM \u2191)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ImageLuminanceDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 2.0,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageLuminanceDetector",
    "display_name": "Image Luminance",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "ImageIntensityDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 2.0,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageIntensityDetector",
    "display_name": "Image Intensity",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "BAE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "BAE-NormalMapPreprocessor",
    "display_name": "BAE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "AnimeFace_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "remove_background_using_abg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 512,
            "max": 512,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "ABG_CHARACTER_MASK (MASK)"
    ],
    "name": "AnimeFace_SemSegPreprocessor",
    "display_name": "Anime Face Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "DensePosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "model": [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript"
          ],
          {
            "default": "densepose_r50_fpn_dl.torchscript"
          }
        ],
        "cmap": [
          [
            "Viridis (MagicAnimate)",
            "Parula (CivitAI)"
          ],
          {
            "default": "Viridis (MagicAnimate)"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DensePosePreprocessor",
    "display_name": "DensePose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "M-LSDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "score_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 2.0,
            "step": 0.01
          }
        ],
        "dist_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "M-LSDPreprocessor",
    "display_name": "M-LSD Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SavePoseKpsAsJsonFile": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "PoseKeypoint"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SavePoseKpsAsJsonFile",
    "display_name": "Save Pose Keypoints",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": true
  },
  "FacialPartColoringFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "mode": [
          [
            "point",
            "polygon"
          ],
          {
            "default": "polygon"
          }
        ],
        "skin": [
          "STRING",
          {
            "default": "rgb(0, 153, 255)",
            "multiline": false
          }
        ],
        "left_eye": [
          "STRING",
          {
            "default": "rgb(0, 204, 153)",
            "multiline": false
          }
        ],
        "right_eye": [
          "STRING",
          {
            "default": "rgb(255, 153, 0)",
            "multiline": false
          }
        ],
        "nose": [
          "STRING",
          {
            "default": "rgb(255, 102, 255)",
            "multiline": false
          }
        ],
        "upper_lip": [
          "STRING",
          {
            "default": "rgb(102, 0, 51)",
            "multiline": false
          }
        ],
        "inner_mouth": [
          "STRING",
          {
            "default": "rgb(255, 204, 255)",
            "multiline": false
          }
        ],
        "lower_lip": [
          "STRING",
          {
            "default": "rgb(255, 0, 102)",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "FacialPartColoringFromPoseKps",
    "display_name": "Colorize Facial Parts from PoseKPS",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "LeReS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "boost": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "LeReS-DepthMapPreprocessor",
    "display_name": "LeReS Depth Map (enable boost for leres++)",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DWPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "DWPreprocessor",
    "display_name": "DWPose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "AnimalPosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.torchscript.pt"
          }
        ],
        "pose_estimator": [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx"
          ],
          {
            "default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "AnimalPosePreprocessor",
    "display_name": "AnimalPose Estimator (AP10K)",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "MeshGraphormer-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "mask_type": [
          [
            "based_on_depth",
            "tight_bboxes",
            "original"
          ],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -2048,
            "max": 2048,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "INPAINTING_MASK"
    ],
    "name": "MeshGraphormer-DepthMapPreprocessor",
    "display_name": "MeshGraphormer Hand Refiner",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "PiDiNetPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "PiDiNetPreprocessor",
    "display_name": "PiDiNet Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ScribblePreprocessor",
    "display_name": "Scribble Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Scribble_XDoG_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "threshold": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Scribble_XDoG_Preprocessor",
    "display_name": "Scribble XDoG Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "AIO_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "preprocessor": [
          [
            "none",
            "TilePreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "Zoe-DepthMapPreprocessor",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "ShufflePreprocessor",
            "LineartStandardPreprocessor",
            "SAMPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "MediaPipe-FaceMeshPreprocessor",
            "TEEDPreprocessor",
            "OpenposePreprocessor",
            "ColorPreprocessor",
            "DSINE-NormalMapPreprocessor",
            "DiffusionEdge_Preprocessor",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "BAE-NormalMapPreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "DensePosePreprocessor",
            "M-LSDPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "LeReS-DepthMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "PiDiNetPreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "AIO_Preprocessor",
    "display_name": "AIO Aux Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "PixelPerfectResolution": {
    "input": {
      "required": {
        "original_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "RESOLUTION (INT)"
    ],
    "name": "PixelPerfectResolution",
    "display_name": "Pixel Perfect Resolution",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromImage": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromImage",
    "display_name": "Generation Resolution From Image",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromLatent",
    "display_name": "Generation Resolution From Latent",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "HintImageEnchance": {
    "input": {
      "required": {
        "hint_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "HintImageEnchance",
    "display_name": "Enchance And Resize Hint Images",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "LayeredDiffusionApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "config": [
          [
            "SDXL, Attention Injection",
            "SDXL, Conv Injection",
            "SD15, Attention Injection, attn_sharing"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "LayeredDiffusionApply",
    "display_name": "Layer Diffuse Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "LayeredDiffusionJointApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "config": [
          [
            "SD15, attn_sharing, Batch size (3N)"
          ]
        ]
      },
      "optional": {
        "fg_cond": [
          "CONDITIONING"
        ],
        "bg_cond": [
          "CONDITIONING"
        ],
        "blended_cond": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "LayeredDiffusionJointApply",
    "display_name": "Layer Diffuse Joint Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "LayeredDiffusionCondApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond": [
          "CONDITIONING"
        ],
        "uncond": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "config": [
          [
            "SDXL, Foreground",
            "SDXL, Background"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "LayeredDiffusionCondApply",
    "display_name": "Layer Diffuse Cond Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "LayeredDiffusionCondJointApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "config": [
          [
            "SD15, Foreground, attn_sharing, Batch size (2N)",
            "SD15, Background, attn_sharing, Batch size (2N)"
          ]
        ]
      },
      "optional": {
        "cond": [
          "CONDITIONING"
        ],
        "blended_cond": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "LayeredDiffusionCondJointApply",
    "display_name": "Layer Diffuse Cond Joint Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "LayeredDiffusionDiffApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond": [
          "CONDITIONING"
        ],
        "uncond": [
          "CONDITIONING"
        ],
        "blended_latent": [
          "LATENT"
        ],
        "latent": [
          "LATENT"
        ],
        "config": [
          [
            "SDXL, Foreground",
            "SDXL, Background"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "LayeredDiffusionDiffApply",
    "display_name": "Layer Diffuse Diff Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "LayeredDiffusionDecode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LayeredDiffusionDecode",
    "display_name": "Layer Diffuse Decode",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "LayeredDiffusionDecodeRGBA": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "LayeredDiffusionDecodeRGBA",
    "display_name": "Layer Diffuse Decode (RGBA)",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "LayeredDiffusionDecodeSplit": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "frames": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 3,
            "step": 1
          }
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "name": "LayeredDiffusionDecodeSplit",
    "display_name": "Layer Diffuse Decode (Split)",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "KSampler Gradually Adding More Denoise (efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "start_denoise": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "denoise_increment": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.1
          }
        ],
        "denoise_increment_steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE"
    ],
    "name": "KSampler Gradually Adding More Denoise (efficient)",
    "display_name": "KSampler Gradually Adding More Denoise (efficient)",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/others",
    "output_node": true
  },
  "GMFSS Fortuna VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "GMFSS_fortuna_union",
            "GMFSS_fortuna"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "GMFSS Fortuna VFI",
    "display_name": "GMFSS Fortuna VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "IFRNet VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "IFRNet_S_Vimeo90K.pth",
            "IFRNet_L_Vimeo90K.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ],
        "scale_factor": [
          [
            0.25,
            0.5,
            1.0,
            2.0,
            4.0
          ],
          {
            "default": 1.0
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "IFRNet VFI",
    "display_name": "IFRNet VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "IFUnet VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "IFUNet.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ],
        "ensemble": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "IFUnet VFI",
    "display_name": "IFUnet VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "M2M VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "M2M.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "M2M VFI",
    "display_name": "M2M VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "RIFE VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "rife40.pth",
            "rife41.pth",
            "sudo_rife4_269.662_testV1_scale1.pth",
            "rife42.pth",
            "rife43.pth",
            "rife44.pth",
            "rife45.pth",
            "rife46.pth",
            "rife47.pth",
            "rife48.pth",
            "rife49.pth"
          ],
          {
            "default": "rife47.pth"
          }
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ],
        "fast_mode": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "ensemble": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "scale_factor": [
          [
            0.25,
            0.5,
            1.0,
            2.0,
            4.0
          ],
          {
            "default": 1.0
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "RIFE VFI",
    "display_name": "RIFE VFI (recommend rife47 and rife49)",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "Sepconv VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "sepconv.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Sepconv VFI",
    "display_name": "Sepconv VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "AMT VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "amt-s.pth",
            "amt-l.pth",
            "amt-g.pth",
            "gopro_amt-s.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "AMT VFI",
    "display_name": "AMT VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "FILM VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "film_net_fp32.pt"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "FILM VFI",
    "display_name": "FILM VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "Make Interpolation State List": {
    "input": {
      "required": {
        "frame_indices": [
          "STRING",
          {
            "multiline": true,
            "default": "1,2,3"
          }
        ],
        "is_skip_list": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "INTERPOLATION_STATES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INTERPOLATION_STATES"
    ],
    "name": "Make Interpolation State List",
    "display_name": "Make Interpolation State List",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "STMFNet VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "stmfnet.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 2
          }
        ],
        "duplicate_first_last_frames": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "STMFNet VFI",
    "display_name": "STMFNet VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "FLAVR VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "FLAVR_2x.pth",
            "FLAVR_4x.pth",
            "FLAVR_8x.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 2
          }
        ],
        "duplicate_first_last_frames": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "FLAVR VFI",
    "display_name": "FLAVR VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "CAIN VFI": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "pretrained_cain.pth"
          ]
        ],
        "frames": [
          "IMAGE"
        ],
        "clear_cache_after_n_frames": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1000
          }
        ],
        "multiplier": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 1000
          }
        ]
      },
      "optional": {
        "optional_interpolation_states": [
          "INTERPOLATION_STATES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "CAIN VFI",
    "display_name": "CAIN VFI",
    "description": "",
    "category": "ComfyUI-Frame-Interpolation/VFI",
    "output_node": false
  },
  "VHS_VideoCombine": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "frame_rate": [
          "FLOAT",
          {
            "default": 8,
            "min": 1,
            "step": 1
          }
        ],
        "loop_count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "AnimateDiff"
          }
        ],
        "format": [
          [
            "image/gif",
            "image/webp",
            "video/16bit-png",
            "video/ProRes",
            [
              "video/av1-webm",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p10le",
                    "yuv420p"
                  ]
                ],
                [
                  "crf",
                  "INT",
                  {
                    "default": 23,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "input_color_depth",
                  [
                    "8bit",
                    "16bit"
                  ]
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/h264-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p",
                    "yuv420p10le"
                  ]
                ],
                [
                  "crf",
                  "INT",
                  {
                    "default": 19,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/h265-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p10le",
                    "yuv420p"
                  ]
                ],
                [
                  "crf",
                  "INT",
                  {
                    "default": 22,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/nvenc_h264-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p",
                    "yuv420p10le"
                  ]
                ],
                [
                  "bitrate",
                  "INT",
                  {
                    "default": 10,
                    "min": 1,
                    "max": 999,
                    "step": 1
                  }
                ],
                [
                  "megabit",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/nvenc_hevc-mp4",
              [
                [
                  "pix_fmt",
                  [
                    "yuv420p",
                    "yuv420p10le"
                  ]
                ],
                [
                  "bitrate",
                  "INT",
                  {
                    "default": 10,
                    "min": 1,
                    "max": 999,
                    "step": 1
                  }
                ],
                [
                  "megabit",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ],
            [
              "video/webm",
              [
                [
                  "crf",
                  "INT",
                  {
                    "default": 20,
                    "min": 0,
                    "max": 100,
                    "step": 1
                  }
                ],
                [
                  "save_metadata",
                  "BOOLEAN",
                  {
                    "default": true
                  }
                ]
              ]
            ]
          ]
        ],
        "pingpong": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "save_output": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "audio": [
          "VHS_AUDIO"
        ],
        "batch_manager": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "VHS_FILENAMES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "Filenames"
    ],
    "name": "VHS_VideoCombine",
    "display_name": "Video Combine \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": true
  },
  "VHS_LoadVideo": {
    "input": {
      "required": {
        "video": [
          []
        ],
        "force_rate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 60,
            "step": 1
          }
        ],
        "force_size": [
          [
            "Disabled",
            "Custom Height",
            "Custom Width",
            "Custom",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512"
          ]
        ],
        "custom_width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "custom_height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "frame_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      },
      "optional": {
        "batch_manager": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "VHS_AUDIO",
      "VHS_VIDEOINFO"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "frame_count",
      "audio",
      "video_info"
    ],
    "name": "VHS_LoadVideo",
    "display_name": "Load Video (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_LoadVideoPath": {
    "input": {
      "required": {
        "video": [
          "STRING",
          {
            "default": "X://insert/path/here.mp4",
            "vhs_path_extensions": [
              "webm",
              "mp4",
              "mkv",
              "gif"
            ]
          }
        ],
        "force_rate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 60,
            "step": 1
          }
        ],
        "force_size": [
          [
            "Disabled",
            "Custom Height",
            "Custom Width",
            "Custom",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512"
          ]
        ],
        "custom_width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "custom_height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "frame_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      },
      "optional": {
        "batch_manager": [
          "VHS_BatchManager"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "VHS_AUDIO",
      "VHS_VIDEOINFO"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "frame_count",
      "audio",
      "video_info"
    ],
    "name": "VHS_LoadVideoPath",
    "display_name": "Load Video (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_LoadImages": {
    "input": {
      "required": {
        "directory": [
          [
            ".ipynb_checkpoints"
          ]
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_images": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "VHS_LoadImages",
    "display_name": "Load Images (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_LoadImagesPath": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": "X://path/to/images",
            "vhs_path_extensions": []
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "skip_first_images": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "VHS_LoadImagesPath",
    "display_name": "Load Images (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_LoadAudio": {
    "input": {
      "required": {
        "audio_file": [
          "STRING",
          {
            "default": "input/",
            "vhs_path_extensions": [
              "wav",
              "mp3",
              "ogg",
              "m4a",
              "flac"
            ]
          }
        ]
      },
      "optional": {
        "seek_seconds": [
          "FLOAT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "VHS_AUDIO"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "audio"
    ],
    "name": "VHS_LoadAudio",
    "display_name": "Load Audio (Path)\ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_PruneOutputs": {
    "input": {
      "required": {
        "filenames": [
          "VHS_FILENAMES"
        ],
        "options": [
          [
            "Intermediate",
            "Intermediate and Utility"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "VHS_PruneOutputs",
    "display_name": "Prune Outputs \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": true
  },
  "VHS_BatchManager": {
    "input": {
      "required": {
        "frames_per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128,
            "step": 1
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "VHS_BatchManager"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VHS_BatchManager"
    ],
    "name": "VHS_BatchManager",
    "display_name": "Batch Manager \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_VideoInfo": {
    "input": {
      "required": {
        "video_info": [
          "VHS_VIDEOINFO"
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT",
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "source_fps\ud83d\udfe8",
      "source_frame_count\ud83d\udfe8",
      "source_duration\ud83d\udfe8",
      "source_width\ud83d\udfe8",
      "source_height\ud83d\udfe8",
      "loaded_fps\ud83d\udfe6",
      "loaded_frame_count\ud83d\udfe6",
      "loaded_duration\ud83d\udfe6",
      "loaded_width\ud83d\udfe6",
      "loaded_height\ud83d\udfe6"
    ],
    "name": "VHS_VideoInfo",
    "display_name": "Video Info \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_VideoInfoSource": {
    "input": {
      "required": {
        "video_info": [
          "VHS_VIDEOINFO"
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "fps\ud83d\udfe8",
      "frame_count\ud83d\udfe8",
      "duration\ud83d\udfe8",
      "width\ud83d\udfe8",
      "height\ud83d\udfe8"
    ],
    "name": "VHS_VideoInfoSource",
    "display_name": "Video Info (Source) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_VideoInfoLoaded": {
    "input": {
      "required": {
        "video_info": [
          "VHS_VIDEOINFO"
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "fps\ud83d\udfe6",
      "frame_count\ud83d\udfe6",
      "duration\ud83d\udfe6",
      "width\ud83d\udfe6",
      "height\ud83d\udfe6"
    ],
    "name": "VHS_VideoInfoLoaded",
    "display_name": "Video Info (Loaded) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_SplitLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "LATENT_A",
      "A_count",
      "LATENT_B",
      "B_count"
    ],
    "name": "VHS_SplitLatents",
    "display_name": "Split Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_SplitImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE_A",
      "A_count",
      "IMAGE_B",
      "B_count"
    ],
    "name": "VHS_SplitImages",
    "display_name": "Split Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_SplitMasks": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MASK_A",
      "A_count",
      "MASK_B",
      "B_count"
    ],
    "name": "VHS_SplitMasks",
    "display_name": "Split Mask Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    "output_node": false
  },
  "VHS_MergeLatents": {
    "input": {
      "required": {
        "latents_A": [
          "LATENT"
        ],
        "latents_B": [
          "LATENT"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_MergeLatents",
    "display_name": "Merge Latent Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_MergeImages": {
    "input": {
      "required": {
        "images_A": [
          "IMAGE"
        ],
        "images_B": [
          "IMAGE"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_MergeImages",
    "display_name": "Merge Image Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_MergeMasks": {
    "input": {
      "required": {
        "mask_A": [
          "MASK"
        ],
        "mask_B": [
          "MASK"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MASK",
      "count"
    ],
    "name": "VHS_MergeMasks",
    "display_name": "Merge Mask Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    "output_node": false
  },
  "VHS_SelectEveryNthLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_SelectEveryNthLatent",
    "display_name": "Select Every Nth Latent \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_SelectEveryNthImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_SelectEveryNthImage",
    "display_name": "Select Every Nth Image \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_SelectEveryNthMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MASK",
      "count"
    ],
    "name": "VHS_SelectEveryNthMask",
    "display_name": "Select Every Nth Mask \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    "output_node": false
  },
  "VHS_GetLatentCount": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetLatentCount",
    "display_name": "Get Latent Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_GetImageCount": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetImageCount",
    "display_name": "Get Image Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_GetMaskCount": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetMaskCount",
    "display_name": "Get Mask Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    "output_node": false
  },
  "VHS_DuplicateLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_DuplicateLatents",
    "display_name": "Duplicate Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_DuplicateImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_DuplicateImages",
    "display_name": "Duplicate Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_DuplicateMasks": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MASK",
      "count"
    ],
    "name": "VHS_DuplicateMasks",
    "display_name": "Duplicate Mask Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    "output_node": false
  },
  "VHS_VAEEncodeBatched": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "VHS_VAEEncodeBatched",
    "display_name": "VAE Encode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes",
    "output_node": false
  },
  "VHS_VAEDecodeBatched": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "VHS_VAEDecodeBatched",
    "display_name": "VAE Decode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes",
    "output_node": false
  },
  "PortraitMaster": {
    "input": {
      "optional": {
        "seed": [
          "INT",
          {
            "forceInput": false
          }
        ]
      },
      "required": {
        "shot": [
          [
            "-",
            "Close-up",
            "Face",
            "Full body",
            "Full-length portrait",
            "Half-length portrait",
            "Head and shoulders portrait",
            "Head portrait",
            "Portrait"
          ],
          {
            "default": "-"
          }
        ],
        "shot_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "gender": [
          [
            "-",
            "Man",
            "Woman"
          ],
          {
            "default": "-"
          }
        ],
        "androgynous": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "age": [
          "INT",
          {
            "default": 30,
            "min": 18,
            "max": 90,
            "step": 1,
            "display": "slider"
          }
        ],
        "nationality_1": [
          [
            "-",
            "Afghan",
            "Albanian",
            "Algerian",
            "Andorran",
            "Angolan",
            "Antiguans Barbudans",
            "Argentine",
            "Armenian",
            "Australian",
            "Austrian",
            "Azerbaijani",
            "Bahamian",
            "Bahraini",
            "Bangladeshi",
            "Barbadian",
            "Belarusian",
            "Belgian",
            "Belizean",
            "Beninese",
            "Bhutanese",
            "Bolivian",
            "Bosnian Herzegovinian",
            "Brazilian",
            "British",
            "Bruneian",
            "Bulgarian",
            "Burkinabe",
            "Burundian",
            "Cambodian",
            "Cameroonian",
            "Canadian",
            "Cape Verdian",
            "Central African",
            "Chadian",
            "Chilean",
            "Chinese",
            "Colombian",
            "Comoran",
            "Congolese",
            "Costa Rican",
            "Croatian",
            "Cuban",
            "Cypriot",
            "Czech",
            "Danish",
            "Djibouti",
            "Dominican",
            "Dutch",
            "East Timorese",
            "Ecuadorean",
            "Egyptian",
            "Emirian",
            "Equatorial Guinean",
            "Eritrean",
            "Estonian",
            "Ethiopian",
            "Fijian",
            "Filipino",
            "Finnish",
            "French",
            "Gabonese",
            "Gambian",
            "Georgian",
            "German",
            "Ghanaian",
            "Greek",
            "Grenadian",
            "Guatemalan",
            "Guinean",
            "Guyanese",
            "Haitian",
            "Herzegovinian",
            "Honduran",
            "Hungarian",
            "Icelander",
            "Indian",
            "Indonesian",
            "Iranian",
            "Iraqi",
            "Irish",
            "Israeli",
            "Italian",
            "Ivorian",
            "Jamaican",
            "Japanese",
            "Jordanian",
            "Kazakhstani",
            "Kenyan",
            "Kiribati",
            "Kuwaiti",
            "Kyrgyz",
            "Laotian",
            "Latvian",
            "Lebanese",
            "Liberian",
            "Libyan",
            "Liechtensteiner",
            "Lithuanian",
            "Luxembourgish",
            "Macedonian",
            "Malagasy",
            "Malawian",
            "Malaysian",
            "Maldivan",
            "Malian",
            "Maltese",
            "Marshallese",
            "Mauritanian",
            "Mauritian",
            "Mexican",
            "Micronesian",
            "Moldovan",
            "Monegasque",
            "Mongolian",
            "Montenegrin",
            "Moroccan",
            "Mosotho",
            "Motswana",
            "Mozambican",
            "Namibian",
            "Nauruan",
            "Nepalese",
            "New Zealander",
            "Ni-Vanuatu",
            "Nicaraguan",
            "Nigerian",
            "Nigerien",
            "North Korean",
            "North Korean",
            "Northern Irish",
            "Norwegian",
            "Omani",
            "Pakistani",
            "Palauan",
            "Palestinian",
            "Panamanian",
            "Papua New Guinean",
            "Paraguayan",
            "Peruvian",
            "Polish",
            "Portuguese",
            "Qatari",
            "Romanian",
            "Russian",
            "Rwandan",
            "Saint Lucian",
            "Salvadoran",
            "Samoan",
            "San Marinese",
            "Sao Tomean",
            "Saudi",
            "Scottish",
            "Senegalese",
            "Serbian",
            "Seychellois",
            "Sierra Leonean",
            "Singaporean",
            "Slovakian",
            "Slovenian",
            "Solomon Islander",
            "Somali",
            "South African",
            "South Korean",
            "South Korean",
            "South Sudanese",
            "Spanish",
            "Sri Lankan",
            "Sudanese",
            "Surinamer",
            "Swazi",
            "Swedish",
            "Swiss",
            "Syrian",
            "Tajikistani",
            "Tanzanian",
            "Thai",
            "Togolese",
            "Tongan",
            "Trinidadian Tobagonian",
            "Tunisian",
            "Turkish",
            "Turkmen",
            "Tuvaluan",
            "Ugandan",
            "Ukrainian",
            "Uruguayan",
            "Uzbekistani",
            "Venezuelan",
            "Vietnamese",
            "Welsh",
            "Yemeni",
            "Zambian",
            "Zimbabwean"
          ],
          {
            "default": "-"
          }
        ],
        "nationality_2": [
          [
            "-",
            "Afghan",
            "Albanian",
            "Algerian",
            "Andorran",
            "Angolan",
            "Antiguans Barbudans",
            "Argentine",
            "Armenian",
            "Australian",
            "Austrian",
            "Azerbaijani",
            "Bahamian",
            "Bahraini",
            "Bangladeshi",
            "Barbadian",
            "Belarusian",
            "Belgian",
            "Belizean",
            "Beninese",
            "Bhutanese",
            "Bolivian",
            "Bosnian Herzegovinian",
            "Brazilian",
            "British",
            "Bruneian",
            "Bulgarian",
            "Burkinabe",
            "Burundian",
            "Cambodian",
            "Cameroonian",
            "Canadian",
            "Cape Verdian",
            "Central African",
            "Chadian",
            "Chilean",
            "Chinese",
            "Colombian",
            "Comoran",
            "Congolese",
            "Costa Rican",
            "Croatian",
            "Cuban",
            "Cypriot",
            "Czech",
            "Danish",
            "Djibouti",
            "Dominican",
            "Dutch",
            "East Timorese",
            "Ecuadorean",
            "Egyptian",
            "Emirian",
            "Equatorial Guinean",
            "Eritrean",
            "Estonian",
            "Ethiopian",
            "Fijian",
            "Filipino",
            "Finnish",
            "French",
            "Gabonese",
            "Gambian",
            "Georgian",
            "German",
            "Ghanaian",
            "Greek",
            "Grenadian",
            "Guatemalan",
            "Guinean",
            "Guyanese",
            "Haitian",
            "Herzegovinian",
            "Honduran",
            "Hungarian",
            "Icelander",
            "Indian",
            "Indonesian",
            "Iranian",
            "Iraqi",
            "Irish",
            "Israeli",
            "Italian",
            "Ivorian",
            "Jamaican",
            "Japanese",
            "Jordanian",
            "Kazakhstani",
            "Kenyan",
            "Kiribati",
            "Kuwaiti",
            "Kyrgyz",
            "Laotian",
            "Latvian",
            "Lebanese",
            "Liberian",
            "Libyan",
            "Liechtensteiner",
            "Lithuanian",
            "Luxembourgish",
            "Macedonian",
            "Malagasy",
            "Malawian",
            "Malaysian",
            "Maldivan",
            "Malian",
            "Maltese",
            "Marshallese",
            "Mauritanian",
            "Mauritian",
            "Mexican",
            "Micronesian",
            "Moldovan",
            "Monegasque",
            "Mongolian",
            "Montenegrin",
            "Moroccan",
            "Mosotho",
            "Motswana",
            "Mozambican",
            "Namibian",
            "Nauruan",
            "Nepalese",
            "New Zealander",
            "Ni-Vanuatu",
            "Nicaraguan",
            "Nigerian",
            "Nigerien",
            "North Korean",
            "North Korean",
            "Northern Irish",
            "Norwegian",
            "Omani",
            "Pakistani",
            "Palauan",
            "Palestinian",
            "Panamanian",
            "Papua New Guinean",
            "Paraguayan",
            "Peruvian",
            "Polish",
            "Portuguese",
            "Qatari",
            "Romanian",
            "Russian",
            "Rwandan",
            "Saint Lucian",
            "Salvadoran",
            "Samoan",
            "San Marinese",
            "Sao Tomean",
            "Saudi",
            "Scottish",
            "Senegalese",
            "Serbian",
            "Seychellois",
            "Sierra Leonean",
            "Singaporean",
            "Slovakian",
            "Slovenian",
            "Solomon Islander",
            "Somali",
            "South African",
            "South Korean",
            "South Korean",
            "South Sudanese",
            "Spanish",
            "Sri Lankan",
            "Sudanese",
            "Surinamer",
            "Swazi",
            "Swedish",
            "Swiss",
            "Syrian",
            "Tajikistani",
            "Tanzanian",
            "Thai",
            "Togolese",
            "Tongan",
            "Trinidadian Tobagonian",
            "Tunisian",
            "Turkish",
            "Turkmen",
            "Tuvaluan",
            "Ugandan",
            "Ukrainian",
            "Uruguayan",
            "Uzbekistani",
            "Venezuelan",
            "Vietnamese",
            "Welsh",
            "Yemeni",
            "Zambian",
            "Zimbabwean"
          ],
          {
            "default": "-"
          }
        ],
        "nationality_mix": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "body_type": [
          [
            "-",
            "Beefy",
            "Buff",
            "Buxom",
            "Chubby",
            "Curvy",
            "Fat",
            "Fit",
            "Flyweight",
            "Hefty",
            "Lanky",
            "Large",
            "Midweight",
            "Morbidly obese",
            "Muscular",
            "Obese",
            "Overweight",
            "Petite",
            "Plump",
            "Portly",
            "Rotund",
            "Short",
            "Skinny",
            "Slight",
            "Slim",
            "Small",
            "Stocky",
            "Stout",
            "Tall",
            "Thick",
            "Tiny",
            "Underweight",
            "Voluptuous",
            "Well-built",
            "Well-endowed"
          ],
          {
            "default": "-"
          }
        ],
        "body_type_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "model_pose": [
          [
            "-",
            "Adjusting Clothing Pose",
            "Against a Wall Pose",
            "Ajusting Hair Pose",
            "Arms Up Pose",
            "Artistic Dance Pose",
            "Back Arch Pose",
            "Battle Pose",
            "Bending Pose",
            "Captivating Pose",
            "Cartwheel Pose",
            "Casual Stroll Pose",
            "Chassing Pose",
            "Classical Dance Pose",
            "Close-Up Beauty Shot Pose",
            "Confident Stance Pose",
            "Contrapposto Pose",
            "Crouching Pose",
            "Dancing Pose",
            "Dynamic Action Pose",
            "Dynamic Jump Pose",
            "Dynamic Sitting Pose",
            "Eating Pose",
            "Expressive Female Pose",
            "Fashion Model Pose",
            "Feminine Pose",
            "Flipping Hair Pose",
            "Gazing into the Distance Pose",
            "Glamour Pose",
            "Hand-on-Hip Pose",
            "Handstand Pose",
            "Headshot Pose",
            "High Fashion Pose",
            "Holding Bag Pose",
            "Holding Glass Pose",
            "Holding Headset Pose",
            "Holding Ice Cream Pose",
            "Holding Microphone Pose",
            "Holding Pen Pose",
            "Holding Phone Pose",
            "Interacting with Props Pose",
            "Jojo Pose",
            "Jumping Pose",
            "Kneeling Pose",
            "Kung Fu Pose",
            "Laughing Candidly Pose",
            "Leaning Pose",
            "Lifting Pose",
            "Looking Back Over Shoulder Pose",
            "Lying Down Pose",
            "Magic Pose",
            "Masculine Pose",
            "Meditation Pose",
            "Movement Pose",
            "Muscle Pose",
            "One Hand on Face Pose",
            "One Leg Up Pose",
            "Over-the-Shoulder Look Pose",
            "Power Pose",
            "Reaching Pose",
            "Reaching Pose",
            "Reading Book Pose",
            "Relaxing Pose",
            "Relaxing Sitting Pose",
            "Riding Pose",
            "Royal Pose",
            "Running Pose",
            "S-curve Pose",
            "S-shape Pose",
            "Sexy Pose",
            "Sitting Cross-Legged Pose",
            "Sitting Pose",
            "Skipping Pose",
            "Smoking Pose",
            "Standing Pose",
            "Stretching Pose",
            "The Over-the-Shoulder Look Pose",
            "Tilted Head Pose",
            "Touching Ear Pose",
            "Touching Face Pose",
            "Touching Hair Pose",
            "Twirling Pose",
            "Upturned Eyes Shape",
            "Vogue Pose",
            "Walking Pose",
            "Watercolor Makeup Pose",
            "Waving Hand Pose",
            "Yoga Pose"
          ],
          {
            "default": "-"
          }
        ],
        "clothes": [
          [
            "-",
            "Bohemian Dress",
            "Business Casual Dress",
            "Business Formal Dress",
            "Business Professional Dress",
            "Casual Chic Dress",
            "Casual Dress",
            "Club Dress",
            "Cocktail Dress",
            "Edgy Dress",
            "Formal Dress",
            "Gothic Dress",
            "Hipster Dress",
            "Party Dress",
            "Preppy Dress",
            "Punk Dress",
            "Retro Dress",
            "Smart Casual Dress",
            "Sporty Dress",
            "Streetwear Dress",
            "Vintage Dress"
          ],
          {
            "default": "-"
          }
        ],
        "eyes_color": [
          [
            "-",
            "Albino",
            "Amber",
            "Blue",
            "Brown",
            "Gray",
            "Green",
            "Hazel",
            "Heterochromia",
            "Red",
            "Violet"
          ],
          {
            "default": "-"
          }
        ],
        "eyes_shape": [
          [
            "-",
            "Almond Eyes Shape",
            "Asian Eyes Shape",
            "Close-Set Eyes Shape",
            "Deep Set Eyes Shape",
            "Double Eyelid Eyes Shape",
            "Downturned Eyes Shape",
            "Hooded Eyes Shape",
            "Monolid Eyes Shape",
            "Oval Eyes Shape",
            "Protruding Eyes Shape",
            "Round Eyes Shape",
            "Upturned Eyes Shape"
          ],
          {
            "default": "-"
          }
        ],
        "lips_color": [
          [
            "-",
            "Berry Lips",
            "Black Lips",
            "Blue Lips",
            "Brown Lips",
            "Burgundy Lips",
            "Coral Lips",
            "Glossy Red Lips",
            "Mauve Lips",
            "Orange Lips",
            "Peach Lips",
            "Pink Lips",
            "Plum Lips",
            "Purple Lips",
            "Red Lips",
            "Yellow Lips"
          ],
          {
            "default": "-"
          }
        ],
        "lips_shape": [
          [
            "-",
            "Biting Lips",
            "Bow-shaped Lips",
            "Closed Lips",
            "Cupid's Bow Lips",
            "Defined Cupid's Bow Lips",
            "Flat Cupid's Bow Lips",
            "Full Lips",
            "Heart-shaped Lips",
            "Large Lips",
            "Medium Lips",
            "Neutral Lips",
            "Parted Lips",
            "Plump Lips",
            "Pouting Lips",
            "Round Lips",
            "Small Lips",
            "Smiling Lips",
            "Soft Cupid's Bow Lips",
            "Thin Lips",
            "Upper Lip Mole Lips",
            "Wide Lips"
          ],
          {
            "default": "-"
          }
        ],
        "facial_expression": [
          [
            "-",
            "Amused",
            "Angry",
            "Anxious",
            "Bored",
            "Calm",
            "Cautious",
            "Confused",
            "Contemptuous",
            "Content",
            "Curious",
            "Disappointed",
            "Disgusted",
            "Envious",
            "Excited",
            "Fearful",
            "Happy",
            "In love",
            "Nervous",
            "Peaceful",
            "Pensive",
            "Prideful",
            "Proud",
            "Relieved",
            "Sad",
            "Sarcastic",
            "Serene",
            "Serious",
            "Shy",
            "Silly",
            "Smiling",
            "Surprised",
            "Surprised and Amused"
          ],
          {
            "default": "-"
          }
        ],
        "facial_expression_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "face_shape": [
          [
            "-",
            "Circle",
            "Diamond",
            "Heart",
            "Heart with Pointed Chin",
            "Heart with Rounded Chin",
            "Heart with V-Shape Chin",
            "Inverted Triangle",
            "Long",
            "Oblong",
            "Oval",
            "Pear",
            "Rectangle",
            "Round",
            "Round with Defined Cheekbones",
            "Round with High Cheekbones",
            "Round with Soft Cheekbones",
            "Square",
            "Square Oval",
            "Square Round",
            "Square with Rounded Jaw",
            "Square with Sharp Jaw",
            "Square with Soft Jaw",
            "Triangle"
          ],
          {
            "default": "-"
          }
        ],
        "face_shape_weight": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.05,
            "min": 0,
            "max": 1.95,
            "display": "slider"
          }
        ],
        "facial_asymmetry": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "hair_style": [
          [
            "-",
            "A-line bob",
            "Afro",
            "Asymmetrical",
            "Balayage",
            "Bald",
            "Ballerina bun",
            "Bangs",
            "Beehive",
            "Beehivecut",
            "Bleached spikes",
            "Blunt",
            "Blunt bob",
            "Bob",
            "Bouffant",
            "Bowl",
            "Box braids",
            "Box fade",
            "Braided",
            "Braided bob",
            "Braided pigtails",
            "Brave shortcut with shaved sides",
            "Bushy",
            "Buzz",
            "Caesar",
            "Chignon",
            "Choppy",
            "Cloudy",
            "Cornrows",
            "Cornrows",
            "Crew",
            "Curly",
            "Curly Frizzy",
            "Curly bob",
            "Curtain bangs",
            "Deep side part",
            "Double Bun",
            "Dreadlocks",
            "Faded afro",
            "Faux hawk",
            "Faux hawk short pixie",
            "Feathered",
            "Female bald",
            "Fishtail braids",
            "Flat topcut",
            "French bob",
            "French braids",
            "French twist",
            "Frohawk",
            "Hair ringlets",
            "High ponytail",
            "High skin fade",
            "Honey",
            "Italian bob",
            "Layered",
            "Lemonade braids",
            "Long bob",
            "Long pixie",
            "Long ponytail",
            "Long straight",
            "Long with bangs",
            "Loose Curly Afro",
            "Marmaid waves",
            "Micro braids",
            "Middle part ponytails",
            "Modern caesar",
            "Mohawk",
            "Multicolored",
            "Pastel",
            "Pigtails",
            "Pixie",
            "Platinum",
            "Pompadour",
            "Quiff",
            "Razor fade with curls",
            "Red",
            "Right side shaved",
            "Salt and pepper",
            "Shag",
            "Short",
            "Short curly",
            "Short curly pixie",
            "Short messy curls",
            "Shoulder Length with Bangs",
            "Shoulder length straight",
            "Side Part Comb-Overstyle With High Fade",
            "Side braid",
            "Side-swept bangs",
            "Side-swept fringe",
            "Sideswept pixie",
            "Smooth lob",
            "Space buns",
            "Spiky",
            "Spiky",
            "Stacked Curls in Short Bob",
            "Stacked bob",
            "Stitch braids",
            "Strawberry",
            "Strawberry blonde",
            "Sweeping pixie",
            "Taper fade with waves",
            "Taperedcut with shaved side",
            "Textured",
            "Textured brush back",
            "Tomboy",
            "Top Knot",
            "Twin braids",
            "Twintails",
            "Two dutch braids",
            "Undercut",
            "Updo",
            "Very long wave",
            "Waterfall braids",
            "Wavy",
            "Wavy French Bob Vibes from 1920",
            "Wavy bob",
            "Wavy undercut",
            "Wavy with curtain bangs"
          ],
          {
            "default": "-"
          }
        ],
        "hair_color": [
          [
            "-",
            "Auburn",
            "Black",
            "Blonde",
            "Burgundy",
            "Caramel",
            "Chestnut",
            "Chocolate",
            "Copper",
            "Dirty",
            "Gray",
            "Honey",
            "Jet Black",
            "Mahogany",
            "Multicolored",
            "Pastel",
            "Platinum",
            "Red",
            "Salt and pepper",
            "Silver",
            "Strawberry",
            "White"
          ],
          {
            "default": "-"
          }
        ],
        "hair_length": [
          [
            "-",
            "Long hair",
            "Medium hair",
            "Short hair"
          ],
          {
            "default": "-"
          }
        ],
        "disheveled": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "makeup": [
          [
            "-",
            "Anime Makeup",
            "Artistic Makeup",
            "Avant-garde Makeup",
            "Bohemian Makeup",
            "Boho Makeup",
            "Classic Makeup",
            "Cut Crease Makeup",
            "Dewy Makeup",
            "Edgy Makeup",
            "Festival Makeup",
            "Glam Makeup",
            "Glowy Makeup",
            "Golden Makeup",
            "Monochromatic Makeup",
            "Natural Makeup",
            "No-Makeup",
            "Party Makeup",
            "Retro Makeup",
            "Sunset Eye Makeup",
            "Vintage Makeup",
            "Watercolor Makeup"
          ],
          {
            "default": "-"
          }
        ],
        "beard": [
          [
            "-",
            "Anchor Beard",
            "Balbo Beard",
            "Chevron Mustache",
            "Chinstrap Beard",
            "Circle Beard",
            "Corporate Beard",
            "Ducktail Beard",
            "Friendly Mutton Chops",
            "Full Beard",
            "Garibaldi Beard",
            "Goatee",
            "Handlebar Mustache",
            "Horseshoe Mustache",
            "Imperial Mustache",
            "Mutton Chops",
            "Pencil Mustache",
            "Soul Patch",
            "Stubble Beard",
            "Van Dyke Beard",
            "Zappa Mustache"
          ],
          {
            "default": "-"
          }
        ],
        "natural_skin": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "bare_face": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "washed_face": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "dried_face": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "skin_details": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "skin_pores": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "dimples": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "wrinkles": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "freckles": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "moles": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "skin_imperfections": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "skin_acne": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "tanned_skin": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "eyes_details": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "iris_details": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "circular_iris": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "circular_pupil": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "light_type": [
          [
            "-",
            "Abstract Light Patterns",
            "Ambient Light",
            "Backlight Light",
            "Backlit Silhouette Light",
            "Bloom Light",
            "Blue Hour Light",
            "Broad Lighting Light",
            "Bulb Light",
            "Buterfly Lighting Light",
            "Candlelight",
            "Caustics Light",
            "Cinematic Lighting Light",
            "City Streetlights Light",
            "Cloudy Day Diffused Light",
            "Corona Light",
            "Crepuscular Rays Light",
            "Dappled Sunlight Light",
            "Dimly Lit Light",
            "Fill Light",
            "Firelight",
            "Flash Photography Light",
            "Fluorescent Lighting",
            "Fog and Mist Light",
            "Glare Light",
            "Golden Hour Light",
            "Halos Light",
            "Harsh Sunlight Light",
            "Heat Haze Light",
            "High-Key Lighting Light",
            "Incandescent Lighting",
            "Lantern Light",
            "Lens Flare Light",
            "Lightning Light",
            "Loop Lighting Light",
            "Low-Key Lighting Light",
            "Mist Light",
            "Moonlight Light",
            "Natural Light",
            "Neon Lights Light",
            "Overcast Sky Light",
            "Rainbows Light",
            "Reflections Light",
            "Rembrandt Lighting Light",
            "Rim Light",
            "Rim Lighting Light",
            "Scattering Light",
            "Shadows Light",
            "Side Light",
            "Silhouette Light",
            "Skylight Light",
            "Soft Ambient Light",
            "Soft Light",
            "Softbox Lighting Light",
            "Speedlight Light",
            "Split Lighting Light",
            "Spot Light",
            "Spotlight Light",
            "Stage Lighting Light",
            "Strip Light",
            "Studio Lighting Light",
            "Sunlight Light",
            "Sunrise Warmth Light",
            "Sunset Glow Light",
            "Thuderstorms Light",
            "Top Light",
            "Torchlight Light",
            "Tungsten Lighting Light",
            "Twilight Hues Light",
            "Underlighting Light",
            "Volumetric Lighting Light"
          ],
          {
            "default": "-"
          }
        ],
        "light_direction": [
          [
            "-",
            "from bottom",
            "from bottom-left",
            "from bottom-right",
            "from front",
            "from left",
            "from rear",
            "from right",
            "from top",
            "from top-left",
            "from top-right"
          ],
          {
            "default": "-"
          }
        ],
        "light_weight": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "photorealism_improvement": [
          [
            "enable",
            "disable"
          ]
        ],
        "prompt_start": [
          "STRING",
          {
            "multiline": true,
            "default": "raw photo, (realistic:1.5)"
          }
        ],
        "prompt_additional": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "prompt_end": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "negative_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "style_1": [
          [
            "-",
            "Agfa Vista",
            "Astia",
            "Aurora Borealis",
            "Black and White Photography",
            "Bleach Bypass",
            "Charcoal Sketch",
            "CineStyle",
            "City Lights",
            "Classic Chrome",
            "Cool Blue Tint",
            "Cross Hatch",
            "Cross Process",
            "Cyanotype",
            "Day to Night",
            "Dreamy Desaturation",
            "Duotone",
            "Ektachrome",
            "Faded Glory",
            "Fashion Photography",
            "Golden Hour Glow",
            "Graphic Novel Style",
            "Gritty Contrast",
            "HDR Look",
            "HDR Photography",
            "High Key",
            "Holga",
            "Infrared Effect",
            "Kodachrome",
            "Lomo",
            "Lomography",
            "Low Key",
            "Mars Red Landscape",
            "Matte Finish",
            "Midnight Cool",
            "Minimalist Photography",
            "Monochromatic Photography",
            "Muted Colors",
            "Nature Photography",
            "Neon Glow",
            "Oil Painting Effect",
            "Orton Effect",
            "Pastel Hues",
            "Pastel Pop",
            "Polaroid",
            "Polaroid Photography",
            "Pop Art Colors",
            "Provia",
            "Sepia Photography",
            "Sepia Tone",
            "Smoke Art Photography",
            "Solarization",
            "Split Toning",
            "Street Photography",
            "Sunset Warmth",
            "Surreal Photography",
            "Tri-tone",
            "Twilight Blue",
            "Underwater Photography",
            "Urban Exploration (Urbex)",
            "Velvia",
            "Vibrant Colors",
            "Vintage Fade",
            "Vintage Photography",
            "Warm Orange Glow",
            "Watercolor Effect"
          ],
          {
            "default": "-"
          }
        ],
        "style_1_weight": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "style_2": [
          [
            "-",
            "Agfa Vista",
            "Astia",
            "Aurora Borealis",
            "Black and White Photography",
            "Bleach Bypass",
            "Charcoal Sketch",
            "CineStyle",
            "City Lights",
            "Classic Chrome",
            "Cool Blue Tint",
            "Cross Hatch",
            "Cross Process",
            "Cyanotype",
            "Day to Night",
            "Dreamy Desaturation",
            "Duotone",
            "Ektachrome",
            "Faded Glory",
            "Fashion Photography",
            "Golden Hour Glow",
            "Graphic Novel Style",
            "Gritty Contrast",
            "HDR Look",
            "HDR Photography",
            "High Key",
            "Holga",
            "Infrared Effect",
            "Kodachrome",
            "Lomo",
            "Lomography",
            "Low Key",
            "Mars Red Landscape",
            "Matte Finish",
            "Midnight Cool",
            "Minimalist Photography",
            "Monochromatic Photography",
            "Muted Colors",
            "Nature Photography",
            "Neon Glow",
            "Oil Painting Effect",
            "Orton Effect",
            "Pastel Hues",
            "Pastel Pop",
            "Polaroid",
            "Polaroid Photography",
            "Pop Art Colors",
            "Provia",
            "Sepia Photography",
            "Sepia Tone",
            "Smoke Art Photography",
            "Solarization",
            "Split Toning",
            "Street Photography",
            "Sunset Warmth",
            "Surreal Photography",
            "Tri-tone",
            "Twilight Blue",
            "Underwater Photography",
            "Urban Exploration (Urbex)",
            "Velvia",
            "Vibrant Colors",
            "Vintage Fade",
            "Vintage Photography",
            "Warm Orange Glow",
            "Watercolor Effect"
          ],
          {
            "default": "-"
          }
        ],
        "style_2_weight": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 1.95,
            "step": 0.05,
            "display": "slider"
          }
        ],
        "random_shot": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_gender": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_age": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_androgynous": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_nationality": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_body_type": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_model_pose": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_clothes": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_eyes_color": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_eyes_shape": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_lips_color": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_lips_shape": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_facial_expression": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_hairstyle": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_hair_color": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_hair_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_disheveled": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_makeup": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_freckles": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_moles": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_skin_imperfections": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_beard": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_style_1": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "random_style_2": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "PortraitMaster",
    "display_name": "Portrait Master v.2.9",
    "description": "",
    "category": "AI WizArt",
    "output_node": false
  },
  "Lerp": {
    "input": {
      "required": {
        "num_Images": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "Lerp",
    "display_name": "Lerp \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "SinWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_translation": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "SinWave",
    "display_name": "SinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "InvSinWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_translation": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "InvSinWave",
    "display_name": "InvSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "CosWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_translation": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "CosWave",
    "display_name": "CosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "InvCosWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_translation": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "InvCosWave",
    "display_name": "InvCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "SquareWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_translation": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "SquareWave",
    "display_name": "SquareWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "SawtoothWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "step_increment": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "start_value": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "SawtoothWave",
    "display_name": "SawtoothWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "TriangleWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_translation": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "TriangleWave",
    "display_name": "TriangleWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "AbsCosWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "max_value": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "AbsCosWave",
    "display_name": "AbsCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "AbsSinWave": {
    "input": {
      "required": {
        "phase": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "x_translation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "max_value": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.05
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "AbsSinWave",
    "display_name": "AbsSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    "output_node": false
  },
  "PromptSchedule": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
          }
        ],
        "clip": [
          "CLIP"
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "PromptSchedule",
    "display_name": "Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    "output_node": false
  },
  "ValueSchedule": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n"
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "ValueSchedule",
    "display_name": "Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    "output_node": false
  },
  "PromptScheduleNodeFlow": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "num_frames": [
          "INT",
          {
            "default": 24.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      },
      "optional": {
        "in_text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "STRING"
    ],
    "name": "PromptScheduleNodeFlow",
    "display_name": "Prompt Schedule NodeFlow \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    "output_node": false
  },
  "PromptScheduleNodeFlowEnd": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "forceInput": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "max_frames": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ]
      },
      "optional": {
        "pre_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "PromptScheduleNodeFlowEnd",
    "display_name": "Prompt Schedule NodeFlow End \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    "output_node": false
  },
  "PromptScheduleEncodeSDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text_G": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text_G": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pre_text_L": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text_L": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "PromptScheduleEncodeSDXL",
    "display_name": "Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    "output_node": false
  },
  "StringSchedule": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "StringSchedule",
    "display_name": "String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    "output_node": false
  },
  "BatchPromptSchedule": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
          }
        ],
        "clip": [
          "CLIP"
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "BatchPromptSchedule",
    "display_name": "Batch Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    "output_node": false
  },
  "BatchValueSchedule": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n"
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT"
    ],
    "name": "BatchValueSchedule",
    "display_name": "Batch Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    "output_node": false
  },
  "BatchPromptScheduleEncodeSDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text_G": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text_G": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pre_text_L": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text_L": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "BatchPromptScheduleEncodeSDXL",
    "display_name": "Batch Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    "output_node": false
  },
  "BatchStringSchedule": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "BatchStringSchedule",
    "display_name": "Batch String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    "output_node": false
  },
  "BatchValueScheduleLatentInput": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n"
          }
        ],
        "num_latents": [
          "LATENT"
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT",
      "LATENT"
    ],
    "name": "BatchValueScheduleLatentInput",
    "display_name": "Batch Value Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    "output_node": false
  },
  "BatchPromptScheduleSDXLLatentInput": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "num_latents": [
          "LATENT"
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text_G": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text_G": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pre_text_L": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text_L": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG"
    ],
    "name": "BatchPromptScheduleSDXLLatentInput",
    "display_name": "Batch Prompt Schedule SDXL (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    "output_node": false
  },
  "BatchPromptScheduleLatentInput": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
          }
        ],
        "clip": [
          "CLIP"
        ],
        "num_latents": [
          "LATENT"
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "pre_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "app_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "pw_a": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_b": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_c": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ],
        "pw_d": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "POS",
      "NEG",
      "INPUT_LATENTS"
    ],
    "name": "BatchPromptScheduleLatentInput",
    "display_name": "Batch Prompt Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    "output_node": false
  },
  "ImagesFromBatchSchedule": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 120.0,
            "min": 1.0,
            "max": 999999.0,
            "step": 1.0
          }
        ],
        "print_output": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImagesFromBatchSchedule",
    "display_name": "Image Select Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    "output_node": false
  },
  "StringConcatenate": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true,
            "default": ""
          }
        ],
        "frame_a": [
          "INT",
          {
            "default": 0
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true,
            "default": ""
          }
        ],
        "frame_b": [
          "INT",
          {
            "default": 12
          }
        ]
      },
      "optional": {
        "text_c": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true,
            "default": ""
          }
        ],
        "frame_c": [
          "INT",
          {
            "default": 24
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true,
            "default": ""
          }
        ],
        "frame_d": [
          "INT",
          {
            "default": 36
          }
        ],
        "text_e": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true,
            "default": ""
          }
        ],
        "frame_e": [
          "INT",
          {
            "default": 48
          }
        ],
        "text_f": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true,
            "default": ""
          }
        ],
        "frame_f": [
          "INT",
          {
            "default": 60
          }
        ],
        "text_g": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true,
            "default": ""
          }
        ],
        "frame_g": [
          "INT",
          {
            "default": 72
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "StringConcatenate",
    "display_name": "String Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    "output_node": false
  },
  "Init FizzFrame": {
    "input": {
      "required": {
        "frame": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "positive_text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "negative_text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "general_positive": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "general_negative": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "previous_frame": [
          "FIZZFRAME",
          {
            "forceInput": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "FIZZFRAME",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "FIZZFRAME",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "Init FizzFrame",
    "display_name": "Init Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    "output_node": false
  },
  "FizzFrame": {
    "input": {
      "required": {
        "frame": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "previous_frame": [
          "FIZZFRAME",
          {
            "forceInput": true
          }
        ],
        "positive_text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "negative_text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "FIZZFRAME",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "FIZZFRAME",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "FizzFrame",
    "display_name": "Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    "output_node": false
  },
  "FizzFrameConcatenate": {
    "input": {
      "required": {
        "frame": [
          "FIZZFRAME",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "FizzFrameConcatenate",
    "display_name": "Frame Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    "output_node": false
  },
  "ConcatStringSingle": {
    "input": {
      "required": {
        "string_a": [
          "STRING",
          {
            "forceInput": true,
            "default": "",
            "multiline": true
          }
        ],
        "string_b": [
          "STRING",
          {
            "forceInput": true,
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ConcatStringSingle",
    "display_name": "Concat String (Single) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
    "output_node": false
  },
  "convertKeyframeKeysToBatchKeys": {
    "input": {
      "required": {
        "input": [
          "INT",
          {
            "forceInput": true,
            "default": 0
          }
        ],
        "num_latents": [
          "INT",
          {
            "default": 16
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "convertKeyframeKeysToBatchKeys",
    "display_name": "Keyframe Keys To Batch Keys \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
    "output_node": false
  },
  "CalculateFrameOffset": {
    "input": {
      "required": {
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 18,
            "min": 0
          }
        ],
        "num_latent_inputs": [
          "INT",
          {
            "default": 4,
            "min": 0
          }
        ],
        "index": [
          "INT",
          {
            "default": 4,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "CalculateFrameOffset",
    "display_name": "Calculate Frame Offset \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    "description": "",
    "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
    "output_node": false
  },
  "XY Input: Lora Block Weight //Inspire": {
    "input": {
      "required": {
        "category_filter": [
          [
            "All",
            ""
          ]
        ],
        "lora_name": [
          [
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "@SD-FULL-TEST:17",
            "@SD-BLOCK1-TEST:17,12,1",
            "@SD-BLOCK2-TEST:17,12,2",
            "@SD-BLOCK3-TEST:17,12,3",
            "@SD-BLOCK4-TEST:17,12,4",
            "@SD-BLOCK5-TEST:17,12,5",
            "@SD-BLOCK6-TEST:17,12,6",
            "@SD-BLOCK7-TEST:17,12,7",
            "@SD-BLOCK8-TEST:17,12,8",
            "@SD-BLOCK9-TEST:17,12,9",
            "@SD-BLOCK10-TEST:17,12,10",
            "@SD-BLOCK11-TEST:17,12,11",
            "@SD-BLOCK12-TEST:17,12,12",
            "@SD-BLOCK13-TEST:17,12,13",
            "@SD-BLOCK14-TEST:17,12,14",
            "@SD-BLOCK15-TEST:17,12,15",
            "@SD-BLOCK16-TEST:17,12,16",
            "@SD-BLOCK17-TEST:17,12,17",
            "@SD-LyC-FULL-TEST:27",
            "@SDXL-FULL-TEST:12",
            "@SDXL-LyC-FULL-TEST:21"
          ]
        ],
        "block_vectors": [
          "STRING",
          {
            "multiline": true,
            "default": "SD-NONE/SD-ALL\nSD-ALL/SD-ALL\nSD-INS/SD-ALL\nSD-IND/SD-ALL\nSD-INALL/SD-ALL\nSD-MIDD/SD-ALL\nSD-MIDD0.2/SD-ALL\nSD-MIDD0.8/SD-ALL\nSD-MOUT/SD-ALL\nSD-OUTD/SD-ALL\nSD-OUTS/SD-ALL\nSD-OUTALL/SD-ALL",
            "placeholder": "{target vector}/{reference vector}",
            "pysssss.autocomplete": false
          }
        ],
        "heatmap_palette": [
          [
            "viridis",
            "magma",
            "plasma",
            "inferno",
            "cividis"
          ]
        ],
        "heatmap_alpha": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "heatmap_strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "xyplot_mode": [
          [
            "Simple",
            "Diff",
            "Diff+Heatmap"
          ]
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "X (vectors)",
      "Y (effect_compares)"
    ],
    "name": "XY Input: Lora Block Weight //Inspire",
    "display_name": "XY Input: Lora Block Weight",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraLoaderBlockWeight //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "category_filter": [
          [
            "All",
            ""
          ]
        ],
        "lora_name": [
          [
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 4.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1"
          ]
        ],
        "block_vector": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "block weight vectors",
            "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "pysssss.autocomplete": false
          }
        ],
        "bypass": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "populated_vector"
    ],
    "name": "LoraLoaderBlockWeight //Inspire",
    "display_name": "Lora Loader (Block Weight)",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraBlockInfo //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "block_info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LoraBlockInfo //Inspire",
    "display_name": "Lora Block Info",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": true
  },
  "OpenPose_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "OpenPose_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "OpenPose Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "DWPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "DWPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "DWPreprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 6.283185307179586,
            "min": 0.0,
            "max": 15.707963267948966,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MiDaS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ]
      },
      "optional": {
        "boost": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LeReS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Canny_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Canny_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Canny Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MediaPipe FaceMesh Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "HEDPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "HEDPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "HED Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "FakeScribblePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "FakeScribblePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Fake Scribble Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "AnimeLineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Manga2Anime LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "coarse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Color_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Color_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Color Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "InpaintPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "InpaintPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Inpaint Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "TilePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "TilePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Tile Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire",
    "display_name": "MeshGraphormer Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipeFaceMeshDetectorProvider //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "name": "MediaPipeFaceMeshDetectorProvider //Inspire",
    "display_name": "MediaPipeFaceMesh Detector Provider",
    "description": "",
    "category": "InspirePack/Detector",
    "output_node": false
  },
  "KSampler //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler //Inspire",
    "display_name": "KSampler (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerAdvanced //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise_opt": [
          "NOISE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerAdvanced //Inspire",
    "display_name": "KSamplerAdvanced (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerPipe //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "VAE"
    ],
    "name": "KSamplerPipe //Inspire",
    "display_name": "KSampler [pipe] (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerAdvancedPipe //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise_opt": [
          "NOISE"
        ]
      }
    },
    "output": [
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "VAE"
    ],
    "name": "KSamplerAdvancedPipe //Inspire",
    "display_name": "KSamplerAdvanced [pipe] (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "HyperTile //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "HyperTile //Inspire",
    "display_name": "HyperTile (Inspire)",
    "description": "",
    "category": "InspirePack/__for_testing",
    "output_node": false
  },
  "LoadPromptsFromDir //Inspire": {
    "input": {
      "required": {
        "prompt_dir": [
          [
            "example"
          ]
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadPromptsFromDir //Inspire",
    "display_name": "Load Prompts From Dir (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "LoadPromptsFromFile //Inspire": {
    "input": {
      "required": {
        "prompt_file": [
          [
            "example/prompt1.txt",
            "example/prompt2.txt"
          ]
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadPromptsFromFile //Inspire",
    "display_name": "Load Prompts From File (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "LoadSinglePromptFromFile //Inspire": {
    "input": {
      "required": {
        "prompt_file": [
          [
            "example/prompt1.txt",
            "example/prompt2.txt"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadSinglePromptFromFile //Inspire",
    "display_name": "Load Single Prompt From File (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "UnzipPrompt //Inspire": {
    "input": {
      "required": {
        "zipped_prompt": [
          "ZIPPED_PROMPT"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "name"
    ],
    "name": "UnzipPrompt //Inspire",
    "display_name": "Unzip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "ZipPrompt //Inspire": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      },
      "optional": {
        "name_opt": [
          "STRING",
          {
            "forceInput": true,
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "ZipPrompt //Inspire",
    "display_name": "Zip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "PromptExtractor //Inspire": {
    "input": {
      "required": {
        "image": [
          [
            "2022-06-23 19-46-52-280417 (1).png",
            "2022-06-23 19-46-52-280417.png",
            "ChMkJ13cwnOIK4FoAAXGX559JJgAAvbPAImQfAABcZ3473 (1).jpg",
            "IMG_20230624_115309.jpg",
            "R-C.jpg",
            "example.png",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (1).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (2).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG.webp"
          ],
          {
            "image_upload": true
          }
        ],
        "positive_id": [
          "STRING",
          {}
        ],
        "negative_id": [
          "STRING",
          {}
        ],
        "info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "PromptExtractor //Inspire",
    "display_name": "Prompt Extractor (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "GlobalSeed //Inspire": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "control_before_generate",
            "label_off": "control_after_generate"
          }
        ],
        "action": [
          [
            "fixed",
            "increment",
            "decrement",
            "randomize",
            "increment for each node",
            "decrement for each node",
            "randomize for each node"
          ]
        ],
        "last_seed": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "GlobalSeed //Inspire",
    "display_name": "Global Seed (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "GlobalSampler //Inspire": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "GlobalSampler //Inspire",
    "display_name": "Global Sampler (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "BindImageListPromptList //Inspire": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "zipped_prompts": [
          "ZIPPED_PROMPT"
        ],
        "default_positive": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default positive"
          }
        ],
        "default_negative": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default negative"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      true,
      true,
      true
    ],
    "output_name": [
      "image",
      "positive",
      "negative",
      "prompt_label"
    ],
    "name": "BindImageListPromptList //Inspire",
    "display_name": "Bind [ImageList, PromptList] (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "WildcardEncode //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ],
          {
            "default": "comfy++"
          }
        ],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Wildcard Prompt (User Input)"
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Prompt (Will be generated automatically)"
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "conditioning",
      "populated_text"
    ],
    "name": "WildcardEncode //Inspire",
    "display_name": "Wildcard Encode (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "PromptBuilder //Inspire": {
    "input": {
      "required": {
        "category": [
          [
            "Angle of View",
            "Artists",
            "Character Types",
            "Colors",
            "Composition",
            "Composition Form",
            "Lighting",
            "Negative",
            "Picture Effect",
            "Picture Quality",
            "Setting",
            "Shot",
            "Style",
            "#PLACEHOLDER"
          ]
        ],
        "preset": [
          [
            "#PRESET"
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "PromptBuilder //Inspire",
    "display_name": "Prompt Builder (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "SeedExplorer //Inspire": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "initial_batch_seed_mode": [
          [
            "incremental",
            "comfy"
          ]
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "name": "SeedExplorer //Inspire",
    "display_name": "Seed Explorer (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "ListCounter //Inspire": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "base_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "ListCounter //Inspire",
    "display_name": "List Counter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "CLIPTextEncodeWithWeight //Inspire": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "add_weight": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeWithWeight //Inspire",
    "display_name": "CLIPTextEncodeWithWeight (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RandomGeneratorForList //Inspire": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "signal",
      "random_value"
    ],
    "name": "RandomGeneratorForList //Inspire",
    "display_name": "Random Generator for List (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "MakeBasicPipe //Inspire": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "ckpt_key_opt": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'ckpt_name' as the key."
          }
        ],
        "positive_wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Positive Prompt (User Input)"
          }
        ],
        "negative_wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Negative Prompt (User Input)"
          }
        ],
        "Add selection to": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Positive",
            "label_off": "Negative"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "wildcard_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "positive_populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Positive Prompt (Will be generated automatically)"
          }
        ],
        "negative_populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Negative Prompt (Will be generated automatically)"
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ],
          {
            "default": "comfy++"
          }
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "vae_opt": [
          "VAE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "basic_pipe",
      "cache_key"
    ],
    "name": "MakeBasicPipe //Inspire",
    "display_name": "Make Basic Pipe (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "RemoveControlNet //Inspire": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "RemoveControlNet //Inspire",
    "display_name": "Remove ControlNet (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RemoveControlNetFromRegionalPrompts //Inspire": {
    "input": {
      "required": {
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RemoveControlNetFromRegionalPrompts //Inspire",
    "display_name": "Remove ControlNet [RegionalPrompts] (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "LoadImagesFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "load_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "LoadImagesFromDir //Inspire",
    "display_name": "Load Image Batch From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageListFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "load_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      true,
      true
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImageListFromDir //Inspire",
    "display_name": "Load Image List From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImage //Inspire": {
    "input": {
      "required": {
        "image": [
          [
            "2022-06-23 19-46-52-280417 (1).png",
            "2022-06-23 19-46-52-280417.png",
            "ChMkJ13cwnOIK4FoAAXGX559JJgAAvbPAImQfAABcZ3473 (1).jpg",
            "IMG_20230624_115309.jpg",
            "R-C.jpg",
            "example.png",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (1).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (2).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG.webp",
            "#DATA"
          ],
          {
            "image_upload": true
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImage //Inspire",
    "display_name": "Load Image (Inspire)",
    "description": "",
    "category": "InspirePack/image",
    "output_node": false
  },
  "ChangeImageBatchSize //Inspire": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "mode": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ChangeImageBatchSize //Inspire",
    "display_name": "Change Image Batch Size (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ChangeLatentBatchSize //Inspire": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "mode": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "ChangeLatentBatchSize //Inspire",
    "display_name": "Change Latent Batch Size (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ImageBatchSplitter //Inspire": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "split_count": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchSplitter //Inspire",
    "display_name": "Image Batch Splitter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "LatentBatchSplitter //Inspire": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "split_count": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatchSplitter //Inspire",
    "display_name": "Latent Batch Splitter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RegionalPromptSimple //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "mask": [
          "MASK"
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RegionalPromptSimple //Inspire",
    "display_name": "Regional Prompt Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalPromptColorMask //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS",
      "MASK"
    ],
    "name": "RegionalPromptColorMask //Inspire",
    "display_name": "Regional Prompt By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningSimple //Inspire": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "mask": [
          "MASK"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "RegionalConditioningSimple //Inspire",
    "display_name": "Regional Conditioning Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningColorMask //Inspire": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "MASK"
    ],
    "name": "RegionalConditioningColorMask //Inspire",
    "display_name": "Regional Conditioning By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "neg_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER"
    ],
    "name": "RegionalIPAdapterMask //Inspire",
    "display_name": "Regional IPAdapter Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "neg_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "name": "RegionalIPAdapterColorMask //Inspire",
    "display_name": "Regional IPAdapter By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "embeds": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "neg_embeds": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER"
    ],
    "name": "RegionalIPAdapterEncodedMask //Inspire",
    "display_name": "Regional IPAdapter Encoded Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "embeds": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "neg_embeds": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "name": "RegionalIPAdapterEncodedColorMask //Inspire",
    "display_name": "Regional IPAdapter Encoded By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "noise": [
          "NOISE"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "name": "RegionalSeedExplorerMask //Inspire",
    "display_name": "Regional Seed Explorer By Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "noise": [
          "NOISE"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "NOISE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "NOISE",
      "MASK"
    ],
    "name": "RegionalSeedExplorerColorMask //Inspire",
    "display_name": "Regional Seed Explorer By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "ToIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter": [
          "IPADAPTER"
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "IPADAPTER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IPADAPTER_PIPE"
    ],
    "name": "ToIPAdapterPipe //Inspire",
    "display_name": "ToIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "FromIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ]
      }
    },
    "output": [
      "IPADAPTER",
      "MODEL",
      "CLIP_VISION",
      "INSIGHTFACE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "ipadapter",
      "model",
      "clip_vision",
      "insight_face"
    ],
    "name": "FromIPAdapterPipe //Inspire",
    "display_name": "FromIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ApplyRegionalIPAdapters //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ],
        "regional_ipadapter1": [
          "REGIONAL_IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ApplyRegionalIPAdapters //Inspire",
    "display_name": "Apply Regional IPAdapters (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "KSamplerProgress //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latent",
      "progress_latent"
    ],
    "name": "KSamplerProgress //Inspire",
    "display_name": "KSampler Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "KSamplerAdvancedProgress //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      },
      "optional": {
        "prev_progress_latent_opt": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latent",
      "progress_latent"
    ],
    "name": "KSamplerAdvancedProgress //Inspire",
    "display_name": "KSampler Advanced Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "CacheBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendData //Inspire",
    "display_name": "Cache Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataNumberKey //Inspire",
    "display_name": "Cache Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataList //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataList //Inspire",
    "display_name": "Cache Backend Data List (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKeyList //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataNumberKeyList //Inspire",
    "display_name": "Cache Backend Data List [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RetrieveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data"
    ],
    "name": "RetrieveBackendData //Inspire",
    "display_name": "Retrieve Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RetrieveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data"
    ],
    "name": "RetrieveBackendDataNumberKey //Inspire",
    "display_name": "Retrieve Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RemoveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key ('*' = clear all)"
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal"
    ],
    "name": "RemoveBackendData //Inspire",
    "display_name": "Remove Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RemoveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal"
    ],
    "name": "RemoveBackendDataNumberKey //Inspire",
    "display_name": "Remove Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "ShowCachedInfo //Inspire": {
    "input": {
      "required": {
        "cache_info": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "key": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ShowCachedInfo //Inspire",
    "display_name": "Show Cached Info (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CheckpointLoaderSimpleShared //Inspire": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "key_opt": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'ckpt_name' as the key."
          }
        ]
      },
      "optional": {
        "mode": [
          [
            "Auto",
            "Override Cache",
            "Read Only"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae",
      "cache key"
    ],
    "name": "CheckpointLoaderSimpleShared //Inspire",
    "display_name": "Shared Checkpoint Loader (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "StableCascade_CheckpointLoader //Inspire": {
    "input": {
      "required": {
        "stage_b": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ],
          {
            "default": "ghostmix_v20Bakedvae.safetensors"
          }
        ],
        "key_opt_b": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'stage_b' as the key."
          }
        ],
        "stage_c": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ],
          {
            "default": "ghostmix_v20Bakedvae.safetensors"
          }
        ],
        "key_opt_c": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'stage_c' as the key."
          }
        ],
        "cache_mode": [
          [
            "none",
            "stage_b",
            "stage_c",
            "all"
          ],
          {
            "default": "none"
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "VAE",
      "MODEL",
      "VAE",
      "CLIP_VISION",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "b_model",
      "b_vae",
      "c_model",
      "c_vae",
      "c_clip_vision",
      "clip",
      "key_b",
      "key_c"
    ],
    "name": "StableCascade_CheckpointLoader //Inspire",
    "display_name": "Stable Cascade Checkpoint Loader (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "FloatRange //Inspire": {
    "input": {
      "required": {
        "start": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -100.0,
            "max": 100.0,
            "step": 1e-09
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 1e-09
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.0,
            "max": 100.0,
            "step": 1e-09
          }
        ],
        "limit": [
          "INT",
          {
            "default": 100,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "ensure_end": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "FloatRange //Inspire",
    "display_name": "Float Range (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ConcatConditioningsWithMultiplier //Inspire": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "multiplier1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConcatConditioningsWithMultiplier //Inspire",
    "display_name": "Concat Conditionings with Multiplier (Inspire)",
    "description": "",
    "category": "InspirePack/__for_testing",
    "output_node": false
  },
  "IPAdapterModelHelper //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "preset": [
          [
            "SD1.5",
            "SD1.5 Light",
            "SD1.5 Plus",
            "SD1.5 Plus Face",
            "SD1.5 Full Face",
            "SD1.5 ViT-G",
            "SDXL",
            "SDXL ViT-H",
            "SDXL Plus ViT-H",
            "SDXL Plus Face ViT-H",
            "SD1.5 FaceID",
            "SD1.5 FaceID Plus",
            "SD1.5 FaceID Plus v2",
            "SD1.5 FaceID Portrait",
            "SDXL FaceID",
            "SDXL FaceID v2"
          ]
        ],
        "lora_strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "lora_strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "insightface_provider": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ],
        "cache_mode": [
          [
            "insightface only",
            "clip_vision only",
            "all",
            "none"
          ],
          {
            "default": "insightface only"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IPADAPTER_PIPE",
      "IPADAPTER",
      "CLIP_VISION",
      "INSIGHTFACE",
      "MODEL",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "IPADAPTER_PIPE",
      "IPADAPTER",
      "CLIP_VISION",
      "INSIGHTFACE",
      "MODEL",
      "CLIP",
      "insightface_cache_key",
      "clip_vision_cache_key"
    ],
    "name": "IPAdapterModelHelper //Inspire",
    "display_name": "IPAdapter Model Helper (Inspire)",
    "description": "",
    "category": "InspirePack/models",
    "output_node": false
  },
  "Blend Latents (PPF Noise)": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "operation": [
          [
            "add",
            "bislerp",
            "color dodge",
            "colorize",
            "cosine interp",
            "cuberp",
            "difference",
            "exclusion",
            "glow",
            "hard light",
            "hslerp",
            "inject",
            "lerp",
            "linear dodge",
            "linear light",
            "multiply",
            "overlay",
            "pin light",
            "random",
            "reflect",
            "screen",
            "slerp",
            "subtract",
            "vivid light"
          ]
        ],
        "blend_ratio": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "blend_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "set_noise_mask": [
          [
            "false",
            "true"
          ]
        ],
        "normalize": [
          [
            "false",
            "true"
          ]
        ],
        "clamp_min": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "clamp_max": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "latent2rgb_preview": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latents",
      "previews"
    ],
    "name": "Blend Latents (PPF Noise)",
    "display_name": "Blend Latents \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Latent/Adjustements",
    "output_node": false
  },
  "Cross-Hatch Power Fractal (PPF Noise)": {
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "max": 64,
            "min": 1,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "resampling": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 320.0,
            "max": 1024.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 12,
            "max": 32,
            "min": 1,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 1.5,
            "max": 2.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "num_colors": [
          "INT",
          {
            "default": 16,
            "max": 256,
            "min": 2,
            "step": 1
          }
        ],
        "color_tolerance": [
          "FLOAT",
          {
            "default": 0.05,
            "max": 1.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "angle_degrees": [
          "FLOAT",
          {
            "default": 45.0,
            "max": 360.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "blur": [
          "FLOAT",
          {
            "default": 2.5,
            "max": 1024,
            "min": 0,
            "step": 0.01
          }
        ],
        "clamp_min": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "clamp_max": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "device": [
          [
            "cpu",
            "cuda"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "ch_settings": [
          "CH_SETTINGS"
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latents",
      "previews"
    ],
    "name": "Cross-Hatch Power Fractal (PPF Noise)",
    "display_name": "Cross-Hatch Power Fractal \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Noise",
    "output_node": false
  },
  "Cross-Hatch Power Fractal Settings (PPF Noise)": {
    "input": {
      "required": {
        "frequency": [
          "FLOAT",
          {
            "default": 320.0,
            "max": 1024.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 12,
            "max": 32,
            "min": 1,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 1.5,
            "max": 2.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "num_colors": [
          "INT",
          {
            "default": 16,
            "max": 256,
            "min": 2,
            "step": 1
          }
        ],
        "color_tolerance": [
          "FLOAT",
          {
            "default": 0.05,
            "max": 1.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "angle_degrees": [
          "FLOAT",
          {
            "default": 45.0,
            "max": 360.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "blur": [
          "FLOAT",
          {
            "default": 2.5,
            "max": 1024,
            "min": 0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CH_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "ch_settings"
    ],
    "name": "Cross-Hatch Power Fractal Settings (PPF Noise)",
    "display_name": "Cross-Hatch Power Fractal Settings \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Sampling/Settings",
    "output_node": false
  },
  "Images as Latents (PPF Noise)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "resampling": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latents",
      "images"
    ],
    "name": "Images as Latents (PPF Noise)",
    "display_name": "Images as Latents \ud83e\udd9a",
    "description": "",
    "category": "latent/util",
    "output_node": false
  },
  "Latent Adjustment (PPF Noise)": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "exposure": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 2.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "alpha_sharpen": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "high_pass_radius": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1024,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "high_pass_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "clamp_min": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "clamp_max": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "latent2rgb_preview": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latents",
      "previews"
    ],
    "name": "Latent Adjustment (PPF Noise)",
    "display_name": "Latent Adjustment \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Latent/Adjustements",
    "output_node": false
  },
  "Latents to CPU (PPF Noise)": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "latents"
    ],
    "name": "Latents to CPU (PPF Noise)",
    "display_name": "Latents to CPU \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Latent/Util",
    "output_node": false
  },
  "Linear Cross-Hatch Power Fractal (PPF Noise)": {
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "max": 64,
            "min": 1,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "resampling": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 320.0,
            "max": 1024.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "gain": [
          "FLOAT",
          {
            "default": 0.25,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 12,
            "max": 32,
            "min": 1,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 1.5,
            "max": 2.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "add_noise": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "linear_range": [
          "INT",
          {
            "default": 16,
            "max": 256,
            "min": 2,
            "step": 1
          }
        ],
        "linear_tolerance": [
          "FLOAT",
          {
            "default": 0.05,
            "max": 1.0,
            "min": 0.001,
            "step": 0.001
          }
        ],
        "angle_degrees": [
          "FLOAT",
          {
            "default": 45.0,
            "max": 360.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.001
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "device": [
          [
            "cpu",
            "cuda"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latents",
      "previews"
    ],
    "name": "Linear Cross-Hatch Power Fractal (PPF Noise)",
    "display_name": "Linear Cross-Hatch Power Fractal \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Noise",
    "output_node": false
  },
  "Perlin Power Fractal Latent (PPF Noise)": {
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "max": 64,
            "min": 1,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "resampling": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "X": [
          "FLOAT",
          {
            "default": 0,
            "max": 99999999,
            "min": -99999999,
            "step": 0.01
          }
        ],
        "Y": [
          "FLOAT",
          {
            "default": 0,
            "max": 99999999,
            "min": -99999999,
            "step": 0.01
          }
        ],
        "Z": [
          "FLOAT",
          {
            "default": 0,
            "max": 99999999,
            "min": -99999999,
            "step": 0.01
          }
        ],
        "evolution": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "frame": [
          "INT",
          {
            "default": 0,
            "max": 99999999,
            "min": 0,
            "step": 1
          }
        ],
        "scale": [
          "FLOAT",
          {
            "default": 5,
            "max": 2048,
            "min": 2,
            "step": 0.01
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 8,
            "max": 8,
            "min": 1,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 1.5,
            "max": 23.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "lacunarity": [
          "FLOAT",
          {
            "default": 2.0,
            "max": 99.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "exponent": [
          "FLOAT",
          {
            "default": 4.0,
            "max": 38.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.01
          }
        ],
        "clamp_min": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "clamp_max": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "device": [
          [
            "cpu",
            "cuda"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "ppf_settings": [
          "PPF_SETTINGS"
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latents",
      "previews"
    ],
    "name": "Perlin Power Fractal Latent (PPF Noise)",
    "display_name": "Perlin Power Fractal Noise \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Noise",
    "output_node": false
  },
  "Perlin Power Fractal Settings (PPF Noise)": {
    "input": {
      "required": {
        "X": [
          "FLOAT",
          {
            "default": 0,
            "max": 99999999,
            "min": -99999999,
            "step": 0.01
          }
        ],
        "Y": [
          "FLOAT",
          {
            "default": 0,
            "max": 99999999,
            "min": -99999999,
            "step": 0.01
          }
        ],
        "Z": [
          "FLOAT",
          {
            "default": 0,
            "max": 99999999,
            "min": -99999999,
            "step": 0.01
          }
        ],
        "evolution": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "frame": [
          "INT",
          {
            "default": 0,
            "max": 99999999,
            "min": 0,
            "step": 1
          }
        ],
        "scale": [
          "FLOAT",
          {
            "default": 5,
            "max": 2048,
            "min": 2,
            "step": 0.01
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 8,
            "max": 8,
            "min": 1,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 1.5,
            "max": 23.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "lacunarity": [
          "FLOAT",
          {
            "default": 2.0,
            "max": 99.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "exponent": [
          "FLOAT",
          {
            "default": 4.0,
            "max": 38.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1.0,
            "min": -1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PPF_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "ppf_settings"
    ],
    "name": "Perlin Power Fractal Settings (PPF Noise)",
    "display_name": "Perlin Power Fractal Settings \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Sampling/Settings",
    "output_node": false
  },
  "Power-Law Noise (PPF Noise)": {
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "max": 64,
            "min": 1,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "resampling": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "noise_type": [
          [
            "white",
            "grey",
            "pink",
            "green",
            "blue",
            "random_mix",
            "brownian_fractal",
            "velvet",
            "violet"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 1024.0,
            "min": 0.01,
            "step": 0.001
          }
        ],
        "alpha_exponent": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 12.0,
            "min": -12.0,
            "step": 0.001
          }
        ],
        "modulator": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": 0.1,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "device": [
          [
            "cpu",
            "cuda"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latents",
      "previews"
    ],
    "name": "Power-Law Noise (PPF Noise)",
    "display_name": "Power-Law Noise \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Noise",
    "output_node": false
  },
  "Power KSampler Advanced (PPF Noise)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "euler_ancestral",
            "dpm_2_ancestral",
            "dpmpp_2s_ancestral",
            "dpm_fast",
            "dpm_adaptive"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "enable_denoise": [
          [
            "false",
            "true"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ]
      },
      "optional": {
        "noise_type": [
          [
            "white",
            "grey",
            "pink",
            "green",
            "blue",
            "random_mix",
            "brownian_fractal",
            "velvet",
            "violet",
            "vanilla_comfy"
          ]
        ],
        "noise_blending": [
          [
            "bislerp",
            "cosine interp",
            "cuberp",
            "hslerp",
            "lerp",
            "add",
            "inject"
          ]
        ],
        "noise_mode": [
          [
            "additive",
            "subtractive"
          ]
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 9223372036854775806,
            "min": -9223372036854775806,
            "step": 0.001
          }
        ],
        "alpha_exponent": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 12.0,
            "min": -12.0,
            "step": 0.001
          }
        ],
        "modulator": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": 0.1,
            "step": 0.01
          }
        ],
        "sigma_tolerance": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "boost_leading_sigma": [
          [
            "false",
            "true"
          ]
        ],
        "tonal_guide_latent": [
          "LATENT"
        ],
        "ppf_settings": [
          "PPF_SETTINGS"
        ],
        "ch_settings": [
          "CH_SETTINGS"
        ],
        "guide_use_noise": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Power KSampler Advanced (PPF Noise)",
    "display_name": "Power KSampler Advanced \ud83e\udd9a",
    "description": "",
    "category": "Power Noise Suite/Sampling",
    "output_node": false
  },
  "WD14Tagger|pysssss": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          [
            "wd-vit-tagger-v3",
            "wd-swinv2-tagger-v3",
            "wd-convnext-tagger-v3",
            "wd-v1-4-moat-tagger-v2",
            "wd-v1-4-convnextv2-tagger-v2",
            "wd-v1-4-convnext-tagger-v2",
            "wd-v1-4-convnext-tagger",
            "wd-v1-4-vit-tagger-v2",
            "wd-v1-4-swinv2-tagger-v2",
            "wd-v1-4-vit-tagger"
          ],
          {
            "default": "wd-v1-4-moat-tagger-v2"
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0.0,
            "max": 1,
            "step": 0.05
          }
        ],
        "character_threshold": [
          "FLOAT",
          {
            "default": 0.85,
            "min": 0.0,
            "max": 1,
            "step": 0.05
          }
        ],
        "replace_underscore": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "trailing_comma": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "exclude_tags": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "STRING"
    ],
    "name": "WD14Tagger|pysssss",
    "display_name": "WD14 Tagger \ud83d\udc0d",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "PromptControlSimple": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "positive": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "tags": [
          "STRING",
          {
            "default": ""
          }
        ],
        "start": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 1.0,
            "step": 0.1,
            "default": 0.0
          }
        ],
        "end": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 1.0,
            "step": 0.1,
            "default": 1.0
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "positive",
      "negative",
      "model_filtered",
      "pos_filtered",
      "neg_filtered"
    ],
    "name": "PromptControlSimple",
    "display_name": "PromptControlSimple",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "PromptToSchedule": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "PROMPT_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PROMPT_SCHEDULE"
    ],
    "name": "PromptToSchedule",
    "display_name": "PromptToSchedule",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "PCSplitSampling": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "split_sampling": [
          [
            "enable",
            "disable"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "PCSplitSampling",
    "display_name": "PCSplitSampling",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "PCScheduleSettings": {
    "input": {
      "required": {},
      "optional": {
        "steps": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "mask_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384
          }
        ],
        "mask_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384
          }
        ],
        "sdxl_width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "sdxl_height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "sdxl_target_w": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "sdxl_target_h": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "sdxl_crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "sdxl_crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ]
      }
    },
    "output": [
      "SCHEDULE_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCHEDULE_SETTINGS"
    ],
    "name": "PCScheduleSettings",
    "display_name": "PCScheduleSettings",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "PCApplySettings": {
    "input": {
      "required": {
        "prompt_schedule": [
          "PROMPT_SCHEDULE"
        ],
        "settings": [
          "SCHEDULE_SETTINGS"
        ]
      }
    },
    "output": [
      "PROMPT_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PROMPT_SCHEDULE"
    ],
    "name": "PCApplySettings",
    "display_name": "PCApplySettings",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "PCPromptFromSchedule": {
    "input": {
      "required": {
        "prompt_schedule": [
          "PROMPT_SCHEDULE"
        ],
        "at": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "tags": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "PCPromptFromSchedule",
    "display_name": "PCPromptFromSchedule",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "FilterSchedule": {
    "input": {
      "required": {
        "prompt_schedule": [
          "PROMPT_SCHEDULE"
        ]
      },
      "optional": {
        "tags": [
          "STRING",
          {
            "default": ""
          }
        ],
        "start": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 1.0,
            "default": 0.0,
            "step": 0.01
          }
        ],
        "end": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 1.0,
            "default": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PROMPT_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PROMPT_SCHEDULE"
    ],
    "name": "FilterSchedule",
    "display_name": "FilterSchedule",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "ScheduleToCond": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "prompt_schedule": [
          "PROMPT_SCHEDULE"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ScheduleToCond",
    "display_name": "ScheduleToCond",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "ScheduleToModel": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "prompt_schedule": [
          "PROMPT_SCHEDULE"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ScheduleToModel",
    "display_name": "ScheduleToModel",
    "description": "",
    "category": "promptcontrol",
    "output_node": false
  },
  "EditableCLIPEncode": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "filter_tags": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "EditableCLIPEncode",
    "display_name": "EditableCLIPEncode",
    "description": "",
    "category": "promptcontrol/old",
    "output_node": false
  },
  "LoRAScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "LoRAScheduler",
    "display_name": "LoRAScheduler",
    "description": "",
    "category": "promptcontrol/old",
    "output_node": false
  },
  "PlaySound|pysssss": {
    "input": {
      "required": {
        "any": [
          "*",
          {}
        ],
        "mode": [
          [
            "always",
            "on empty queue"
          ],
          {}
        ],
        "volume": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.1,
            "default": 0.5
          }
        ],
        "file": [
          "STRING",
          {
            "default": "notify.mp3"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "*"
    ],
    "name": "PlaySound|pysssss",
    "display_name": "PlaySound \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "StringFunction|pysssss": {
    "input": {
      "required": {
        "action": [
          [
            "append",
            "replace"
          ],
          {}
        ],
        "tidy_tags": [
          [
            "yes",
            "no"
          ],
          {}
        ],
        "text_a": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "text_b": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      },
      "optional": {
        "text_c": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "StringFunction|pysssss",
    "display_name": "String Function \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "LoadText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {}
        ],
        "file": [
          [
            "[none]"
          ],
          {
            "pysssss.binding": [
              {
                "source": "root_dir",
                "callback": [
                  {
                    "type": "set",
                    "target": "$this.disabled",
                    "value": true
                  },
                  {
                    "type": "fetch",
                    "url": "/pysssss/text-file/{$source.value}",
                    "then": [
                      {
                        "type": "set",
                        "target": "$this.options.values",
                        "value": "$result"
                      },
                      {
                        "type": "validate-combo"
                      },
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "LoadText|pysssss",
    "display_name": "Load Text \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "SaveText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {}
        ],
        "file": [
          "STRING",
          {
            "default": "file.txt"
          }
        ],
        "append": [
          [
            "append",
            "overwrite",
            "new only"
          ],
          {}
        ],
        "insert": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "new line",
            "label_off": "none",
            "pysssss.binding": [
              {
                "source": "append",
                "callback": [
                  {
                    "type": "if",
                    "condition": [
                      {
                        "left": "$source.value",
                        "op": "eq",
                        "right": "\"append\""
                      }
                    ],
                    "true": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ],
                    "false": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "SaveText|pysssss",
    "display_name": "Save Text \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ConstrainImage|pysssss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          [
            "yes",
            "no"
          ],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConstrainImage|pysssss",
    "display_name": "Constrain Image \ud83d\udc0d",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ShowText|pysssss": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ShowText|pysssss",
    "display_name": "Show Text \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "LoraLoader|pysssss": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            {
              "content": "ip-adapter-faceid-plus_sd15_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid_sd15_lora.safetensors",
              "image": null
            },
            {
              "content": "ip-adapter-faceid_sdxl_lora.safetensors",
              "image": null
            },
            {
              "content": "sd15_lcm_lora_rank1.safetensors",
              "image": null
            },
            {
              "content": "sdxl_LCM_lora_rank1.safetensors",
              "image": null
            }
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader|pysssss",
    "display_name": "Lora Loader \ud83d\udc0d",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CheckpointLoader|pysssss": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            {
              "content": "ghostmix_v20Bakedvae.safetensors",
              "image": null
            },
            {
              "content": "juggernautXL_v9Rundiffusionphoto2.safetensors",
              "image": null
            },
            {
              "content": "majicmixRealistic_v7.safetensors",
              "image": null
            },
            {
              "content": "svd-fp16.safetensors",
              "image": null
            }
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoader|pysssss",
    "display_name": "Checkpoint Loader \ud83d\udc0d",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "MathExpression|pysssss": {
    "input": {
      "required": {
        "expression": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": {
              "words": [
                {
                  "text": "round",
                  "value": "round()",
                  "showValue": false,
                  "hint": "number, dp? = 0",
                  "caretOffset": -1
                },
                {
                  "text": "ceil",
                  "value": "ceil()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "floor",
                  "value": "floor()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "min",
                  "value": "min()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "max",
                  "value": "max()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "randomint",
                  "value": "randomint()",
                  "showValue": false,
                  "hint": "min, max",
                  "caretOffset": -1
                },
                {
                  "text": "randomchoice",
                  "value": "randomchoice()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                }
              ],
              "separator": ""
            }
          }
        ]
      },
      "optional": {
        "a": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "b": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "c": [
          "INT,FLOAT,IMAGE,LATENT"
        ]
      },
      "hidden": {
        "extra_pnginfo": "EXTRA_PNGINFO",
        "prompt": "PROMPT"
      }
    },
    "output": [
      "INT",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "FLOAT"
    ],
    "name": "MathExpression|pysssss",
    "display_name": "Math Expression \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "Repeater|pysssss": {
    "input": {
      "required": {
        "source": [
          "*",
          {}
        ],
        "repeats": [
          "INT",
          {
            "min": 0,
            "max": 5000,
            "default": 2
          }
        ],
        "output": [
          [
            "single",
            "multi"
          ],
          {}
        ],
        "node_mode": [
          [
            "reuse",
            "create"
          ],
          {}
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "*"
    ],
    "name": "Repeater|pysssss",
    "display_name": "Repeater \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ConstrainImageforVideo|pysssss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          [
            "yes",
            "no"
          ],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConstrainImageforVideo|pysssss",
    "display_name": "Constrain Image for Video \ud83d\udc0d",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ReroutePrimitive|pysssss": {
    "input": {
      "required": {
        "value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ReroutePrimitive|pysssss",
    "display_name": "Reroute Primitive \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "Float": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Float",
    "display_name": "Float",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "Integer": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Integer",
    "display_name": "Integer",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "Text": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text",
    "display_name": "Text",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "Text box": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text box",
    "display_name": "Text box",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "To text (Debug)": {
    "input": {
      "required": {
        "ANY": [
          "*",
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [
      false,
      true
    ],
    "output_name": [
      "SAME AS INPUT",
      "STRING"
    ],
    "name": "To text (Debug)",
    "display_name": "To text (Debug)",
    "description": "",
    "category": "Derfuu_Nodes/Debug",
    "output_node": true
  },
  "Random": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4294967295,
            "step": 1,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Random",
    "display_name": "Random",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "Int to float": {
    "input": {
      "required": {
        "Value": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Int to float",
    "display_name": "Int to float",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Ceil": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Ceil",
    "display_name": "Ceil",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Floor": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Floor",
    "display_name": "Floor",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Absolute value": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "negative_out": [
          [
            false,
            true
          ]
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Absolute value",
    "display_name": "Absolute value",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Get latent size": {
    "input": {
      "required": {
        "latent": [
          "LATENT",
          {
            "forceInput": false
          }
        ],
        "original": [
          [
            false,
            true
          ]
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "WIDTH",
      "HEIGHT"
    ],
    "name": "Get latent size",
    "display_name": "Get latent size",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "Get image size": {
    "input": {
      "required": {
        "image": [
          "IMAGE",
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "WIDTH",
      "HEIGHT"
    ],
    "name": "Get image size",
    "display_name": "Get image size",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "Sum": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Sum",
    "display_name": "Sum",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Subtract": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Subtract",
    "display_name": "Subtract",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Multiply": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Multiply",
    "display_name": "Multiply",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Divide": {
    "input": {
      "required": {
        "Numerator": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Denominator": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Divide",
    "display_name": "Divide",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Power": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Exponent": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Power",
    "display_name": "Power",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Square root": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "FLOAT"
    ],
    "name": "Square root",
    "display_name": "Square root",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Sinus": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ],
          {
            "forceInput": false
          }
        ],
        "arcSin": [
          [
            false,
            true
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Sinus",
    "display_name": "Sinus",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "Cosines": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ],
          {
            "forceInput": false
          }
        ],
        "arcCos": [
          [
            false,
            true
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Cosines",
    "display_name": "Cosines",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "Tangent": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ],
          {
            "forceInput": false
          }
        ],
        "arcTan": [
          [
            false,
            true
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Tangent",
    "display_name": "Tangent",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "Logic node": {
    "input": {
      "required": {
        "Operation": [
          [
            ">",
            "<",
            "=",
            "AND",
            "OR",
            "XOR"
          ],
          {
            "forceInput": false
          }
        ],
        "CompareValue_A": [
          "*",
          {
            "forceInput": false
          }
        ]
      },
      "optional": {
        "CompareValue_B": [
          "*",
          {
            "forceInput": false
          }
        ],
        "OnTrue": [
          "*",
          {
            "forceInput": false
          }
        ],
        "OnFalse": [
          "*",
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "Logic node",
    "display_name": "Logic node",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "Latent Scale by ratio": {
    "input": {
      "required": {
        "latent": [
          "LATENT",
          {
            "forceInput": false
          }
        ],
        "modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Scale by ratio",
    "display_name": "Latent Scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Latent",
    "output_node": false
  },
  "Latent Scale to side": {
    "input": {
      "required": {
        "latent": [
          "LATENT",
          {
            "forceInput": false
          }
        ],
        "side_length": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1,
            "forceInput": false
          }
        ],
        "side": [
          [
            "Longest",
            "Shortest",
            "Width",
            "Height"
          ],
          {
            "forceInput": false
          }
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Scale to side",
    "display_name": "Latent Scale to side",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Latent",
    "output_node": false
  },
  "Image scale by ratio": {
    "input": {
      "required": {
        "image": [
          "IMAGE",
          {
            "forceInput": false
          }
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image scale by ratio",
    "display_name": "Image scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Image",
    "output_node": false
  },
  "Image scale to side": {
    "input": {
      "required": {
        "image": [
          "IMAGE",
          {
            "forceInput": false
          }
        ],
        "side_length": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1,
            "forceInput": false
          }
        ],
        "side": [
          [
            "Longest",
            "Shortest",
            "Width",
            "Height"
          ],
          {
            "forceInput": false
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image scale to side",
    "display_name": "Image scale to side",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Image",
    "output_node": false
  },
  "Conditioning area scale by ratio": {
    "input": {
      "required": {
        "conditioning": [
          "COND",
          {
            "forceInput": false
          }
        ],
        "modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "strength_modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Conditioning area scale by ratio",
    "display_name": "Conditioning area scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Conditions",
    "output_node": false
  },
  "IPAdapter": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "weight_type": [
          [
            "standard",
            "prompt is more important",
            "style transfer (SDXL only)"
          ]
        ]
      },
      "optional": {
        "attn_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapter",
    "display_name": "IPAdapter",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterAdvanced",
    "display_name": "IPAdapter Advanced",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterBatch",
    "display_name": "IPAdapter Batch (Adv.)",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterFaceID": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 5.0,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterFaceID",
    "display_name": "IPAdapter FaceID",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAAdapterFaceIDBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 5.0,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAAdapterFaceIDBatch",
    "display_name": "IPAdapter FaceID Batch",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterTiled": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "tiles",
      "masks"
    ],
    "name": "IPAdapterTiled",
    "display_name": "IPAdapter Tiled",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterTiledBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "tiles",
      "masks"
    ],
    "name": "IPAdapterTiledBatch",
    "display_name": "IPAdapter Tiled Batch",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterEmbeds": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "pos_embed": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer (SDXL)",
            "composition (SDXL)"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "neg_embed": [
          "EMBEDS"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterEmbeds",
    "display_name": "IPAdapter Embeds",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterUnifiedLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoader",
    "display_name": "IPAdapter Unified Loader",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterUnifiedLoaderFaceID": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "FACEID",
            "FACEID PLUS - SD1.5 only",
            "FACEID PLUS V2",
            "FACEID PORTRAIT (style transfer)"
          ]
        ],
        "lora_strength": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM",
            "DirectML",
            "OpenVINO",
            "CoreML"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoaderFaceID",
    "display_name": "IPAdapter Unified Loader FaceID",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterModelLoader": {
    "input": {
      "required": {
        "ipadapter_file": [
          [
            "ip-adapter-faceid-plusv2_sd15.bin",
            "ip-adapter-faceid-plusv2_sdxl.bin",
            "ip-adapter-faceid-portrait_sd15.bin",
            "ip-adapter-plus-face_sd15.safetensors",
            "ip-adapter-plus_sd15.safetensors",
            "ip-adapter-plus_sdxl_vit-h.safetensors",
            "ip-adapter_sd15.safetensors"
          ]
        ]
      }
    },
    "output": [
      "IPADAPTER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IPADAPTER"
    ],
    "name": "IPAdapterModelLoader",
    "display_name": "IPAdapter Model Loader",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterInsightFaceLoader": {
    "input": {
      "required": {
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ]
      }
    },
    "output": [
      "INSIGHTFACE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INSIGHTFACE"
    ],
    "name": "IPAdapterInsightFaceLoader",
    "display_name": "IPAdapter InsightFace Loader",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterUnifiedLoaderCommunity": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "Composition"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoaderCommunity",
    "display_name": "IPAdapter Unified Loader Community",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterEncoder": {
    "input": {
      "required": {
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1.0,
            "max": 3.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "EMBEDS",
      "EMBEDS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "pos_embed",
      "neg_embed"
    ],
    "name": "IPAdapterEncoder",
    "display_name": "IPAdapter Encoder",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterCombineEmbeds": {
    "input": {
      "required": {
        "embed1": [
          "EMBEDS"
        ],
        "method": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average",
            "max",
            "min"
          ]
        ]
      },
      "optional": {
        "embed2": [
          "EMBEDS"
        ],
        "embed3": [
          "EMBEDS"
        ],
        "embed4": [
          "EMBEDS"
        ],
        "embed5": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "EMBEDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "EMBEDS"
    ],
    "name": "IPAdapterCombineEmbeds",
    "display_name": "IPAdapter Combine Embeds",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterNoise": {
    "input": {
      "required": {
        "type": [
          [
            "fade",
            "dissolve",
            "gaussian",
            "shuffle"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ]
      },
      "optional": {
        "image_optional": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "IPAdapterNoise",
    "display_name": "IPAdapter Noise",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "PrepImageForClipVision": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "interpolation": [
          [
            "LANCZOS",
            "BICUBIC",
            "HAMMING",
            "BILINEAR",
            "BOX",
            "NEAREST"
          ]
        ],
        "crop_position": [
          [
            "top",
            "bottom",
            "left",
            "right",
            "center",
            "pad"
          ]
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "PrepImageForClipVision",
    "display_name": "Prep Image For ClipVision",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterSaveEmbeds": {
    "input": {
      "required": {
        "embeds": [
          "EMBEDS"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "IP_embeds"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "IPAdapterSaveEmbeds",
    "display_name": "IPAdapter Save Embeds",
    "description": "",
    "category": "ipadapter",
    "output_node": true
  },
  "IPAdapterLoadEmbeds": {
    "input": {
      "required": {
        "embeds": [
          []
        ]
      }
    },
    "output": [
      "EMBEDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "EMBEDS"
    ],
    "name": "IPAdapterLoadEmbeds",
    "display_name": "IPAdapter Load Embeds",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "INTConstant": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "value"
    ],
    "name": "INTConstant",
    "display_name": "INT Constant",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "FloatConstant": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -18446744073709551615,
            "max": 18446744073709551615,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "value"
    ],
    "name": "FloatConstant",
    "display_name": "Float Constant",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "ConditioningMultiCombine": {
    "input": {
      "required": {
        "inputcount": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 20,
            "step": 1
          }
        ],
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "combined",
      "inputcount"
    ],
    "name": "ConditioningMultiCombine",
    "display_name": "Conditioning Multi Combine",
    "description": "",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine",
    "display_name": "ConditioningSetMaskAndCombine",
    "description": "",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine3": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "positive_3": [
          "CONDITIONING"
        ],
        "negative_3": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_3": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_3_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine3",
    "display_name": "ConditioningSetMaskAndCombine3",
    "description": "",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine4": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "positive_3": [
          "CONDITIONING"
        ],
        "negative_3": [
          "CONDITIONING"
        ],
        "positive_4": [
          "CONDITIONING"
        ],
        "negative_4": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_3": [
          "MASK"
        ],
        "mask_4": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_3_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_4_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine4",
    "display_name": "ConditioningSetMaskAndCombine4",
    "description": "",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "ConditioningSetMaskAndCombine5": {
    "input": {
      "required": {
        "positive_1": [
          "CONDITIONING"
        ],
        "negative_1": [
          "CONDITIONING"
        ],
        "positive_2": [
          "CONDITIONING"
        ],
        "negative_2": [
          "CONDITIONING"
        ],
        "positive_3": [
          "CONDITIONING"
        ],
        "negative_3": [
          "CONDITIONING"
        ],
        "positive_4": [
          "CONDITIONING"
        ],
        "negative_4": [
          "CONDITIONING"
        ],
        "positive_5": [
          "CONDITIONING"
        ],
        "negative_5": [
          "CONDITIONING"
        ],
        "mask_1": [
          "MASK"
        ],
        "mask_2": [
          "MASK"
        ],
        "mask_3": [
          "MASK"
        ],
        "mask_4": [
          "MASK"
        ],
        "mask_5": [
          "MASK"
        ],
        "mask_1_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_2_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_3_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_4_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "mask_5_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "combined_positive",
      "combined_negative"
    ],
    "name": "ConditioningSetMaskAndCombine5",
    "display_name": "ConditioningSetMaskAndCombine5",
    "description": "",
    "category": "KJNodes/masking/conditioning",
    "output_node": false
  },
  "GrowMaskWithBlur": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "expand": [
          "INT",
          {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "incremental_expandrate": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1
          }
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "flip_input": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "blur_radius": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "lerp_alpha": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "decay_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "GrowMaskWithBlur",
    "display_name": "GrowMaskWithBlur",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "ColorToMask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ColorToMask",
    "display_name": "ColorToMask",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "CreateGradientMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "CreateGradientMask",
    "display_name": "CreateGradientMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateTextMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "text_x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "text_y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 32,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "font_color": [
          "STRING",
          {
            "default": "white"
          }
        ],
        "text": [
          "STRING",
          {
            "default": "HELLO!",
            "multiline": true
          }
        ],
        "font": [
          [
            "TTNorms-Black.otf"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "start_rotation": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 359,
            "step": 1
          }
        ],
        "end_rotation": [
          "INT",
          {
            "default": 0,
            "min": -359,
            "max": 359,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "CreateTextMask",
    "display_name": "CreateTextMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateAudioMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 2.0,
            "step": 0.01
          }
        ],
        "audio_path": [
          "STRING",
          {
            "default": "audio.wav"
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "CreateAudioMask",
    "display_name": "CreateAudioMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateFadeMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ],
        "start_level": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "midpoint_level": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "end_level": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "midpoint_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "CreateFadeMask",
    "display_name": "CreateFadeMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateFadeMaskAdvanced": {
    "input": {
      "required": {
        "points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
            "multiline": true
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 2,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "CreateFadeMaskAdvanced",
    "display_name": "CreateFadeMaskAdvanced",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateFluidMask": {
    "input": {
      "required": {
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "inflow_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_velocity": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_radius": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_padding": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "inflow_duration": [
          "INT",
          {
            "default": 60,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "CreateFluidMask",
    "display_name": "CreateFluidMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "VRAM_Debug": {
    "input": {
      "required": {
        "empty_cache": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "unload_all_models": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "image_passthrough": [
          "IMAGE"
        ],
        "model_passthrough": [
          "MODEL"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MODEL",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "image_passthrough",
      "model_passthrough",
      "freemem_before",
      "freemem_after"
    ],
    "name": "VRAM_Debug",
    "display_name": "VRAM Debug",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "SomethingToString": {
    "input": {
      "required": {
        "input": [
          "*",
          {}
        ]
      },
      "optional": {
        "prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "suffix": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "SomethingToString",
    "display_name": "SomethingToString",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "CrossFadeImages": {
    "input": {
      "required": {
        "images_1": [
          "IMAGE"
        ],
        "images_2": [
          "IMAGE"
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out",
            "bounce",
            "elastic",
            "glitchy",
            "exponential_ease_out"
          ]
        ],
        "transition_start_index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "transitioning_frames": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "start_level": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "end_level": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "CrossFadeImages",
    "display_name": "CrossFadeImages",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "EmptyLatentImagePresets": {
    "input": {
      "required": {
        "dimensions": [
          [
            "512 x 512",
            "768 x 512",
            "960 x 512",
            "1024 x 512",
            "1536 x 640",
            "1344 x 768",
            "1216 x 832",
            "1152 x 896",
            "1024 x 1024"
          ],
          {
            "default": "512 x 512"
          }
        ],
        "invert": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "Latent",
      "Width",
      "Height"
    ],
    "name": "EmptyLatentImagePresets",
    "display_name": "EmptyLatentImagePresets",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ColorMatch": {
    "input": {
      "required": {
        "image_ref": [
          "IMAGE"
        ],
        "image_target": [
          "IMAGE"
        ],
        "method": [
          [
            "mkl",
            "hm",
            "reinhard",
            "mvgd",
            "hm-mvgd-hm",
            "hm-mkl-hm"
          ],
          {
            "default": "mkl"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "ColorMatch",
    "display_name": "ColorMatch",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "GetImageRangeFromBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": -1,
            "max": 4096,
            "step": 1
          }
        ],
        "num_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "GetImageRangeFromBatch",
    "display_name": "GetImageRangeFromBatch",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "SaveImageWithAlpha": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImageWithAlpha",
    "display_name": "SaveImageWithAlpha",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "ReverseImageBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ReverseImageBatch",
    "display_name": "ReverseImageBatch",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ImageGridComposite2x2": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "image3": [
          "IMAGE"
        ],
        "image4": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageGridComposite2x2",
    "display_name": "ImageGridComposite2x2",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ImageGridComposite3x3": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "image3": [
          "IMAGE"
        ],
        "image4": [
          "IMAGE"
        ],
        "image5": [
          "IMAGE"
        ],
        "image6": [
          "IMAGE"
        ],
        "image7": [
          "IMAGE"
        ],
        "image8": [
          "IMAGE"
        ],
        "image9": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageGridComposite3x3",
    "display_name": "ImageGridComposite3x3",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ImageConcanate": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "direction": [
          [
            "right",
            "down",
            "left",
            "up"
          ],
          {
            "default": "right"
          }
        ],
        "match_image_size": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageConcanate",
    "display_name": "ImageConcatenate",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ImageBatchTestPattern": {
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "start_from": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "font": [
          [
            "TTNorms-Black.otf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 255,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchTestPattern",
    "display_name": "ImageBatchTestPattern",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ReplaceImagesInBatch": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "replacement_images": [
          "IMAGE"
        ],
        "start_index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ReplaceImagesInBatch",
    "display_name": "ReplaceImagesInBatch",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "BatchCropFromMask": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "masks": [
          "MASK"
        ],
        "crop_size_mult": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "bbox_smooth_alpha": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "BBOX",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "original_images",
      "cropped_images",
      "bboxes",
      "width",
      "height"
    ],
    "name": "BatchCropFromMask",
    "display_name": "BatchCropFromMask",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BatchCropFromMaskAdvanced": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "masks": [
          "MASK"
        ],
        "crop_size_mult": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "bbox_smooth_alpha": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "MASK",
      "IMAGE",
      "MASK",
      "BBOX",
      "BBOX",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "original_images",
      "cropped_images",
      "cropped_masks",
      "combined_crop_image",
      "combined_crop_masks",
      "bboxes",
      "combined_bounding_box",
      "bbox_width",
      "bbox_height"
    ],
    "name": "BatchCropFromMaskAdvanced",
    "display_name": "BatchCropFromMaskAdvanced",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "FilterZeroMasksAndCorrespondingImages": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      },
      "optional": {
        "original_images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE",
      "IMAGE",
      "INDEXES"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "non_zero_masks_out",
      "non_zero_mask_images_out",
      "zero_mask_images_out",
      "zero_mask_images_out_indexes"
    ],
    "name": "FilterZeroMasksAndCorrespondingImages",
    "display_name": "FilterZeroMasksAndCorrespondingImages",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "InsertImageBatchByIndexes": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "images_to_insert": [
          "IMAGE"
        ],
        "insert_indexes": [
          "INDEXES"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images_after_insert"
    ],
    "name": "InsertImageBatchByIndexes",
    "display_name": "InsertImageBatchByIndexes",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "BatchUncrop": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "cropped_images": [
          "IMAGE"
        ],
        "bboxes": [
          "BBOX"
        ],
        "border_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_rescale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "border_top": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "border_bottom": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "border_left": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "border_right": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "BatchUncrop",
    "display_name": "BatchUncrop",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BatchUncropAdvanced": {
    "input": {
      "required": {
        "original_images": [
          "IMAGE"
        ],
        "cropped_images": [
          "IMAGE"
        ],
        "cropped_masks": [
          "MASK"
        ],
        "combined_crop_mask": [
          "MASK"
        ],
        "bboxes": [
          "BBOX"
        ],
        "border_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_rescale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "use_combined_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "use_square_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "combined_bounding_box": [
          "BBOX",
          {
            "default": null
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "BatchUncropAdvanced",
    "display_name": "BatchUncropAdvanced",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "BatchCLIPSeg": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.15,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "binary_mask": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "combine_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "use_cuda": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "Mask"
    ],
    "name": "BatchCLIPSeg",
    "display_name": "BatchCLIPSeg",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "RoundMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "RoundMask",
    "display_name": "RoundMask",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "ResizeMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8,
            "display": "number"
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8,
            "display": "number"
          }
        ],
        "keep_proportions": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MASK",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "mask",
      "width",
      "height"
    ],
    "name": "ResizeMask",
    "display_name": "ResizeMask",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "OffsetMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "angle": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1,
            "display": "number"
          }
        ],
        "duplication_factor": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000,
            "step": 1,
            "display": "number"
          }
        ],
        "roll": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "incremental": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "padding_mode": [
          [
            "empty",
            "border",
            "reflection"
          ],
          {
            "default": "empty"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "mask"
    ],
    "name": "OffsetMask",
    "display_name": "OffsetMask",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "WidgetToString": {
    "input": {
      "required": {
        "id": [
          "INT",
          {
            "default": 0
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "return_all": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "extra_pnginfo": "EXTRA_PNGINFO",
        "prompt": "PROMPT"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "WidgetToString",
    "display_name": "WidgetToString",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "CreateShapeMask": {
    "input": {
      "required": {
        "shape": [
          [
            "circle",
            "square",
            "triangle"
          ],
          {
            "default": "circle"
          }
        ],
        "frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "location_x": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "location_y": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "grow": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_width": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "shape_height": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "CreateShapeMask",
    "display_name": "CreateShapeMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateVoronoiMask": {
    "input": {
      "required": {
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "num_points": [
          "INT",
          {
            "default": 15,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "line_width": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "speed": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "CreateVoronoiMask",
    "display_name": "CreateVoronoiMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "CreateMagicMask": {
    "input": {
      "required": {
        "frames": [
          "INT",
          {
            "default": 16,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "depth": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 500,
            "step": 1
          }
        ],
        "distortion": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 99999999,
            "step": 1
          }
        ],
        "transitions": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "frame_width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "mask",
      "mask_inverted"
    ],
    "name": "CreateMagicMask",
    "display_name": "CreateMagicMask",
    "description": "",
    "category": "KJNodes/masking/generate",
    "output_node": false
  },
  "BboxToInt": {
    "input": {
      "required": {
        "bboxes": [
          "BBOX"
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "x_min",
      "y_min",
      "width",
      "height",
      "center_x",
      "center_y"
    ],
    "name": "BboxToInt",
    "display_name": "BboxToInt",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "SplitBboxes": {
    "input": {
      "required": {
        "bboxes": [
          "BBOX"
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 99999999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "BBOX",
      "BBOX"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "bboxes_a",
      "bboxes_b"
    ],
    "name": "SplitBboxes",
    "display_name": "SplitBboxes",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "ImageGrabPIL": {
    "input": {
      "required": {
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "num_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "delay": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "ImageGrabPIL",
    "display_name": "ImageGrabPIL",
    "description": "",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "DummyLatentOut": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "DummyLatentOut",
    "display_name": "DummyLatentOut",
    "description": "",
    "category": "KJNodes",
    "output_node": true
  },
  "NormalizeLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "NormalizeLatent",
    "display_name": "NormalizeLatent",
    "description": "",
    "category": "KJNodes/noise",
    "output_node": true
  },
  "FlipSigmasAdjusted": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "divide_by_last_sigma": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "divide_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 255,
            "step": 0.01
          }
        ],
        "offset_by": [
          "INT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SIGMAS",
      "sigmas_string"
    ],
    "name": "FlipSigmasAdjusted",
    "display_name": "FlipSigmasAdjusted",
    "description": "",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "InjectNoiseToLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 200.0,
            "step": 0.0001
          }
        ],
        "noise": [
          "LATENT"
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "average": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "mix_randn_amount": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.001
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 18446744073709551615,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "InjectNoiseToLatent",
    "display_name": "InjectNoiseToLatent",
    "description": "",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "AddLabel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text_x": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "text_y": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 48,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "font_color": [
          "STRING",
          {
            "default": "white"
          }
        ],
        "label_color": [
          "STRING",
          {
            "default": "black"
          }
        ],
        "font": [
          [
            "TTNorms-Black.otf"
          ]
        ],
        "text": [
          "STRING",
          {
            "default": "Text"
          }
        ],
        "direction": [
          [
            "up",
            "down"
          ],
          {
            "default": "up"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "AddLabel",
    "display_name": "AddLabel",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "SoundReactive": {
    "input": {
      "required": {
        "sound_level": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 99999,
            "step": 0.01
          }
        ],
        "start_range_hz": [
          "INT",
          {
            "default": 150,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "end_range_hz": [
          "INT",
          {
            "default": 2000,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 99999,
            "step": 0.01
          }
        ],
        "smoothing_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "sound_level",
      "sound_level_int"
    ],
    "name": "SoundReactive",
    "display_name": "SoundReactive",
    "description": "",
    "category": "KJNodes/experimental",
    "output_node": false
  },
  "GenerateNoise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "seed": [
          "INT",
          {
            "default": 123,
            "min": 0,
            "max": 18446744073709551615,
            "step": 1
          }
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 4096,
            "step": 0.01
          }
        ],
        "constant_batch_noise": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "normalize": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "sigmas": [
          "SIGMAS"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "GenerateNoise",
    "display_name": "GenerateNoise",
    "description": "",
    "category": "KJNodes/noise",
    "output_node": false
  },
  "StableZero123_BatchSchedule": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ],
        "azimuth_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
            "multiline": true
          }
        ],
        "elevation_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n7:(0.0),\n15:(0.0)\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_BatchSchedule",
    "display_name": "StableZero123_BatchSchedule",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "SV3D_BatchSchedule": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 21,
            "min": 1,
            "max": 4096
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ],
        "azimuth_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n9:(180.0),\n20:(360.0)\n",
            "multiline": true
          }
        ],
        "elevation_points_string": [
          "STRING",
          {
            "default": "0:(0.0),\n9:(0.0),\n20:(0.0)\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SV3D_BatchSchedule",
    "display_name": "SV3D_BatchSchedule",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "GetImagesFromBatchIndexed": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "indexes": [
          "STRING",
          {
            "default": "0, 1, 2",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "GetImagesFromBatchIndexed",
    "display_name": "GetImagesFromBatchIndexed",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ImageBatchRepeatInterleaving": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "repeats": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchRepeatInterleaving",
    "display_name": "ImageBatchRepeatInterleaving",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "NormalizedAmplitudeToMask": {
    "input": {
      "required": {
        "normalized_amp": [
          "NORMALIZED_AMPLITUDE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 4096,
            "step": 1
          }
        ],
        "frame_offset": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "location_x": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "location_y": [
          "INT",
          {
            "default": 256,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 128,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "shape": [
          [
            "none",
            "circle",
            "square",
            "triangle"
          ],
          {
            "default": "none"
          }
        ],
        "color": [
          [
            "white",
            "amplitude"
          ],
          {
            "default": "amplitude"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "NormalizedAmplitudeToMask",
    "display_name": "NormalizedAmplitudeToMask",
    "description": "",
    "category": "AudioScheduler/Amplitude",
    "output_node": false
  },
  "OffsetMaskByNormalizedAmplitude": {
    "input": {
      "required": {
        "normalized_amp": [
          "NORMALIZED_AMPLITUDE"
        ],
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "rotate": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "angle_multiplier": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -1.0,
            "max": 1.0,
            "step": 0.001,
            "display": "number"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "mask"
    ],
    "name": "OffsetMaskByNormalizedAmplitude",
    "display_name": "OffsetMaskByNormalizedAmplitude",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "ImageTransformByNormalizedAmplitude": {
    "input": {
      "required": {
        "normalized_amp": [
          "NORMALIZED_AMPLITUDE"
        ],
        "zoom_scale": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -1.0,
            "max": 1.0,
            "step": 0.001,
            "display": "number"
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -16383,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -16383,
            "max": 16384,
            "step": 1,
            "display": "number"
          }
        ],
        "cumulative": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformByNormalizedAmplitude",
    "display_name": "ImageTransformByNormalizedAmplitude",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "GetLatentsFromBatchIndexed": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "indexes": [
          "STRING",
          {
            "default": "0, 1, 2",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "GetLatentsFromBatchIndexed",
    "display_name": "GetLatentsFromBatchIndexed",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "StringConstant": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "StringConstant",
    "display_name": "StringConstant",
    "description": "",
    "category": "KJNodes/constants",
    "output_node": false
  },
  "GLIGENTextBoxApplyBatch": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "latents": [
          "LATENT"
        ],
        "clip": [
          "CLIP"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "coordinates": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "interpolation": [
          [
            "straight",
            "CubicSpline"
          ],
          {
            "default": "CubicSpline"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "IMAGE"
    ],
    "name": "GLIGENTextBoxApplyBatch",
    "display_name": "GLIGENTextBoxApplyBatch",
    "description": "",
    "category": "conditioning/gligen",
    "output_node": false
  },
  "CondPassThrough": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "CondPassThrough",
    "display_name": "CondPassThrough",
    "description": "",
    "category": "KJNodes/misc",
    "output_node": false
  },
  "ImageUpscaleWithModelBatched": {
    "input": {
      "required": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "images": [
          "IMAGE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageUpscaleWithModelBatched",
    "display_name": "ImageUpscaleWithModelBatched",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ScaleBatchPromptSchedule": {
    "input": {
      "required": {
        "input_str": [
          "STRING",
          {
            "forceInput": true,
            "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n"
          }
        ],
        "old_frame_count": [
          "INT",
          {
            "forceInput": true,
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "new_frame_count": [
          "INT",
          {
            "forceInput": true,
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ScaleBatchPromptSchedule",
    "display_name": "ScaleBatchPromptSchedule",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "ImageNormalize_Neg1_To_1": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageNormalize_Neg1_To_1",
    "display_name": "ImageNormalize_Neg1_To_1",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "Intrinsic_lora_sampling": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "lora_name": [
          [
            "intrinsic_lora_sd15_albedo.safetensors",
            "intrinsic_lora_sd15_depth.safetensors",
            "intrinsic_lora_sd15_normal.safetensors",
            "intrinsic_lora_sd15_shading.safetensors"
          ]
        ],
        "task": [
          [
            "depth map",
            "surface normals",
            "albedo",
            "shading"
          ],
          {
            "default": "depth map"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "per_batch": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "optional_latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "LATENT"
    ],
    "name": "Intrinsic_lora_sampling",
    "display_name": "Intrinsic_lora_sampling",
    "description": "",
    "category": "KJNodes",
    "output_node": false
  },
  "RemapMaskRange": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "min": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "mask"
    ],
    "name": "RemapMaskRange",
    "display_name": "RemapMaskRange",
    "description": "",
    "category": "KJNodes/masking",
    "output_node": false
  },
  "LoadResAdapterNormalization": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "resadapter_path": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "LoadResAdapterNormalization",
    "display_name": "LoadResAdapterNormalization",
    "description": "",
    "category": "sd",
    "output_node": false
  },
  "Superprompt": {
    "input": {
      "required": {
        "instruction_prompt": [
          "STRING",
          {
            "default": "Expand the following prompt to add more detail",
            "multiline": true
          }
        ],
        "prompt": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": true
          }
        ],
        "max_new_tokens": [
          "INT",
          {
            "default": 128,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Superprompt",
    "display_name": "Superprompt",
    "description": "",
    "category": "sd",
    "output_node": false
  },
  "RemapImageRange": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "min": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "max": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clamp": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "RemapImageRange",
    "display_name": "RemapImageRange",
    "description": "",
    "category": "Marigold",
    "output_node": false
  },
  "smZ CLIPTextEncode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "parser": [
          [
            "comfy",
            "comfy++",
            "A1111",
            "full",
            "compel",
            "fixed attention"
          ],
          {
            "default": "comfy"
          }
        ],
        "mean_normalization": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "multi_conditioning": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "use_old_emphasis_implementation": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "with_SDXL": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "CLIP_G"
          }
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "CLIP_L"
          }
        ]
      },
      "optional": {
        "smZ_steps": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "smZ CLIPTextEncode",
    "display_name": "CLIP Text Encode++",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "smZ Settings": {
    "input": {
      "required": {
        "*": [
          "*",
          {
            "forceInput": true
          }
        ]
      },
      "optional": {
        "extra": [
          "STRING",
          {
            "multiline": true,
            "default": "{\"show_headings\":true,\"show_descriptions\":false,\"mode\":\"*\"}"
          }
        ],
        "\u3164": [
          "STRING",
          {
            "multiline": false,
            "default": "Stable Diffusion",
            "placeholder": "Stable Diffusion"
          }
        ],
        "info_comma_padding_backtrack": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Prompt word wrap length limit\nin tokens - for texts shorter than specified, if they don't fit into 75 token limit, move them to the next 75 token chunk"
          }
        ],
        "Prompt word wrap length limit": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 74,
            "step": 1
          }
        ],
        "enable_emphasis": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "info_RNG": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Random number generator source.\nchanges seeds drastically; use CPU to produce the same picture across different videocard vendors; use NV to produce same picture as on NVidia videocards"
          }
        ],
        "RNG": [
          [
            "cpu",
            "gpu",
            "nv"
          ],
          {
            "default": "cpu"
          }
        ],
        "\u3164\u3164": [
          "STRING",
          {
            "multiline": false,
            "default": "Compute Settings",
            "placeholder": "Compute Settings"
          }
        ],
        "info_disable_nan_check": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Disable NaN check in produced images/latent spaces. Only for CFGDenoiser."
          }
        ],
        "disable_nan_check": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "\u3164\u3164\u3164": [
          "STRING",
          {
            "multiline": false,
            "default": "Sampler parameters",
            "placeholder": "Sampler parameters"
          }
        ],
        "info_eta_ancestral": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Eta for k-diffusion samplers\nnoise multiplier; currently only applies to ancestral samplers (i.e. Euler a) and SDE samplers"
          }
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "info_s_churn": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Sigma churn\namount of stochasticity; only applies to Euler, Heun, Heun++2, and DPM2"
          }
        ],
        "s_churn": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "info_s_tmin": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Sigma tmin\nenable stochasticity; start value of the sigma range; only applies to Euler, Heun, Heun++2, and DPM2'"
          }
        ],
        "s_tmin": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "info_s_tmax": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Sigma tmax\n0 = inf; end value of the sigma range; only applies to Euler, Heun, Heun++2, and DPM2"
          }
        ],
        "s_tmax": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 999.0,
            "step": 0.01
          }
        ],
        "info_s_noise": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Sigma noise\namount of additional noise to counteract loss of detail during sampling"
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.1,
            "step": 0.001
          }
        ],
        "info_eta_noise_seed_delta": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Eta noise seed delta\ndoes not improve anything, just produces different results for ancestral samplers - only useful for reproducing images"
          }
        ],
        "ENSD": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "step": 1
          }
        ],
        "info_sgm_noise_multiplier": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "SGM noise multiplier\nmatch initial noise to official SDXL implementation - only useful for reproducing images\nsee https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12818"
          }
        ],
        "sgm_noise_multiplier": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "info_upcast_sampling": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "upcast sampling.\nNo effect with --force-fp32. Usually produces similar results to --force-fp32 with better performance while using less memory."
          }
        ],
        "upcast_sampling": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "\u3164\u3164\u3164\u3164": [
          "STRING",
          {
            "multiline": false,
            "default": "Optimizations",
            "placeholder": "Optimizations"
          }
        ],
        "info_NGMS": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Negative Guidance minimum sigma\nskip negative prompt for some steps when the image is almost ready; 0=disable, higher=faster. Only for CFGDenoiser.\nsee https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/9177"
          }
        ],
        "NGMS": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 15.0,
            "step": 0.01
          }
        ],
        "info_pad_cond_uncond": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Pad prompt/negative prompt to be same length\nimproves performance when prompt and negative prompt have different lengths; changes seeds. Only for CFGDenoiser."
          }
        ],
        "pad_cond_uncond": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "info_batch_cond_uncond": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Batch cond/uncond\ndo both conditional and unconditional denoising in one batch; uses a bit more VRAM during sampling, but improves speed. Only for CFGDenoiser."
          }
        ],
        "batch_cond_uncond": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "\u3164\u3164\u3164\u3164\u3164": [
          "STRING",
          {
            "multiline": false,
            "default": "Compatibility",
            "placeholder": "Compatibility"
          }
        ],
        "info_use_prev_scheduling": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Previous prompt editing timelines\nFor [red:green:N]; previous: If N < 1, it's a fraction of steps (and hires fix uses range from 0 to 1), if N >= 1, it's an absolute number of steps; new: If N has a decimal point in it, it's a fraction of steps (and hires fix uses range from 1 to 2), othewrwise it's an absolute number of steps"
          }
        ],
        "Use previous prompt editing timelines": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "\u3164\u3164\u3164\u3164\u3164\u3164": [
          "STRING",
          {
            "multiline": false,
            "default": "Experimental",
            "placeholder": "Experimental"
          }
        ],
        "info_use_CFGDenoiser": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "CFGDenoiser\nAn experimental option to use stable-diffusion-webui's denoiser. It allows you to use the 'Optimizations' settings listed here."
          }
        ],
        "Use CFGDenoiser": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "info_debug": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Debugging messages in the console."
          }
        ],
        "debug": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "on",
            "label_off": "off"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "smZ Settings",
    "display_name": "Settings (smZ)",
    "description": "",
    "category": "advanced",
    "output_node": false
  },
  "SaveImageWebsocket": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImageWebsocket",
    "display_name": "SaveImageWebsocket",
    "description": "",
    "category": "api/image",
    "output_node": true
  },
  "NNLatentUpscale": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "version": [
          [
            "SDXL",
            "SD 1.x"
          ]
        ],
        "upscale": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1.0,
            "max": 2.0,
            "step": 0.01,
            "display": "number"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "NNLatentUpscale",
    "display_name": "NNLatentUpscale",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "SDXLPromptStylerAll": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byArtists",
            "A.J.Casson",
            "Aaron Douglas",
            "Aaron Horkey",
            "Aaron Jasinski",
            "Aaron Siskind",
            "Abbott Fuller Graves",
            "Abbott Handerson Thayer",
            "Abdel Hadi Al Gazzar",
            "Abed Abdi",
            "Abigail Larson",
            "Abraham Mintchine",
            "Abraham Pether",
            "Abram Efimovich Arkhipov",
            "Adam Elsheimer",
            "Adam Hughes",
            "Adam Martinakis",
            "Adam Paquette",
            "Adi Granov",
            "Adolf Hir\u00e9my-Hirschl",
            "Adolph Gottlieb",
            "Adolph Menzel",
            "Adonna Khare",
            "Adriaen van Ostade",
            "Adriaen van Outrecht",
            "Adrian Donoghue",
            "Adrian Ghenie",
            "Adrian Paul Allinson",
            "Adrian Smith",
            "Adrian Tomine",
            "Adrianus Eversen",
            "Afarin Sajedi",
            "Affandi",
            "Aggi Erguna",
            "Agnes Cecile",
            "Agnes Lawrence Pelton",
            "Agnes Martin",
            "Agostino Arrivabene",
            "Agostino Tassi",
            "Ai Weiwei",
            "Ai Yazawa",
            "Akihiko Yoshida",
            "Akira Toriyama",
            "Akos Major",
            "Akseli Gallen-Kallela",
            "Al Capp",
            "Al Feldstein",
            "Al Williamson",
            "Alain Laboile",
            "Alan Bean",
            "Alan Davis",
            "Alan Kenny",
            "Alan Lee",
            "Alan Moore",
            "Alan Parry",
            "Alan Schaller",
            "Alasdair McLellan",
            "Alastair Magnaldo",
            "Alayna Lemmer",
            "Albert Benois",
            "Albert Bierstadt",
            "Albert Bloch",
            "Albert Dubois-Pillet",
            "Albert Eckhout",
            "Albert Edelfelt",
            "Albert Gleizes",
            "Albert Goodwin",
            "Albert Joseph Moore",
            "Albert Koetsier",
            "Albert Kotin",
            "Albert Lynch",
            "Albert Marquet",
            "Albert Pinkham Ryder",
            "Albert Robida",
            "Albert Servaes",
            "Albert Tucker",
            "Albert Watson",
            "Alberto Biasi",
            "Alberto Burri",
            "Alberto Giacometti",
            "Alberto Magnelli",
            "Alberto Seveso",
            "Alberto Sughi",
            "Alberto Vargas",
            "Albrecht Anker",
            "Albrecht Durer",
            "Alec Soth",
            "Alejandro Burdisio",
            "Alejandro Jodorowsky",
            "Aleksey Savrasov",
            "Aleksi Briclot",
            "Alena Aenami",
            "Alessandro Allori",
            "Alessandro Barbucci",
            "Alessandro Gottardo",
            "Alessio Albi",
            "Alex Alemany",
            "Alex Andreev",
            "Alex Colville",
            "Alex Figini",
            "Alex Garant",
            "Alex Grey",
            "Alex Gross",
            "Alex Hirsch",
            "Alex Horley",
            "Alex Howitt",
            "Alex Katz",
            "Alex Maleev",
            "Alex Petruk",
            "Alex Prager",
            "Alex Ross",
            "Alex Russell Flint",
            "Alex Schomburg",
            "Alex Timmermans",
            "Alex Toth",
            "Alexander Archipenko",
            "Alexander Bogen",
            "Alexander Fedosav",
            "Alexander Jansson",
            "Alexander Kanoldt",
            "Alexander McQueen",
            "Alexander Millar",
            "Alexander Milne Calder",
            "Alexandr Averin",
            "Alexandre Antigna",
            "Alexandre Benois",
            "Alexandre Cabanel",
            "Alexandre Calame",
            "Alexandre Jacovleff",
            "Alexandre-E\u0301variste Fragonard",
            "Alexei Harlamoff",
            "Alexej von Jawlensky",
            "Alexey Kurbatov",
            "Alexis Gritchenko",
            "Alfred Augustus Glendening",
            "Alfred Cheney Johnston",
            "Alfred Eisenstaedt",
            "Alfred Guillou",
            "Alfred Heber Hutty",
            "Alfred Henry Maurer",
            "Alfred Kelsner",
            "Alfred Kubin",
            "Alfred Munnings",
            "Alfred Parsons",
            "Alfred Sisley",
            "Alfred Stevens",
            "Alfredo Jaar",
            "Algernon Blackwood",
            "Alice Bailly",
            "Alice Neel",
            "Alice Pasquini",
            "Alice Rahon",
            "Alison Bechdel",
            "Aliza Razell",
            "Allen Williams",
            "Allie Brosh",
            "Allison Bechdel",
            "Alma Thomas",
            "Alois Arnegger",
            "Alphonse Mucha",
            "Alphonse Osbert",
            "Alpo Jaakola",
            "Alson Skinner Clark",
            "Alvar Aalto",
            "Alvaro Siza",
            "Alvin Langdon Coburn",
            "Alyssa Monks",
            "Amadou Opa Bathily",
            "Amanda Clark",
            "Amanda Sage",
            "Amandine Van Ray",
            "Ambrosius Benson",
            "Ambrosius Bosschaert",
            "Amedee Ozenfant",
            "Amedeo Modigliani",
            "Amiet Cuno",
            "Aminollah Rezaei",
            "Amir Zand",
            "Amy Earles",
            "Amy Judd",
            "Amy Sillman",
            "Am\u00e9d\u00e9e Guillemin",
            "Anato Finnstark",
            "Anatoly Metlan",
            "Anders Zorn",
            "Ando Fuchs",
            "Andre De Dienes",
            "Andre Derain",
            "Andre Kertesz",
            "Andre Kohn",
            "Andre Norton",
            "Andre-Charles Boulle",
            "Andrea Kowch",
            "Andrea Mantegna",
            "Andreas Achenbach",
            "Andreas Franke",
            "Andreas Gursky",
            "Andreas Levers",
            "Andreas Rocha",
            "Andreas Vesalius",
            "Andrei Markin",
            "Andrew Atroshenko",
            "Andrew Ferez",
            "Andrew Macara",
            "Andrew Robinson",
            "Andrew Whem",
            "Andrew Wyeth",
            "Andrey Remnev",
            "Andre\u0301i Arinouchkine",
            "Android Jones",
            "Andrzej Sykut",
            "Andr\u00e9 Lhote",
            "Andr\u00e9 Masson",
            "Andy Fairhurst",
            "Andy Goldsworthy",
            "Andy Kehoe",
            "Andy Warhol",
            "Angela Barrett",
            "Angela Sung",
            "Angus McKie",
            "Anish Kapoor",
            "Anita Malfatti",
            "Anja Millen",
            "Anja Percival",
            "Anka Zhuravleva",
            "Ann Stookey",
            "Anna Ancher",
            "Anna Bocek",
            "Anna Dittmann",
            "Anna Razumovskaya",
            "Anna and Elena Balbusso",
            "Anne Bachelier",
            "Anne Brigman",
            "Anne Dewailly",
            "Anne Mccaffrey",
            "Anne Packard",
            "Anne Rothenstein",
            "Anne Stokes",
            "Anne Sudworth",
            "Anne Truitt",
            "Anne-Louis Girodet",
            "Anni Albers",
            "Annibale Carracci",
            "Annick Bouvattier",
            "Annie Soudain",
            "Annie Swynnerton",
            "Ansel Adams",
            "Anselm Kiefer",
            "Antanas Sutkus",
            "Anthony Gerace",
            "Anthony Thieme",
            "Anthony van Dyck",
            "Anto Carte",
            "Antoine Blanchard",
            "Antoine Verney-Carron",
            "Anton Corbijn",
            "Anton Domenico Gabbiani",
            "Anton Fadeev",
            "Anton Mauve",
            "Anton Otto Fischer",
            "Anton Pieck",
            "Anton Raphael Mengs",
            "Anton Semenov",
            "Antonello da Messina",
            "Antoni Gaudi",
            "Antonio Canova",
            "Antonio Donghi",
            "Antonio J. Manzanedo",
            "Antonio Mancini",
            "Antonio Mora",
            "Antonio Roybal",
            "Antony Gormley",
            "Apollinary Vasnetsov",
            "Apollonia Saintclair",
            "Aquirax Uno",
            "Archibald Thorburn",
            "Aries Moross",
            "Arik Brauer",
            "Aristarkh Lentulov",
            "Aristide Maillol",
            "Arkhyp Kuindzhi",
            "Armand Guillaumin",
            "Armand Point",
            "Arnold Bocklin",
            "Arnold B\u00f6cklin",
            "Arnold Schoenberg",
            "Aron Demetz",
            "Aron Wiesenfeld",
            "Arshile Gorky",
            "Art Fitzpatrick",
            "Art Frahm",
            "Art Spiegelman",
            "Artem Chebokha",
            "Artemisia Gentileschi",
            "Artgerm",
            "Arthur Adams",
            "Arthur Boyd",
            "Arthur Dove",
            "Arthur Garfield Dove",
            "Arthur Hacker",
            "Arthur Hughes",
            "Arthur Lismer",
            "Arthur Rackham",
            "Arthur Radebaugh",
            "Arthur Sarnoff",
            "Arthur Stanley Wilkinson",
            "Arthur Streeton",
            "Arthur Tress",
            "Arthur Wardle",
            "Artur Bordalo",
            "Arturo Souto",
            "Artus Scheiner",
            "Ary Scheffer",
            "Asaf Hanuka",
            "Asger Jorn",
            "Asher Brown Durand",
            "Ashley Willerton",
            "Ashley Wood",
            "Atay Ghailan",
            "Atelier Olschinsky",
            "Atey Ghailan",
            "Aubrey Beardsley",
            "Audrey Kawasaki",
            "August Friedrich Schenck",
            "August Macke",
            "August Sander",
            "August von Pettenkofen",
            "Auguste Herbin",
            "Auguste Mambour",
            "Auguste Toulmouche",
            "Augustus Edwin Mulready",
            "Augustus Jansson",
            "Augustus John",
            "Austin Osman Spare",
            "Axel T\u00f6rneman",
            "Ayami Kojima",
            "Ayan Nag",
            "Aykut Aydogdu",
            "Bakemono Zukushi",
            "Balthus",
            "Banksy",
            "Barbara Hepworth",
            "Barbara Kruger",
            "Barbara Stauffacher Solomon",
            "Barbara Takenaga",
            "Barclay Shaw",
            "Barkley L. Hendricks",
            "Barnett Newman",
            "Barry McGee",
            "Barry Windsor Smith",
            "Bart Sears",
            "Barthel Bruyn the Elder",
            "Barthel Bruyn the Younger",
            "Bartolome Esteban Murillo",
            "Basil Gogos",
            "Bastien Lecouffe-Deharme",
            "Bayard Wu",
            "Beatrix Potter",
            "Beauford Delaney",
            "Becky Cloonan",
            "Beeple",
            "Bella Kotak",
            "Ben Aronson",
            "Ben Goossens",
            "Ben Hatke",
            "Ben Nicholson",
            "Ben Quilty",
            "Ben Shahn",
            "Ben Templesmith",
            "Ben Wooten",
            "Benedetto Caliari",
            "Benedick Bana",
            "Benoit B. Mandelbrot",
            "Berend Strik",
            "Bernard Aubertin",
            "Bernard Buffet",
            "Bernardo Bellotto",
            "Bernardo Strozzi",
            "Berndnaut Smilde",
            "Bernie Wrightson",
            "Bert Hardy",
            "Bert Stern",
            "Berthe Morisot",
            "Bertil Nilsson",
            "Bess Hamiti",
            "Beth Conklin",
            "Bettina Rheims",
            "Bhupen Khakhar",
            "Bijou Karman",
            "Bill Brandt",
            "Bill Brauer",
            "Bill Carman",
            "Bill Durgin",
            "Bill Gekas",
            "Bill Henson",
            "Bill Jacklin",
            "Bill Medcalf",
            "Bill Sienkiewicz",
            "Bill Traylor",
            "Bill Viola",
            "Bill Ward",
            "Bill Watterson",
            "Billy Childish",
            "Bjarke Ingels",
            "Blek Le Rat",
            "Bo Bartlett",
            "Bo Chen",
            "Bob Byerley",
            "Bob Eggleton",
            "Bob Ross",
            "Bojan Jevtic",
            "Bojan Koturanovic",
            "Bordalo II",
            "Boris Grigoriev",
            "Boris Groh",
            "Boris Kustodiev",
            "Boris Vallejo",
            "Botero",
            "Brad Kunkle",
            "Brad Rigney",
            "Brandon Mably",
            "Brandon Woelfel",
            "Brenda Zlamany",
            "Brent Cotton",
            "Brent Heighton",
            "Brett Weston",
            "Brett Whiteley",
            "Brian Bolland",
            "Brian Despain",
            "Brian Froud",
            "Brian K. Vaughan",
            "Brian Kesinger",
            "Brian M. Viveros",
            "Brian Mashburn",
            "Brian Oldham",
            "Brian Stelfreeze",
            "Brian Sum",
            "Briana Mora",
            "Brice Marden",
            "Bridget Bate Tichenor",
            "Bridget Riley",
            "Briton Rivi\u00e8re",
            "Brooke DiDonato",
            "Brooke Shaden",
            "Brothers Grimm",
            "Brothers Hildebrandt",
            "Bruce Coville",
            "Bruce Munro",
            "Bruce Nauman",
            "Bruce Pennington",
            "Bruce Timm",
            "Bruno Catalano",
            "Bruno Munari",
            "Bruno Walpoth",
            "Bryan Hitch",
            "Butcher Billy",
            "C. R. W. Nevinson",
            "Cagnaccio Di San Pietro",
            "Camille Corot",
            "Camille Pissarro",
            "Camille Walala",
            "Canaletto",
            "Candido Portinari",
            "Carel Willink",
            "Carl Barks",
            "Carl Gustav Carus",
            "Carl Holsoe",
            "Carl Larsson",
            "Carl Spitzweg",
            "Carlo Crivelli",
            "Carlos Schwabe",
            "Carmen Saldana",
            "Carne Griffiths",
            "Carrie Mae Weems",
            "Casey Weldon",
            "Caspar David Friedrich",
            "Cassius Marcellus Coolidge",
            "Catherine Hyde",
            "Catrin Welz-Stein",
            "Cedric Peyravernay",
            "Chad Knight",
            "Chantal Joffe",
            "Charles Addams",
            "Charles Angrand",
            "Charles Blackman",
            "Charles Camoin",
            "Charles Dana Gibson",
            "Charles E. Burchfield",
            "Charles Gwathmey",
            "Charles Le Brun",
            "Charles Liu",
            "Charles Schridde",
            "Charles Schulz",
            "Charles Spencelayh",
            "Charles Vess",
            "Charles-Francois Daubigny",
            "Charlie Bowater",
            "Charline von Heyl",
            "Cha\u00efm Soutine",
            "Chen Zhen",
            "Chesley Bonestell",
            "Chiharu Shiota",
            "Ching Yeh",
            "Chip Zdarsky",
            "Chris Claremont",
            "Chris Cunningham",
            "Chris Foss",
            "Chris Leib",
            "Chris Mars",
            "Chris Moore",
            "Chris Ofili",
            "Chris Saunders",
            "Chris Turnham",
            "Chris Uminga",
            "Chris Van Allsburg",
            "Chris Ware",
            "Christian Dimitrov",
            "Christian Grajewski",
            "Christophe Vacher",
            "Christopher Balaskas",
            "Christopher Jin Baron",
            "Chuck Close",
            "Cicely Mary Barker",
            "Cindy Sherman",
            "Claire Hummel",
            "Clara Miller Burd",
            "Clara Peeters",
            "Clarence Holbrook Carter",
            "Claude Cahun",
            "Claude Monet",
            "Clemens Ascher",
            "Cliff Chiang",
            "Clive Madgwick",
            "Clovis Trouille",
            "Clyde Caldwell",
            "Coby Whitmore",
            "Coles Phillips",
            "Colin Geller",
            "Conor Harrington",
            "Conrad Roset",
            "Constant Permeke",
            "Constantin Brancusi",
            "Cory Arcangel",
            "Cory Loftis",
            "Costa Dvorezky",
            "Craig Davison",
            "Craig Mullins",
            "Craig Wylie",
            "Craola",
            "Cuno Amiet",
            "Cyril Rolando",
            "Dain Yoon",
            "Dale Chihuly",
            "Damien Hirst",
            "Dan Flavin",
            "Dan Mumford",
            "Dan Witz",
            "Daniel Buren",
            "Daniel Clowes",
            "Daniel Garber",
            "Daniel Merriam",
            "Daniel Ridgway Knight",
            "Daniela Uhlig",
            "Daniele Afferni",
            "Dante Gabriel Rossetti",
            "Dao Le Trong",
            "Dariusz Zawadzki",
            "Darren Bacon",
            "Darwyn Cooke",
            "Daryl Mandryk",
            "Dave Dorman",
            "Dave Gibbons",
            "Dave McKean",
            "David A. Hardy",
            "David Aja",
            "David B. Mattingly",
            "David Bomberg",
            "David Bowie",
            "David Burdeny",
            "David Burliuk",
            "David Choe",
            "David Driskell",
            "David Finch",
            "David Hockney",
            "David Inshaw",
            "David Ligare",
            "David Lynch",
            "David McClellan",
            "David Palumbo",
            "David Shrigley",
            "David Spriggs",
            "David Teniers the Younger",
            "David Wiesner",
            "Dean Cornwell",
            "Dean Ellis",
            "Death Burger",
            "Debbie Criswell",
            "Derek Boshier",
            "Desmond Morris",
            "Diane Arbus",
            "Diane Dillon",
            "Dick Bickenbach",
            "Diego Dayer",
            "Diego Rivera",
            "Diego Vel\u00e1zquez",
            "Dmitry Kustanovich",
            "Don Bluth",
            "Don Maitz",
            "Donald Judd",
            "Donato Giancola",
            "Dora Carrington",
            "Dora Maar",
            "Dorina Costras",
            "Dorothea Tanning",
            "Dorothy Lathrop",
            "Doug Chiang",
            "Douglas Smith",
            "Dr. Seuss",
            "Dunkelbunt Hundertwasser\u201d",
            "Dustin Nguyen",
            "Duy Huynh",
            "E. H. Shepard",
            "Earl Norem",
            "Ed Benedict",
            "Ed Binkley",
            "Ed Brubaker",
            "Ed Emshwiller",
            "Ed Freeman",
            "Ed Mell",
            "Ed Roth",
            "Eddie Campbell",
            "Eddie Mendoza",
            "Edgar Degas",
            "Edmund Dulac",
            "Edmund Leighton",
            "Edouard Manet",
            "Edouard Riou",
            "Eduardo Kobra",
            "Edvard Munch",
            "Edward Atkinson Hornel",
            "Edward Burne-Jones",
            "Edward Gorey",
            "Edward Hopper",
            "Edward John Poynter",
            "Edward Julius Detmold",
            "Edward Lear",
            "Edward Robert Hughes",
            "Edward Steichen",
            "Edward Weston",
            "Edwin Austin Abbey",
            "Edwin Deakin",
            "Edwin Henry Landseer",
            "Eero Saarinen",
            "Egon Schiele",
            "Eiichiro Oda",
            "Eileen Agar",
            "El Greco",
            "Elaine de Kooning",
            "Eleanor Vere Boyle",
            "Elenore Abbott",
            "Eliott Lilly",
            "Elizabeth Gadd",
            "Elizabeth Shippen Green",
            "Ellen Gallagher",
            "Ellen Jewett",
            "Elliot Lilly",
            "Elsa Beskow",
            "Emil Alzamora",
            "Emil Ferris",
            "Emil Nolde",
            "Emilia Wilk",
            "Emily Kame Kngwarreye",
            "Emma Geary",
            "Emmanuel Shiu",
            "Emmanuelle Moureaux",
            "Emory Douglas",
            "Enki Bilal",
            "Ephraim Moses Lilien",
            "Eric Fischl",
            "Eric Wallis",
            "Eric Zener",
            "Erich Heckel",
            "Erin Hanson",
            "Ernest Crichlow",
            "Ernie Barnes",
            "Ernst Fuchs",
            "Ernst Haas",
            "Ernst Haeckel",
            "Ernst Ludwig Kirchner",
            "Esao Andrews",
            "Etel Adnan",
            "Ethan Van Sciver",
            "Etienne Hebinger",
            "Ettore Sottsass",
            "Ettore Tito",
            "Eugene Delacroix",
            "Eugene von Guerard",
            "Eug\u00e8ne Grasset",
            "Evelyn De Morgan",
            "Everett Raymond Kinstler",
            "Evgeni Gordiets",
            "Ewald R\u00fcbsamen",
            "Eyvind Earle",
            "F Scott Hess",
            "Fabian Perez",
            "Fabio Hurtado",
            "Fairfield Porter",
            "Faith 47",
            "Faith Ringgold",
            "Fang Lijun",
            "Farel Dalrymple",
            "Fenghua Zhong",
            "Ferdinand Hodler",
            "Ferdinand Knab",
            "Ferdinand Van Kessel",
            "Fernand Khnopff",
            "Fernand Toussaint",
            "Fernando Herenu",
            "Filip Hodas",
            "Filippino Lippi",
            "Filippo Balbi",
            "Flora Borsi",
            "Ford Madox Brown",
            "Francesca Woodman",
            "Francis Bacon",
            "Francis Coates Jones",
            "Francis Picabia",
            "Francisco De Goya",
            "Francisco Mart\u00edn",
            "Frank Auerbach",
            "Frank Frazetta",
            "Frank Gehry",
            "Frank Holl",
            "Frank Lloyd Wright",
            "Frank Miller",
            "Frank Stella",
            "Frank Tinsley",
            "Frank Xavier Leyendecker",
            "Franklin Booth",
            "Franz Marc",
            "Franz Sedlacek",
            "Franz Xaver Winterhalter",
            "Frederic Church",
            "Frederic Remington",
            "Frederick Lord Leighton",
            "Frederick McCubbin",
            "Frida Kahlo",
            "Frits Van den Berghe",
            "Gabriel Dawe",
            "Gabriele M\u00fcnter",
            "Gaetano Pesce",
            "Galan Pang",
            "Gareth Pugh",
            "Gary Larson",
            "Gaston Bussi\u00e8re",
            "Gediminas Pranckevicius",
            "Genndy Tartakovsky",
            "Geof Darrow",
            "Georg Jensen",
            "Georg Karl Pfahler",
            "George Ault",
            "George Cruikshank",
            "George Dionysus Ehret",
            "George Frederic Watts",
            "George French Angas",
            "George Grosz",
            "George Herriman",
            "George Inness",
            "George Lucas",
            "George Luks",
            "George Stubbs",
            "George Tooker",
            "Georges Rouault",
            "Georges Seurat",
            "Georges de La Tour",
            "Georgia O\u2019Keeffe",
            "Gerald Brom",
            "Gerda Wegener",
            "Gerhard Munthe",
            "Gerhard Richter",
            "Gertrude Abercrombie",
            "Giacomo Balla",
            "Gianluca Foli",
            "Gifford Beal",
            "Gil Elvgren",
            "Gilbert Stuart",
            "Giorgio De Chirico",
            "Giotto Di Bondone",
            "Giovanni Battista Bracelli",
            "Giovanni Battista Gaulli",
            "Giovanni Battista Piranesi",
            "Giovanni Battista Venanzi",
            "Giovanni da Udina",
            "Giuseppe Arcimboldo",
            "Giuseppe de Nittis",
            "Gjon Mili",
            "Glen Orbik",
            "Glenn Fabry",
            "Gloria Stoll Karn",
            "Go Nagai",
            "Gordon Browne",
            "Gordon Parks",
            "Goro Fujita",
            "Grace Cossington Smith",
            "Grace Popp",
            "Grandma Moses",
            "Grant Wood",
            "Grayson Perry",
            "Greg Girard",
            "Greg Hildebrandt",
            "Greg Rutkowski",
            "Greg Simkins",
            "Gregory Crewdson",
            "Guerrilla Girls",
            "Guido Borelli Da Caluso",
            "Guido Crepax",
            "Guillermo del Toro",
            "Guo Pei",
            "Gustaf Tenggren",
            "Gustav Klimt",
            "Gustave Buchet",
            "Gustave Courbet",
            "Gustave Dor\u00e9",
            "Gustave Moreau",
            "Gustave Van de Woestijne",
            "Guy Billout",
            "Gwen John",
            "Gwenda Morgan",
            "H. R. (Hans Ruedi) Giger",
            "H.P. Lovecraft",
            "Haddon Sundblom",
            "Hajime Sorayama",
            "Hal Foster",
            "Hale Woodruff",
            "Hanna-Barbera",
            "Hannah Hoch",
            "Hans Arnold",
            "Hans Baldung",
            "Hans Baluschek",
            "Hans Bellmer",
            "Harold McCauley",
            "Haroon Mirza",
            "Harriet Backer",
            "Harry Clarke",
            "Hasui Kawase",
            "Hayao Miyazaki",
            "Hayv Kahraman",
            "Hein Gorny",
            "Heinrich Kley",
            "Heinrich Lefler",
            "Heinz Edelmann",
            "Helen Frankenthaler",
            "Helene Knoop",
            "Helene Schjerfbeck",
            "Helio Oiticica",
            "Helmut Newton",
            "Hendrick Avercamp",
            "Hendrick Cornelisz Vroom",
            "Hendrick Goltzius",
            "Hendrik Kerstens",
            "Henri De Toulouse Lautrec",
            "Henri Fantin Latour",
            "Henri Matisse",
            "Henri Rousseau",
            "Henri-Edmond Cross",
            "Henriette Grindat",
            "Henry Asencio",
            "Henry Fuseli",
            "Henry Moore",
            "Henry Moret",
            "Henry Ossawa Tanner",
            "Henry Raleigh",
            "Herbert List",
            "Herve Groussin",
            "Herv\u00e9 Guibert",
            "Hethe Srodawa",
            "Hieronymus Bosch",
            "Hikari Shimoda",
            "Hilma AF Klint",
            "Hirohiko Araki",
            "Hiroshi Nagai",
            "Hiroshi Sugimoto",
            "Hiroshi Yoshida",
            "Honor C. Appleton",
            "Honor\u00e9 Daumier",
            "Hope Gangloff",
            "Horace Vernet",
            "Hou China",
            "Howard Chandler Christy",
            "Howard Finster",
            "Howard Hodgkin",
            "Howard Pyle",
            "Hsiao-Ron Cheng",
            "Hubert Robert",
            "Hugh Ferriss",
            "Hugh Kretschmer",
            "Hyacinthe Rigaud",
            "Iain Faulkner",
            "Ian McQue",
            "Ian Miller",
            "Ida Rentoul Outhwaite",
            "Igor Morski",
            "Igor Wolski",
            "Igor Zenin",
            "Ilya Kuvshinov",
            "Ilya Repin",
            "Incarcerated Jerkfaces",
            "Ingrid Baars",
            "Inio Asano",
            "Irma Stern",
            "Iryna Yermolova",
            "Isaac Cordal",
            "Isaac Levitan",
            "Ismail Inceoglu",
            "Issac Levitan",
            "Istvan Banyai",
            "It\u014d Jakuch\u016b",
            "Ivan Aivazovsky",
            "Ivan Albright",
            "Ivan Bilibin",
            "Ivan Shishkin",
            "Iwan Baan",
            "J. J. Grandville",
            "J.C. Leyendecker",
            "J.M.W. Turner",
            "JC Leyendecker",
            "Jacek Yerka",
            "Jack Butler Yeats",
            "Jack Davis",
            "Jack Gaughan",
            "Jack Kirby",
            "Jackson Pollock",
            "Jacob Hashimoto",
            "Jacob Lawrence",
            "Jacob van Ruisdael",
            "Jacques Le Moyne",
            "Jacques Nathan-Garamond",
            "Jake Parker",
            "Jakub R\u00f3\u017calski",
            "James Abbott McNeill Whistler",
            "James C Christensen",
            "James Ensor",
            "James Gilleard",
            "James Gillray",
            "James Gurney",
            "James Jean",
            "James Montgomery Flagg",
            "James Paick",
            "James Stokoe",
            "James Thomas Watts",
            "James Tissot",
            "James Turrell",
            "Jamie Baldridge",
            "Jamie Hawkesworth",
            "Jamie Hewlett",
            "Jamie McKelvie",
            "Jamini Roy",
            "Jan Brett",
            "Jan Luyken",
            "Jan Pietersz Saenredam",
            "Jan Van Eyck",
            "Jan van Kessel the Elder",
            "Jane Graverol",
            "Jane Newland",
            "Janek Sedlar",
            "Jasmine Becket-Griffith",
            "Jason A. Engle",
            "Jason Chan",
            "Jason Edmiston",
            "Jasper Johns",
            "Jaume Plensa",
            "Jaya Suberg",
            "Jean Arp",
            "Jean Auguste Dominique Ingres",
            "Jean Bourdichon",
            "Jean Delville",
            "Jean Dubuffet",
            "Jean Fouquet",
            "Jean Giraud",
            "Jean Jullien",
            "Jean Marc Nattier",
            "Jean Metzinger",
            "Jean Nouvel",
            "Jean-Antoine Watteau",
            "Jean-Baptiste Monge",
            "Jean-Fran\u00e7ois Millet",
            "Jean-Honor\u00e9 Fragonard",
            "Jean-Louis Prevost",
            "Jean-L\u00e9on G\u00e9r\u00f4me",
            "Jean-Michel Basquiat",
            "Jean-Paul Riopelle",
            "Jeanloup Sieff",
            "Jeannette Guichard-Bunel",
            "Jed Henry",
            "Jef Wu",
            "Jeff Easley",
            "Jeff Goldblum",
            "Jeff Kinney",
            "Jeff Koons",
            "Jeff Legg",
            "Jeff Lemire",
            "Jeff Simpson",
            "Jeff Wall",
            "Jeffrey Catherine Jones",
            "Jeffrey Smith art",
            "Jeffrey T. Larson",
            "Jenny Saville",
            "JennyBird Alcantara",
            "Jeremiah Ketner",
            "Jeremy Geddes",
            "Jeremy Lipking",
            "Jeremy Mann",
            "Jerry Pinkney",
            "Jerry Siegel",
            "Jerzy Duda-Gracz",
            "Jesper Ejsing",
            "Jessica Rossier",
            "Jessica Woulfe",
            "Jessie Willcox Smith",
            "Jhonen Vasquez",
            "Jillian Tamaki",
            "Jim Burns",
            "Jim Davis",
            "Jim Lee",
            "Jim Mahfood",
            "Jim Woodring",
            "Jimmy Ernst",
            "Jimmy Lawlor",
            "Joachim Brohm",
            "Joan Mir\u00f3",
            "Joan Tuset",
            "Joanna Kustra",
            "Joao Ruas",
            "Joaqu\u00edn Sorolla",
            "Joe Bowler",
            "Joe De Mers",
            "Joe Fenton",
            "Joe Jusko",
            "Joe Madureira",
            "Joe Webb",
            "Joel Meyerowitz",
            "Joel Sternfeld",
            "Joey Chou",
            "Johann Wolfgang von Goethe",
            "Johannes Itten",
            "Johannes Vermeer",
            "Johannes Voss",
            "Johfra Bosschart",
            "John Anster Fitzgerald",
            "John Atherton",
            "John Atkinson Grimshaw",
            "John Bauer",
            "John Berkey",
            "John Blanche",
            "John Bratby",
            "John Cassaday",
            "John Constable",
            "John Currin",
            "John Duncan",
            "John Frederick Kensett",
            "John French Sloan",
            "John Harris",
            "John Howe",
            "John Hoyland",
            "John James Audubon",
            "John Kenn Mortensen",
            "John La Farge",
            "John Lavery",
            "John Martin",
            "John Perceval",
            "John Philip Falter",
            "John Salminen",
            "John Singer Sargent",
            "John Singleton Copley",
            "John Stezaker",
            "John Totleben",
            "John Wayne Gacy",
            "John Whitcomb",
            "John Wilhelm",
            "John William Waterhouse",
            "Jon Klassen",
            "Jon McCoy",
            "Jon Whitcomb",
            "Jordan Grimmer",
            "Jorge Jacinto",
            "Josan Gonzalez",
            "Josef Albers",
            "Joseph Cornell",
            "Joseph Ducreux",
            "Joseph Lorusso",
            "Joseph Mallord William Turner",
            "Joseph Stella",
            "Josephine Wall",
            "Josh Kao",
            "Josh Keyes",
            "Jos\u00e9 Clemente Orozco",
            "Jovana Rikalo",
            "Juan Gris",
            "Judy Chicago",
            "Juergen Teller",
            "Jules Bastien-Lepage",
            "Julia Contacessi",
            "Julian Calle",
            "Juliana Huxtable",
            "Julie Bell",
            "Julie Blackmon",
            "Julie Mehretu",
            "Julien Delval",
            "Julius Horsthuis",
            "Jun Kaneko",
            "Junji Ito",
            "Justin Gerard",
            "J\u00f3zef Mehoffer",
            "Kadir Nelson",
            "Kaethe Butcher",
            "Kapwani Kiwanga",
            "Karel Appel",
            "Karel Thole",
            "Karen Wallis",
            "Karl Blossfeldt",
            "Karl Schmidt-Rottluff",
            "Karol Bak",
            "Kasia Nowowiejska",
            "Kate Beaton",
            "Kate Greenaway",
            "Kathryn Morris Trotter",
            "Kati Horna",
            "Katsuhiro Otomo",
            "Katsushika Hokusai",
            "Kawanabe Ky\u014dsai",
            "Kaws",
            "Kay Nielsen",
            "Kay Sage",
            "Kazimir Malevich",
            "Kazuo Koike",
            "Kehinde Wiley",
            "Keith Haring",
            "Keith Negley",
            "Keith Parkinson",
            "Kelly Freas",
            "Kelly Mckernan",
            "Kelly Sue Deconnick",
            "Kelly Vivanco",
            "Ken Fairclough",
            "Ken Kelly",
            "Ken Sugimori",
            "Kengo Kuma",
            "Kenne Gregoire",
            "Kent Monkman",
            "Kentaro Miura",
            "Kevin Gnutzmans",
            "Kevin Sloan",
            "Kieron Gillen",
            "Kilian Eng",
            "Kim Jung Gi",
            "Kim Keever",
            "Kitagawa Utamaro",
            "Kitty Lange Kielland",
            "Klaus Burgle",
            "Klaus Janson",
            "Klaus Wittmann",
            "Kobayashi Kiyochika",
            "Konstantin Korovin",
            "Konstantin Yuon",
            "Koson Ohara",
            "Krenz Cushart",
            "Kris Kuksi",
            "Kuang Hong",
            "Kunisada",
            "Kuno Veeber",
            "Kurzgesagt",
            "K\u00e4the Kollwitz",
            "L. Birge Harrison",
            "Lady Pink",
            "Larry Elmore",
            "Larry Poons",
            "Larry Sultan",
            "Laurel Burch",
            "Laurent Grasso",
            "Laurie Greasley",
            "Laurie Lipton",
            "Lawren Harris",
            "Lee Krasner",
            "Lee Madgwick",
            "Lee Quinones",
            "Leiji Matsumoto",
            "Leon Kossoff",
            "Leonardo Da Vinci",
            "Leonetto Cappiello",
            "Leonid Afremov",
            "Leonora Carrington",
            "Les Edwards",
            "Lesley Vance",
            "Leticia Gillett",
            "Liam Wong",
            "Liang Mark",
            "Lisa Frank",
            "Lisa Keene",
            "Liu Ye",
            "Liubov Sergeevna Popova",
            "Lois van Baarle",
            "Loish",
            "Lorena Alvarez G\u00f3mez",
            "Lorenz Hideyoshi",
            "Loretta Lux",
            "Lori Earley",
            "Louis Comfort Tiffany",
            "Louis Glackens",
            "Louis Icart",
            "Louis Janmot",
            "Louis Rhead",
            "Louis Wain",
            "Louise Bourgeois",
            "Louise Dahl-Wolfe",
            "Lovis Corinth",
            "Luca Boni",
            "Lucas Cranach the Elder",
            "Lucian Freud",
            "Lucy Madox Brown",
            "Ludwig Mies van der Rohe",
            "Luis Royo",
            "Luisa Russo",
            "Lynd Ward",
            "Lynda Barry",
            "Lynda Benglis",
            "Lyonel Feininger",
            "Lyubov Popova",
            "L\u00e1szl\u00f3 Moholy-Nagy",
            "M.C. Escher",
            "M.W. Kaluta",
            "Mab Graves",
            "Maginel Wright Enright Barney",
            "Magnus Enckell",
            "Makoto Shinkai",
            "Malcolm Liepke",
            "Man Ray",
            "Mandy Disher",
            "Mao Hamaguchi",
            "Marat Latypov",
            "Marc Chagall",
            "Marc Davis",
            "Marc Samson",
            "Marc Simonetti",
            "Marcin Jakubowski",
            "Marco Mazzoni",
            "Marcus Selmer",
            "Marek Okon",
            "Margaret Brundage",
            "Margaret Macdonald Mackintosh",
            "Margaret Mee",
            "Margaux Valonia",
            "Maria Kreyn",
            "Maria Pascual Alberich",
            "Maria Sibylla Merian",
            "Marianne North",
            "Marianne von Werefkin",
            "Marie Guillemine Benoist",
            "Marie Spartali Stillman",
            "Marina Abramovi\u0107",
            "Marius Borgeaud",
            "Marjane Satrapi",
            "Mark Arian",
            "Mark Briscoe",
            "Mark Brooks",
            "Mark Keathley",
            "Mark Lovett",
            "Mark Rothko",
            "Mark Ryden",
            "Mark Seliger",
            "Marsden Hartley",
            "Martin Ansin",
            "Martin Deschambault",
            "Martin John Heade",
            "Martin Johnson Heade",
            "Martin Kippenberger",
            "Martine Johanna",
            "Martiros Saryan",
            "Mary Anning",
            "Mary Blair",
            "Mary Cassatt",
            "Masaaki Sasamoto",
            "Masamune Shirow",
            "Mat Collishaw",
            "Mati Klarwein",
            "Matias Hannecke",
            "Matt Bors",
            "Matt Fraction",
            "Matt Groening",
            "Matthias Gr\u00fcnewald",
            "Matthias Jung",
            "Matti Suuronen",
            "Maurice Sendak",
            "Max Beckmann",
            "Max Dupain",
            "Max Ernst",
            "Max Pechstein",
            "Max Weber",
            "Maxfield Parrish",
            "Maximilian Pirner",
            "Maximilien Luce",
            "Maxwell Boas",
            "Mead Schaeffer",
            "Meryl McMaster",
            "Michael Carson",
            "Michael Cheval",
            "Michael Deforge",
            "Michael Heizer",
            "Michael Hutter",
            "Michael Parkes",
            "Michael Sowa",
            "Michael Whelan",
            "Michal Karcz",
            "Michal Lisowski",
            "Michelangelo Buonarroti",
            "Michelangelo Merisi Da Caravaggio",
            "Mickalene Thomas",
            "Miho Hirano",
            "Mikalojus Konstantinas Ciurlionis",
            "Mike Campau",
            "Mike Deodato",
            "Mike Mayhew",
            "Mike Mignola",
            "Mike Winkelmann (Beeple)",
            "Mike Worrall",
            "Mikhail Larionov",
            "Mikhail Nesterov",
            "Mikhail Vrubel",
            "Mikko Lagerstedt",
            "Milo Manara",
            "Milton Avery",
            "Milton Caniff",
            "Milton Glaser",
            "Miriam Schapiro",
            "Moebius",
            "Mordecai Ardon",
            "Mort Kunstler",
            "Muxxi",
            "M\u00e9ret Oppenheim",
            "NC Wyeth",
            "NHK Animation",
            "Nagel Patrick",
            "Nan Goldin",
            "Naoki Urasawa",
            "Naoko Takeuchi",
            "Naomi Okubo",
            "Naoto Hattori",
            "Natalia Goncharova",
            "Nathan Coley",
            "Nathan Wirth",
            "Neil Boyle",
            "Neil Welliver",
            "Nele Zirnite",
            "Ni Chuanjing",
            "Nicholas Roerich",
            "Nick Knight",
            "Nick Sharratt",
            "Nick Silva",
            "Nicola Samori",
            "Nicolas Delort",
            "Nicolas Mignard",
            "Nicolas de Stael",
            "Nikolai Ge",
            "Nikolina Petolas",
            "Noah Bradley",
            "Nobuyoshi Araki",
            "Noelle Stevenson",
            "Noriyoshi Ohrai",
            "Norman Ackroyd",
            "Norman Bluhm",
            "Norman Foster",
            "Norman Rockwell",
            "OSGEMEOS",
            "Octavio Ocampo",
            "Odd Nerdrum",
            "Odilon Redon",
            "Ogawa Kazumasa",
            "Ohara Koson",
            "Olafur Eliasson",
            "Oleg Oprisco",
            "Olga Skomorokhova",
            "Olivier Bonhomme",
            "Olivier Valsecchi",
            "Ollie Hoff",
            "Os Gemeos",
            "Osamu Tezuka",
            "Oskar Fischinger",
            "Oskar Kokoschka",
            "Ossip Zadkine",
            "Otto Dix",
            "Otto Marseus van Schrieck",
            "Pablo Picasso",
            "Pamela Colman Smith",
            "Paolo Roversi",
            "Paolo Veronese",
            "Pascal Blanche",
            "Pascale Campion",
            "Patrice Murciano",
            "Patricia Polacco",
            "Patrick Brown",
            "Patrick Caulfield",
            "Patrick Dougherty",
            "Patrick Heron",
            "Patrick Woodroffe",
            "Paul Barson",
            "Paul Chadeisson",
            "Paul Corfield",
            "Paul C\u00e9zanne",
            "Paul Delvaux",
            "Paul Gauguin",
            "Paul Gustav Fischer",
            "Paul Henry",
            "Paul Klee",
            "Paul Laffoley",
            "Paul Lehr",
            "Paul Ranson",
            "Paul Strand",
            "Paul Wonner",
            "Paula Modersohn-Becker",
            "Paulus Potter",
            "Pawel Kuczynski",
            "Peter Andrew Jones",
            "Peter Bagge",
            "Peter De Seve",
            "Peter Doig",
            "Peter Elson",
            "Peter Gric",
            "Peter Holme III",
            "Peter Howson",
            "Peter Kemp",
            "Peter Max",
            "Peter Milligan",
            "Peter Mohrbacher",
            "Peter Paul Rubens",
            "Peter Sculthorpe",
            "Peter Wileman",
            "Peter Zumthor",
            "Phil Foglio",
            "Phil Jimenez",
            "Phil Koch",
            "Phil Noto",
            "Philip Guston",
            "Philippe Druillet",
            "Philippe Parreno",
            "Pierre Bonnard",
            "Pierre Puvis de Chavannes",
            "Pierre-Auguste Renoir",
            "Piet Hein Eek",
            "Piet Mondrian",
            "Pieter Aertsen",
            "Pieter Bruegel The Elder",
            "Pieter Claesz",
            "Pieter Jansz Saenredam",
            "Pieter de Hooch",
            "Piotr Jab\u0142o\u0144ski",
            "Pipilotti Rist",
            "Pixar",
            "Pixar Concept Artists",
            "Posuka Demizu",
            "Qian Xuan",
            "Qing Han",
            "Quentin Blake",
            "Quentin Tarantino",
            "Quint Buchholz",
            "RETNA (Marquis Lewis)",
            "RHADS",
            "ROA",
            "Rafael Albuquerque",
            "Rafa\u0142 Olbi\u0144ski",
            "Raffaello Sanizo",
            "Raina Telgemeier",
            "Raja Ravi Varma",
            "Ralph Horsley",
            "Ralph McQuarrie",
            "Ralph Steadman",
            "Ramon Casas",
            "Randolph Caldecott",
            "Raphael",
            "Raphael Lacoste",
            "Raphaelle Peale",
            "Ravi Zupa",
            "Ray Caesar",
            "Ray Donley",
            "Raymond Briggs",
            "Raymond Duchamp-Villon",
            "Raymond Leech",
            "Raymond Swanland",
            "Rayner Alencar",
            "Rebeca Saray",
            "Rebecca Guay",
            "Rebecca Louise Law",
            "Rebecca Sugar",
            "Reginald Marsh",
            "Rembrandt Van Rijn",
            "Remedios Varo",
            "Rene Laloux",
            "Rene Magritte",
            "Ren\u00e9 Lalique",
            "Reylia Slaby",
            "Rich Davies",
            "Richard Burlet",
            "Richard Corben",
            "Richard Dadd",
            "Richard Deacon",
            "Richard Diebenkorn",
            "Richard Doyle",
            "Richard Eurich",
            "Richard Hamilton",
            "Richard Lindner",
            "Richard McGuire",
            "Richard Misrach",
            "Richard S. Johnson",
            "Richard Scarry",
            "Rick Guidice",
            "Rob Gonsalves",
            "Rob Liefeld",
            "Robby Cavanaugh",
            "Robert Antoine Pinchon",
            "Robert Chew",
            "Robert Childress",
            "Robert Crumb",
            "Robert Farkas",
            "Robert Hagan",
            "Robert Irwin",
            "Robert M Cunningham",
            "Robert Maguire",
            "Robert McCall",
            "Robert Mcginnis",
            "Robert Motherwell",
            "Robert Neubecker",
            "Robert Rauschenberg",
            "Robert S. Duncanson",
            "Robert Stivers",
            "Robert Vonnoh",
            "Robert William Hume",
            "Robert Williams",
            "Roberto Ferri",
            "Roberto Matta",
            "Roberto Parada",
            "Rockwell Kent",
            "Rodney Matthews",
            "Rodr\u00edguez ARS",
            "Roger Ballen",
            "Roger Dean",
            "Roger de La Fresnaye",
            "Rolf Armstrong",
            "Romero Britto",
            "Ron Mueck",
            "Ron Walotsky",
            "Ronald Balfour",
            "Ross Tran",
            "Roy Gjertson",
            "Roy Lichtenstein",
            "Roz Chast",
            "Ruan Jia",
            "Rudolf Freund",
            "Rufino Tamayo",
            "Rumiko Takahashi",
            "Russ Mills",
            "Russell Ayto",
            "Ruth Bernhard",
            "Ruxing Gao",
            "Ryan Hewett",
            "Ryan McGinley",
            "Ryan Stegman",
            "Ryohei Hase",
            "Sacha Goldberger",
            "Sailor Moon",
            "Sakai Ho\u0304itsu",
            "Sally Mann",
            "Salomon van Ruysdael",
            "Salvador Dali",
            "Sam Bosma",
            "Sam Kieth",
            "Sam Spratt",
            "Samuel Earp",
            "Samuel Melton Fisher",
            "Samuel and Joseph Newsom",
            "Sandra Chevrier",
            "Sandro Botticelli",
            "Sandy Skoglund",
            "Saner Edgar",
            "Sanford Kossin",
            "Sangyeob Park",
            "Santiago Calatrava",
            "Santiago Caruso",
            "Sara Wollfalk",
            "Sarah Lucas",
            "Satoshi Kon",
            "Saturno Butto",
            "Saul Bass",
            "Saul Steinberg",
            "Saul Tepper",
            "Scarlett Hooft Graafland",
            "Scott Brundage",
            "Scott Listfield",
            "Scott Naismith",
            "Sean Scully",
            "Sean Yoro",
            "Seb Mckinnon",
            "Sebastian Errazuriz",
            "Serge Marshennikov",
            "Shaddy Safadi",
            "Shaun Tan",
            "Shawn Coss",
            "Sheilah Beckett",
            "Shepard Fairey",
            "Sherree Valentine Daines",
            "Shin Jeongho",
            "Shinji Aramaki",
            "Shintaro Kago",
            "Shohei Otomo",
            "Shotaro Ishinomori",
            "Shusei Nagaoko",
            "Sidney Nolan",
            "Silvestro Lega",
            "Simeon Solomon",
            "Simon Birch",
            "Simon Bisley",
            "Simon Stalenhag",
            "Simone Martini",
            "Sir James Guthrie",
            "Siya Oum",
            "Skottie Young",
            "Slim Aarons",
            "Sofonisba Anguissola",
            "Sonia Delaunay",
            "Sou Fujimoto",
            "Sparth",
            "Squeak Carnwath",
            "Stan And Jan Berenstain",
            "Stan Lee",
            "Stanislav Poltavsky",
            "Stanis\u0142aw Szukalski",
            "Stanley Donwood",
            "Stephan Martiniere",
            "Stephen Gammell",
            "Stephen Oakley",
            "Stephen Shore",
            "Stevan Dohanos",
            "Steve Argyle",
            "Steve Dillon",
            "Steve Ditko",
            "Steve Henderson",
            "Steve Lieber",
            "Steve McCurry",
            "Steven Belledin",
            "Storm Thorgerson",
            "Stuart Davis",
            "Stuart Haygarth",
            "Stuart Immonen",
            "Studio Ghibli",
            "Sue Bryce",
            "Susan Luo",
            "Susan Seddon Boulet",
            "Sven Nordqvist",
            "Syd Mead",
            "Sydney Edmunds",
            "Sydney Prior Hall",
            "Tadao Ando",
            "Taiy\u014d Matsumoto",
            "Takashi Murakami",
            "Takato Yamamoto",
            "Takeshi Obata",
            "Tamara Lempicka",
            "Tan Zhi Hui",
            "Tara McPherson",
            "Tari Ma\u0301rk Da\u0301vid",
            "Tatsuro Kiuchi",
            "Ted Nasmith",
            "Ted Wallace",
            "Teophilus Tetteh",
            "Terada Katsuya",
            "Teresa Ramos",
            "Terry Oakes",
            "Terry Redlin",
            "Tex Avery",
            "Theo van Rysselberghe",
            "Thomas Allom",
            "Thomas Benjamin Kennington",
            "Thomas Blackshear",
            "Thomas Cole",
            "Thomas Dodd",
            "Thomas Eakins",
            "Thomas Gainsborough",
            "Thomas Moran",
            "Thomas Rowlandson",
            "Thomas Saliot",
            "Thomas Struth",
            "Thomas Visscher",
            "Thomas W Schaller",
            "Thornton Oakley",
            "Th\u00e9odore G\u00e9ricault",
            "Tibor Nagy",
            "Till Freitag",
            "Tim Burton",
            "Tim Doyle",
            "Tim Hildebrandt",
            "Tim White",
            "Tintoretto",
            "Titian",
            "Todd McFarlane",
            "Todd Schorr",
            "Toei Animations",
            "Tokujin Yoshioka",
            "Tom Bagshaw",
            "Tom Hammick",
            "Tom Lovell",
            "Tom Roberts",
            "Tom Thomson",
            "Tom Whalen",
            "Tomasz Alen Kopera",
            "Tomer Hanuka",
            "Tomi Ungerer",
            "Tomma Abts",
            "Tomokazu Matsuyama",
            "Tony DiTerlizzi",
            "Tony Moore",
            "Toshiharu Mizutani",
            "Toumas Korpi",
            "Tove Jansson",
            "Tracey Emin",
            "Travis Louie",
            "Tristan Eaton",
            "Tsutomu Nihei",
            "Tyler Edlin",
            "Tyler Shields",
            "Tyler West",
            "Ub Iwerks",
            "Uemura Shoen",
            "Ul Di Rico",
            "Umberto Boccioni",
            "Utagawa Hiroshige",
            "Valerie Hegarty",
            "Vhils",
            "Victo Ngai",
            "Victor Adame Minguez",
            "Victor Brauner",
            "Victor Medina",
            "Victor Moscoso",
            "Victor Nizovtsev",
            "Victor Vasarely",
            "Victoria Crowe",
            "Viktor Vasnetsov",
            "Viktoria Gavrilenko",
            "Vincent Di Fate",
            "Vincent Tanguay",
            "Vincent Van Gogh",
            "Virgil Finlay",
            "Vito Acconci",
            "Vittorio Matteo Corcos",
            "Vivian Maier",
            "Viviane Sassen",
            "Vivienne Westwood",
            "Vladimir Kush",
            "W. Heath Robinson",
            "W.W. Denslow",
            "Wadim Kashin",
            "Walt Disney",
            "Walt Kelly",
            "Walter Crane",
            "Walter Kim",
            "Walter Langley",
            "Walter Percy Day",
            "Wangechi Mutu",
            "Warren Ellis",
            "Warwick Globe",
            "Wassily Kandinsky",
            "Wayne Barlowe",
            "Wendy Froud",
            "Wes Anderson",
            "Wilfredo Lam",
            "Will Barnet",
            "Will Eisner",
            "Willem de Kooning",
            "Willem van Haecht",
            "William Blake",
            "William Eggleston",
            "William Etty",
            "William Gropper",
            "William Henry Hunt",
            "William Hogarth",
            "William Holman Hunt",
            "William Kentridge",
            "William Morris",
            "William S. Burroughs",
            "William Steig",
            "William Stout",
            "William Wegman",
            "William Zorach",
            "William-Adolphe Bouguereau",
            "Wim Crouwel",
            "Wim Wenders",
            "Winslow Homer",
            "Winsor McCay",
            "Wojciech Ostrycharz",
            "Wolf Kahn",
            "Wolfgang Tillmans",
            "Worthington Whittredge",
            "Yaacov Agam",
            "Yang Jialun",
            "Yanjun Cheng",
            "Yasuo Kuniyoshi",
            "Yasushi Nirasawa",
            "Yasutomo Oka",
            "Yayi Morales",
            "Yayoi Kusama",
            "Yiannis Moralis",
            "Yinka Shonibare",
            "Yohann Schepacz",
            "Yoji Shinkawa",
            "Yoshitaka Amano",
            "Yoshiyuki Tomino",
            "Yue Minjun",
            "Yuri Ivanovich Pimenov",
            "Yuumei",
            "Yves Klein",
            "Yves Tanguy",
            "Zack Snyder",
            "Zaha Hadid",
            "Zanele Muholi",
            "Zdzis\u0142aw Beksi\u0144ski",
            "Zeen Chin",
            "Zhang Kechun",
            "Zhelong Xu",
            "Zhichao Cai",
            "Zinaida Serebriakova",
            "teamLab",
            "theCHAMBA",
            "tokyogenso",
            "\u00c9lisabeth Vig\u00e9e Le Brun",
            "\u00c9mile Bernard",
            "\u00c9mile Gall\u00e9",
            "\u00c9tienne-Louis Boull\u00e9e",
            "\u201cFriedensreich Regentag",
            "none byCamera",
            "Canon EOS 90D",
            "Canon EOS M50",
            "Canon EOS M50 Mark II",
            "Canon EOS M6 Mark II",
            "Canon EOS R5",
            "Canon EOS R5 (Unique Variant)",
            "Canon EOS RP",
            "Canon EOS Rebel T8i",
            "Canon EOS Rebel T8i (Unique Variant)",
            "Canon EOS-1D X Mark III",
            "Canon EOS-1D X Mark III (Unique Dynamic Capture Variant)",
            "Canon EOS-1D X Mark III (Unique Dynamic Scenes Variant)",
            "Canon PowerShot G7 X Mark III",
            "Canon PowerShot G7 X Mark III (Unique Specific Variant)",
            "Canon PowerShot G7 X Mark III (Unique Variant)",
            "Fujifilm FinePix XP140",
            "Fujifilm GFX 100",
            "Fujifilm GFX 100 (Unique Specific Variant)",
            "Fujifilm GFX 100 (Unique Variant)",
            "Fujifilm GFX 50S",
            "Fujifilm Instax Mini 11",
            "Fujifilm X-E4",
            "Fujifilm X-E4 (Unique Variant)",
            "Fujifilm X-Pro3",
            "Fujifilm X-Pro3 (Unique Variant)",
            "Fujifilm X-T200",
            "Fujifilm X-T4",
            "Fujifilm X-T4 (Unique Strong Stabilization)",
            "Fujifilm X100V",
            "Fujifilm X100V (Unique Variant)",
            "GoPro HERO9 Black",
            "Hasselblad 907X 50C",
            "Hasselblad 907X 50C (Unique Large Format)",
            "Hasselblad H5D-50c",
            "Hasselblad H6D-100c",
            "Hasselblad X1D II 50C",
            "Hasselblad X1D II 50C (Unique High Resolution)",
            "Hasselblad XCD 4/45P",
            "Leica CL",
            "Leica M-D",
            "Leica M10 Monochrom",
            "Leica M10 Monochrom (Unique Variant)",
            "Leica M10-R",
            "Leica M11",
            "Leica Q-P",
            "Leica Q2",
            "Leica Q2 Monochrom",
            "Leica S3",
            "Leica SL2",
            "Leica SL2 (Unique Variant)",
            "Leica SL2-S",
            "Nikon Coolpix P950",
            "Nikon Coolpix P950 (Unique Variant)",
            "Nikon Coolpix W300",
            "Nikon D3500",
            "Nikon D6",
            "Nikon D780",
            "Nikon D850",
            "Nikon D850 (Unique High Resolution)",
            "Nikon Z5",
            "Nikon Z50",
            "Nikon Z50 (Unique Variant)",
            "Nikon Z6",
            "Nikon Z6 II",
            "Nikon Z7 II",
            "Nikon Z7 II (Unique Variant)",
            "Olympus E-M1X",
            "Olympus OM-D E-M1 Mark II",
            "Olympus OM-D E-M10 Mark IV",
            "Olympus OM-D E-M10 Mark IV (Unique Variant)",
            "Olympus OM-D E-M1X",
            "Olympus OM-D E-M5 Mark III",
            "Olympus OM-D E-M5 Mark III (Unique Variant)",
            "Olympus PEN E-PL10",
            "Olympus PEN-F",
            "Olympus PEN-F (Unique Specific Variant)",
            "Olympus PEN-F (Unique Variant)",
            "Olympus Tough TG-6",
            "Olympus Tough TG-6 (Unique Variant)",
            "Panasonic Lumix DC-G100",
            "Panasonic Lumix DC-G9",
            "Panasonic Lumix DC-GH5",
            "Panasonic Lumix DC-S1R",
            "Panasonic Lumix DC-S5",
            "Panasonic Lumix DC-S5 (Unique Variant)",
            "Panasonic Lumix DMC-FZ300",
            "Panasonic Lumix DMC-FZ300 (Unique Variant)",
            "Panasonic Lumix DMC-LX100 II",
            "Panasonic Lumix FZ1000 II",
            "Panasonic Lumix G100",
            "Panasonic Lumix GH5 II",
            "Panasonic Lumix S1",
            "Panasonic Lumix S1R",
            "Panasonic Lumix S5",
            "Pentax 645Z",
            "Pentax 645Z (Unique Large Format)",
            "Pentax K-1 Mark II",
            "Pentax KP",
            "Phase One XF IQ4 150MP",
            "Phase One XT",
            "Ricoh GR III",
            "Ricoh GR III (Unique Steady Focus)",
            "Ricoh GR III (Unique Variant)",
            "Ricoh Theta Z1",
            "Ricoh Theta Z1 (Unique Variant)",
            "Sigma SD Quattro H",
            "Sigma fp",
            "Sigma fp (Unique Specific Variant)",
            "Sigma fp (Unique Variant)",
            "Sigma fp L",
            "Sony A6000",
            "Sony A6400",
            "Sony A7R IV",
            "Sony A7S III",
            "Sony A9 II",
            "Sony Alpha 1",
            "Sony Alpha 1 (Unique Variant)",
            "Sony Alpha A7 III",
            "Sony Alpha A9 II",
            "Sony Cyber-shot DSC-RX10 IV",
            "Sony Cyber-shot DSC-W800",
            "Sony Cyber-shot RX100 VII",
            "Sony RX10 IV",
            "Sony RX100 VII",
            "Sony RX100 VII (Unique Fast Capture)",
            "Sony ZV-1",
            "none byCelticArt",
            "Celtic Knotwork Elegance",
            "Mystical Celtic Forest",
            "Celtic Mythological Saga",
            "Celtic Warrior's Journey",
            "Celtic Knotwork Mandala",
            "Celtic Music and Dance",
            "Celtic Nature Reverie",
            "Celtic Illuminated Manuscript",
            "Celtic Knotwork Wildlife",
            "Celtic Cross Reverence",
            "Celtic Dreamlike Enchantment",
            "Celtic Warrior Queen's Saga",
            "Celtic Knotwork Animal Totems",
            "Celtic Myths and Legends Tapestry",
            "Celtic Nature Spirits Invocation",
            "Celtic Spiral Labyrinth",
            "Celtic Festive Celebration",
            "Celtic Serpent Enigma",
            "Celtic Bard's Tale",
            "Celtic Tree of Life Reverence",
            "Celtic Elemental Elegance",
            "Celtic Druidic Ritual",
            "Celtic Warrior's Ancestral Legacy",
            "Celtic Ogham Script Artistry",
            "Celtic Faerie Enchantment",
            "Celtic Harpist's Melody",
            "Celtic Stone Circle Mystery",
            "Celtic Goddess Invocation",
            "Celtic Art Nouveau Fusion",
            "Celtic Traveler's Odyssey",
            "none by Composition",
            "Balance",
            "Framing",
            "LeadingLines",
            "NegativeSpace",
            "Pattern",
            "Perspective",
            "RuleOfThirds",
            "Simplicity",
            "Symmetry",
            "Texture",
            "none byCyberpunkSurrealism",
            "Neon Metropolis",
            "Biomechanical Dreamscape",
            "Cyberpunk Underwater Abyss",
            "Data Hacker's Nightmare",
            "City of Whispering Machines",
            "Virtual Reality Odyssey",
            "Neo-Tokyo Redux",
            "Bioluminescent Urban Jungle",
            "Clockwork Dreams",
            "Psychedelic Cyber Alley",
            "Digital Garden of Delights",
            "Post-Human Utopia",
            "Steam-Powered Cyberpunk",
            "Dystopian Dreamscape",
            "Neuro-Interface Odyssey",
            "Post-Apocalyptic Dreams",
            "Datastream Mirage",
            "Quantum Cityscapes",
            "Machine Rebellion Fantasia",
            "Transcendent Cyberspace",
            "Neon Dreamscape",
            "Virtual Reality Mirage",
            "Bionic Nightmares",
            "Holographic Utopia",
            "Cybernetic Playground",
            "Dystopian Datastream",
            "Neural Interface Delirium",
            "Retro-Futuristic Surreality",
            "Biomechanical Wonders",
            "Digital Rebellion",
            "Pixelated Nightmare",
            "Neurological Wasteland",
            "Cyberpunk Enigma",
            "Techno-Esotericism",
            "Cybernetic Wonderland",
            "Psychedelic Cyberspace",
            "Synthetic Sentience",
            "Biotechno Fusion",
            "Cyberpunk Dreamscape",
            "Cyberpunk Anomaly",
            "Virtual Rebellion",
            "Neon Jungle",
            "Synthetic Dreams",
            "Neon Noir Detective",
            "Holographic Paradox",
            "Psycho-Cybernetic Landscape",
            "Neon Future Cult",
            "Cybernetic Renaissance",
            "Cyberpunk Street Shaman",
            "Metropolis of Mirrors",
            "None byDepth",
            "Architecture Depth of Field",
            "Close-Up Depth of Field",
            "Creative or Abstract Depth of Field",
            "Deep Depth of Field",
            "Environmental Portraits Depth of Field",
            "Extreme Shallow Depth of Field",
            "Landscape Depth of Field",
            "Limited Depth of Field",
            "Macro Depth of Field",
            "Moderate Depth of Field",
            "Moderate Shallow Depth of Field",
            "Night Photography Depth of Field",
            "Panoramic Depth of Field",
            "Slightly Deep Depth of Field",
            "Still Life Depth of Field",
            "Street Photography Depth of Field",
            "Subject in Motion Depth of Field",
            "Very Deep Depth of Field",
            "Very Shallow Depth of Field",
            "none byEnvironment",
            "Beach",
            "Desert",
            "Forest",
            "Indoor",
            "Mountain",
            "Outdoor",
            "Rural",
            "Snow",
            "Studio",
            "Urban",
            "none byFashion",
            "Elegant Evening Gowns",
            "Urban Streetwear",
            "Bohemian Festival Vibes",
            "Timeless Vintage Fashion",
            "High-Tech Futuristic Couture",
            "Athletic Performance Gear",
            "Couture Red Carpet Glamour",
            "Minimalist Wardrobe Essentials",
            "Sustainable Fashion Revolution",
            "Cosplay Extravaganza",
            "Gothic Elegance",
            "Safari Adventure",
            "Artistic Avant-Garde",
            "Retro Futurism",
            "Cultural Fusion",
            "Sci-Fi Cyberpunk",
            "Rustic Country Charm",
            "Haute Couture Fantasy",
            "Gender Fluidity",
            "Sustainable Boho Chic",
            "Futuristic Space Fashion",
            "Art Deco Glamour",
            "Cottagecore Comfort",
            "Nautical Chic",
            "Glam Rock Rebellion",
            "Tropical Paradise Escape",
            "Cyberpunk Noir",
            "Artistic Street Graffiti",
            "Sustainable High Fashion",
            "Artistic Fusion",
            "No option",
            "BlackAndWhite",
            "Contrast",
            "Cool",
            "HDR",
            "Monochrome",
            "Saturated",
            "Sepia",
            "Vignette",
            "Vintage",
            "Warm",
            "none byFocus",
            "Extreme Shallow Depth of Field",
            "Very Shallow Depth of Field",
            "Night Photography Depth of Field",
            "Moderate Shallow Depth of Field",
            "Moderate Depth of Field",
            "Slightly Deep Depth of Field",
            "Deep Depth of Field",
            "Very Deep Depth of Field",
            "Hyperfocal Distance",
            "Selective Focus",
            "Bokeh Effect",
            "Tilt-Shift Photography",
            "Macro Depth of Field",
            "Landscape Depth of Field",
            "Limited Depth of Field",
            "Environmental Portraits Depth of Field",
            "Close-Up Depth of Field",
            "Street Photography Depth of Field",
            "Subject in Motion Depth of Field",
            "Architecture Depth of Field",
            "Panoramic Depth of Field",
            "Still Life Depth of Field",
            "Creative or Abstract Depth of Field",
            "Focus Distance 0.5m",
            "Focus Distance 1.0m",
            "Focus Distance 1.5m",
            "Focus Distance 2.0m",
            "Focus Distance 2.5m",
            "Focus Distance 3.0m",
            "Focus Distance 3.5m",
            "Focus Distance 4.0m",
            "Focus Distance 4.5m",
            "Focus Distance 5.0m",
            "Focus Distance 5.5m",
            "Focus Distance 6.0m",
            "Focus Distance 6.5m",
            "Focus Distance 7.0m",
            "Focus Distance 7.5m",
            "Focus Distance 8.0m",
            "Focus Distance 8.5m",
            "Focus Distance 9.0m",
            "Focus Distance 9.5m",
            "Focus Distance 10.0m",
            "10% Focus Area",
            "20% Focus Area",
            "30% Focus Area",
            "40% Focus Area",
            "50% Focus Area",
            "60% Focus Area",
            "70% Focus Area",
            "80% Focus Area",
            "90% Focus Area",
            "100% Focus Area",
            "Manual Focus",
            "Autofocus",
            "Focus Stacking",
            "Back-Button Focus",
            "Focus Bracketing",
            "Selective Focus",
            "Deep Focus",
            "Soft Focus",
            "Macro Focus",
            "Infinity Focus",
            "Zone Focus",
            "Edge-to-edge Focus",
            "Foreground Focus",
            "Background Focus",
            "Central Focus",
            "Corner Focus",
            "Top Focus",
            "Bottom Focus",
            "Right Focus",
            "Left Focus",
            "Rack Focus",
            "Pull Focus",
            "Rolling Focus",
            "Tilt-shift Focus",
            "Fly-by Focus",
            "Follow Focus",
            "Zoom Focus",
            "Dolly Focus",
            "Pan Focus",
            "Tilt Focus",
            "Whip Focus",
            "Slide Focus",
            "Crane Focus",
            "Swing Focus",
            "Drone Focus",
            "none byFantasy-Settings",
            "Atlantis",
            "Enchanted Forest",
            "Fairyland",
            "Fairytale",
            "Foreboding Castle",
            "Middle Earth",
            "Magical Kingdom",
            "Mordor",
            "Narnia",
            "Neverland",
            "Shambhala",
            "The Crystal Cave",
            "The Dragon's Lair",
            "The Forest of Mirrors",
            "The Island of Dreams",
            "The Kingdom of the Unicorn",
            "The Palace of Dreams",
            "The Tower of Oblivion",
            "The Vale of Shadows",
            "The Valley of the Damned",
            "The Valley of the Lost",
            "Tropical Paradise",
            "Oz",
            "Wonderland",
            "Xanadu",
            "The Floating Isles of Aether",
            "The City of Eldertide",
            "The Desert Kingdom of Mirage",
            "The Enchanted Library of Whispers",
            "The Crystal Caverns of Lumaria",
            "The Clockwork City of Gearspring",
            "The Forest of Eternal Twilight",
            "The Elemental Planes Nexus",
            "The Astral Citadel of Astraeus",
            "The Shadowed Realm of Umbrathor",
            "The Sunken Kingdom of Atlantis",
            "The Celestial Gardens of Zephyria",
            "The Crystal Labyrinth of Prisms",
            "The Wandering Forest of Eldertrees",
            "The Ethereal Observatory of Astromancers",
            "The Hollow Mountain of Emberforge",
            "The Dreaming Realm of Morpheus",
            "The Elemental Nexus of Convergence",
            "The Forgotten Ruins of Eldertemples",
            "The Enchanted Isles of Luminescia",
            "none byGothicRevival",
            "Gothic Cathedral Splendor",
            "Gothic Haunted Manor",
            "Gothic Revival Foliage",
            "Gothic Revival Portraiture",
            "Gothic Revival Castle",
            "Gothic Revival Cemetery",
            "Gothic Revival Interior",
            "Gothic Revival Forest Ruins",
            "Gothic Revival Waterside Manor",
            "Gothic Revival Village",
            "Gothic Revival Lighthouse",
            "Gothic Revival Ballroom",
            "Gothic Revival Clock Tower",
            "Gothic Revival Theater",
            "Gothic Revival Bridge",
            "Gothic Revival Crypt",
            "Gothic Revival Library",
            "Gothic Revival Cemetery Gate",
            "Gothic Revival Chapel",
            "Gothic Revival Cityscape",
            "Gothic Revival Forest Chapel",
            "Gothic Revival Clockwork Cathedral",
            "Gothic Revival Art Gallery",
            "Gothic Revival Mountain Fortress",
            "Gothic Revival Seaside Abbey",
            "Gothic Revival Opera House",
            "Gothic Revival Castle Ruins",
            "Gothic Revival Underground Crypt",
            "Gothic Revival Forest Bridge",
            "Gothic Revival Steampunk Workshop",
            "none byHorror",
            "Abandoned Asylum",
            "Alchemist's Study",
            "Animated Corpse",
            "Arachnid Swarm",
            "Back Alley Rogue",
            "Bloodthirsty Vampire",
            "Butcher Shop",
            "Cabinet of Curiosities",
            "Carnival Freakshow",
            "Cemetery Statue",
            "Conjoined Twins",
            "Crawler Mimicry",
            "Creepy Children",
            "Creepy Porcelain Doll",
            "Crucifixion",
            "Dark Carnival",
            "Death Masque",
            "Demonic Clown",
            "Disrespectful Grave Robber",
            "enhance",
            "Demonic Portal",
            "Demonic Possession",
            "Exorcism",
            "Ferocious Werewolf",
            "Gothic Art",
            "Gothic Architecture",
            "Gothic Monster",
            "Gothic Subculture",
            "Gothic Revival Architecture",
            "Graveyard Mist",
            "Grotesque Gargoyle",
            "Haunted Portrait",
            "Hate Crime",
            "Headless Horseman",
            "Horror Movie Poster",
            "H.P. Lovecraft Cover",
            "Insectoid Mutant",
            "Living Burial",
            "Lovecraftian Horror",
            "Macabre Memento Mori",
            "Mad Scientist Machinery",
            "Masked Killer",
            "Masked Stalker",
            "Melting Skull",
            "Memento Mori",
            "Menacing Scarecrow",
            "Mummy Portrait",
            "Mutated Beast",
            "Nightmare Beast",
            "Ominous Fog",
            "Ominous Warning",
            "Occult Ritual",
            "Patchwork Creature",
            "Plague Mass Grave",
            "Raven",
            "Rat Infestation",
            "Rat King",
            "Reanimated Corpse",
            "Rococo Architecture",
            "Scarecrow",
            "Scary Stories at Campfire",
            "Sinister Crone",
            "Sinister Laboratory",
            "Sinister Ritual",
            "Serial Killer",
            "Skeleton Dance",
            "Smothering Earth",
            "Spider Queen",
            "Torture Chamber",
            "Torture Device",
            "Tortured Prisoner",
            "Tortured Soul",
            "Undead Portrait",
            "Undead Gluttony",
            "Vacuous Grimace",
            "Vampire",
            "Victorian Laboratory",
            "William Eggleston",
            "---------------------",
            "sai-base",
            "sai-3d-model",
            "sai-analog film",
            "Vintage Travel Poster",
            "Prismatic",
            "Glamorous Portrait",
            "Scientific Illustration",
            "Stained Glass",
            "Art Deco Architecture",
            "Pop Surrealism",
            "Vintage Tattoo Flash",
            "Sports Card",
            "Stop Motion",
            "Bauhaus Design",
            "Propaganda Poster",
            "Art Nouveau",
            "Glitch Art",
            "Blueprint",
            "Woodblock Print",
            "Neon Lighting",
            "Bas-Relief Sculpture",
            "Pop Art",
            "Art Nouveau Poster",
            "Vector Portrait",
            "Egyptian Hieroglyphs",
            "Movie Storyboard",
            "Disney Animation",
            "Studio Ghibli",
            "Aardman",
            "Xilam",
            "Ankama",
            "Mixer",
            "LAIKA",
            "Toei",
            "UPA",
            "Vaporwave Retro",
            "Central American",
            "Vogue Cover",
            "Satanic",
            "Fortune Telling",
            "Southern Gothic",
            "Nouveau Circus",
            "Rococo Interior",
            "Mexican Skull Art",
            "Psychedelic Pop Art",
            "Voodoo",
            "Vintage Baseball",
            "Circus Performer",
            "Tiki Bar",
            "Apr\u00e8s-Ski",
            "Kawaii Fashion",
            "Tropical Luau",
            "Voodoo Doll",
            "Mardi Gras",
            "Figurine Shelf",
            "Terrarium",
            "Tiki Cocktail",
            "Cottagecore Fashion",
            "Vintage Tattoo Print",
            "Boudoir Photography",
            "Vaporwave",
            "Terrarium Bottle",
            "Vaporwave City",
            "Kawaii Character",
            "Vintage Halloween Costume",
            "Cassette Futurism",
            "Punk Poster",
            "Luchador",
            "Tiki Totem",
            "Cassette J-Card",
            "Prairie Dress",
            "Lounge Singer",
            "Gongfu Tea",
            "Aztec Calendar",
            "Cassette Graphics",
            "Laser Grid",
            "Giant Robot",
            "Vaporwave Sunset",
            "Fortune Teller",
            "Steampunk Portrait",
            "Scary Stories",
            "Woodblock Art",
            "Vintage Halloween Mask",
            "Grunge Flyer",
            "Voodoo Altar",
            "Cassette Collage",
            "Tropical Cocktail",
            "Vintage Robot Toy",
            "Scary Pumpkin",
            "Pinup",
            "Tarot Cards",
            "Ghibli",
            "Egyptology",
            "Battle",
            "Tarot",
            "Steampunk",
            "Ancient Maya",
            "Nautical",
            "Bomber Jacket",
            "Samurai",
            "American Traditional",
            "Propaganda Art",
            "Glitchcore",
            "Vaporgram",
            "Desaturated",
            "Dieselpunk",
            "My Little Pony",
            "Ballet",
            "Galactic",
            "Streamer Bike",
            "Tropical Hotel",
            "Tiki Mug",
            "Neon Racer",
            "Luau Fire Dancer",
            "Day of the Dead",
            "Sideshow Poster",
            "Vaporwave Graphics",
            "Voodoo Ceremony",
            "Blacklight Poster",
            "Teslapunk",
            "Cassette Bedroom",
            "Tropical Bathroom",
            "Voodoo Shop",
            "Vintage Halloween",
            "Goth Boudoir",
            "Island Luau",
            "Tiki Outdoor Shower",
            "Black Velvet Painting",
            "Tattoo Print",
            "Addams Family",
            "Cassette Wall",
            "Neon Tokyo",
            "Voodoo Queen",
            "Surf Wood Sign",
            "Haunted Carnival",
            "Tiki Idol",
            "Mall Goth",
            "Volcano Lair",
            "Graffiti Style",
            "Impressionism",
            "Fauvism",
            "Dada",
            "Cubism",
            "Expressionism",
            "Surrealism",
            "Symbolism",
            "Op Art",
            "Minimalism",
            "Conceptual Art",
            "Folk Art",
            "Naive Art",
            "Outsider Art",
            "Photorealism",
            "Suprematism",
            "De Stijl",
            "Bauhaus",
            "Constructivism",
            "Futurism",
            "Rayonism",
            "Vorticism",
            "Orphism",
            "Der Blaue Reiter",
            "Die Br\u00fccke",
            "Ashcan School",
            "Hudson River School",
            "Luminism",
            "Tonalism",
            "Barbizon School",
            "Academic Art",
            "Rococo",
            "Neoclassicism",
            "Romanticism",
            "Realism",
            "Social Realism",
            "Plein Air",
            "Pre-Raphaelite",
            "Art Informel",
            "",
            "Hard-edge Painting",
            "Geometric Abstraction",
            "Lyrical Abstraction",
            "Post-Painterly Abstraction",
            "Kinetic Art",
            "Land Art",
            "Performance Art",
            "Installation Art",
            "Video Art",
            "Digital Art",
            "New Media Art",
            "Street Art",
            "Stuckism",
            "Lowbrow Art",
            "Photomontage",
            "Diorama",
            "Assemblage",
            "Combine Painting",
            "Happenings",
            "Mail Art",
            "Neo-Dada",
            "Neo-Expressionism",
            "Bad Painting",
            "Graffiti",
            "Traditional Figurative Art",
            "Classical Realism",
            "Contemporary Realism",
            "Hyperrealism",
            "Magic Realism",
            "New Objectivity",
            "Precisionism",
            "Figurative Expressionism",
            "Neue Wilde",
            "New Perpendicular art",
            "New Simplicity",
            "Remodernism",
            "Norwegian romantic nationalism",
            "Socialist Realism",
            "Propaganda Poster Art",
            "Heroic Realism",
            "Na\u00efve Art",
            "Art Brut",
            "Neo-primitivism",
            "Visionary Art",
            "Intuitive Art",
            "Pseudorealism",
            "Radical Realism",
            "Critical Realism",
            "Neue Sachlichkeit",
            "Regionalism",
            "Abstract Expressionism",
            "Later European abstraction",
            "Tachisme",
            "Abstraction-Cr\u00e9ation",
            "Gutai",
            "British Pop Art",
            "Situationist International",
            "Lettrism",
            "St Ives School",
            "Transavantgarde",
            "Transgressive Art",
            "Neo Pop",
            "Kitsch Movement",
            "Virtual Art",
            "Internet Art",
            "Computer Art",
            "Information Art",
            "Systems Art",
            "Bio Art",
            "Genetic Art",
            "Sustainable Art",
            "Interactive Art",
            "Video Games",
            "Machinima",
            "Artware",
            "Demoscene",
            "Math Art",
            "Data Art",
            "Plotter Art",
            "VR Art",
            "AR Art",
            "Circuit Bending",
            "DIY Art",
            "Maker Culture",
            "Self-taught Art",
            "Neo-Pop",
            "Young British Artists",
            "Appropriation",
            "Algorithmic Art",
            "Use these to populate the JSON instead.",
            "none byImpressionism",
            "A Parisian Cafe Scene",
            "Cafe Terrace at Night",
            "Sunset Over a Tranquil Lake",
            "A Parisian Street Cafe in Spring",
            "A Field of Poppies in a Breeze",
            "A Moonlit Forest Glade",
            "A Canal in Venice at Dusk",
            "A Garden in Full Bloom",
            "The Eiffel Tower at Night",
            "A Coastal Cliff at Sunrise",
            "A Peaceful Meadow in Summer",
            "A Lakeside Cabin in Autumn",
            "none byIrishFolkArt",
            "Irish Cottage Reverie",
            "Irish Mythological Epic",
            "Irish Coastal Seascapes",
            "Irish Trad Music Session",
            "Irish Storyteller's Hearth",
            "Irish Wildlife Harmony",
            "Irish Claddagh Embrace",
            "Irish Dancing Celebration",
            "Irish Landscape Tapestry",
            "Irish Celtic Cross Devotion",
            "Irish Traditional Crafts Showcase",
            "Irish Fairytale Enchantment",
            "Irish Castle Dreamscape",
            "Irish Folk Music Journey",
            "Irish Bogland Serenity",
            "Irish Whimsical Seafolk",
            "Irish Rural Farmstead",
            "Irish Lighthouse Guardians",
            "Irish Traditions at the Crossroads",
            "Irish Celtic Spirals of Time",
            "Irish Cultural Traditions Mosaic",
            "Irish Poetry and Literature Tribute",
            "Irish Harvest Celebration",
            "Irish Bog Myths and Legends",
            "Irish River Folklore Enchantment",
            "Irish Emerald Isle Fantasy",
            "Irish St. Patrick's Day Parade",
            "Irish Castle Ruins Reverie",
            "Irish Seafaring Tales",
            "Irish Celtic Crossroads Puzzles",
            "none byLighting",
            "Ambient",
            "Artificial",
            "Backlit",
            "Diffused",
            "Flash",
            "Harsh",
            "Natural",
            "SideLit",
            "Soft",
            "Spotlight",
            "none byMythical Creatures",
            "The Phoenix of Eternal Flame",
            "The Enchanted Forest Nymph",
            "The Leviathan of the Abyss",
            "The Sphinx of Riddles",
            "The Faerie Court of Dreams",
            "The Chimera, Guardian of the Labyrinth",
            "The Griffin of Valor",
            "The Banshee, Wailer of Fate",
            "The Pegasus, Steed of the Heavens",
            "The Kraken, Terror of the Deep",
            "The Seraphim, Celestial Guardians",
            "The Gorgon, Petrifying Horror",
            "The Thunderbird, Stormbringer of the Skies",
            "The Kitsune, Shape-shifting Trickster",
            "The Minotaur, Maze Dweller",
            "The Valkyrie, Choosers of the Slain",
            "The Manticore, Dreaded Hunter",
            "The Dryad, Guardian of the Forest",
            "The Naiad, River Nymph of Tranquility",
            "The Roc, King of the Avians",
            "The Unicorn's Elegance",
            "The Dragon's Hoard",
            "The Mermaid's Melody",
            "The Thunderbird's Roar",
            "The Valkyrie's Valor",
            "The Yeti's Elusiveness",
            "The Basilisk's Deadly Gaze",
            "The Kappa's Watery Mischief",
            "The Chupacabra's Bloodlust",
            "The Wendigo's Hunger",
            "The Manticore's Ferocity",
            "The Nymph's Enchantment",
            "The Jinn's Wish-Granting",
            "The Leshy's Forest Mischief",
            "The Tengu's Martial Prowess",
            "The Thunder Horse's Storm Control",
            "The Roc's Soaring Majesty",
            "The Bunyip's Aquatic Mystery",
            "The Chimalli's Shield of Protection",
            "The Ifrit's Fiery Wrath",
            "none byMileHigh",
            "2D Game Art",
            "3D Animation",
            "3D Game Art",
            "3D Modeling",
            "3D Printing Art",
            "3D Printing in Art",
            "Aardman_Uncategorized",
            "Aboriginal Dot Painting",
            "Abstract Expressionism",
            "Abstract Painting",
            "Abstract Photography",
            "Abstract Sculpture",
            "Absurdist Theater",
            "Academic Art",
            "Acrylic Painting",
            "Action Films",
            "Adrian Ghenie",
            "Adventure",
            "Adventure Films",
            "Aerial Dance",
            "Aerial Photography",
            "African Beadwork",
            "African Beadwork Art",
            "African Cuisine",
            "African Mask Art",
            "African Mask Making",
            "Agnes Martin",
            "Ai Weiwei_1",
            "Ai Weiwei_2",
            "Air Art",
            "Airbrushing",
            "Albrecht Durer",
            "Album Cover Art",
            "Amazon Rainforest",
            "American Cuisine",
            "Amsterdam",
            "Amsterdam cityscape",
            "Analytical Cubism",
            "Andy Warhol",
            "Anger Art",
            "Animated Films",
            "Animation",
            "Anish Kapoor",
            "Anselm Kiefer",
            "Antarctica",
            "Architectural Design",
            "Architectural Photography",
            "Argentinian Art",
            "Art Activism",
            "Art Collaborations with Musicians",
            "Art Collaborations with Writers",
            "Art Conservation",
            "Art Criticism",
            "Art Curation",
            "Art Deco",
            "Art Deco Architecture",
            "Art Deco Design",
            "Art Education",
            "Art Education for Adults",
            "Art Education for Children",
            "Art Education for Remote Areas",
            "Art Education for Special Needs",
            "Art Gallery Management",
            "Art Games",
            "Art Historical Writing",
            "Art History",
            "Art History Research",
            "Art Informatics",
            "Art Inspired by Ancient Civilizations",
            "Art Inspired by the Digital Age",
            "Art Inspired by the Renaissance",
            "Art Inspired by the Roaring Twenties",
            "Art Inspired by the Victorian Era",
            "Art Installations",
            "Art Journalism",
            "Art Marketing",
            "Art Nouveau",
            "Art Nouveau Architecture",
            "Art Nouveau Design",
            "Art Restoration",
            "Art Sales and Auctions",
            "Art Therapy",
            "Art Therapy for Adults",
            "Art Therapy for Children",
            "Art Workshop Facilitation",
            "Art and AI Collaboration",
            "Art and Architecture Collaboration",
            "Art and Cultural Heritage Preservation",
            "Art and Environmental Sustainability",
            "Art and Literature Collaboration",
            "Art and Medical Collaboration",
            "Art and Mental Health",
            "Art and Music Collaboration",
            "Art and Science Collaboration",
            "Art and Social Justice Projects",
            "Art and Technology Collaboration",
            "Art and Urban Development",
            "Art for Agricultural Industry",
            "Art for Agricultural Sector",
            "Art for Airports",
            "Art for Animal Welfare Organizations",
            "Art for Anniversaries",
            "Art for Aquariums",
            "Art for Architectural Visualization",
            "Art for Asian Cultures",
            "Art for Augmented Reality Experiences",
            "Art for Automotive Design",
            "Art for Automotive Industry",
            "Art for Aviation Industry",
            "Art for Baby Showers",
            "Art for Birthdays",
            "Art for Botanical Gardens",
            "Art for Cafes and Restaurants",
            "Art for Charity Fundraisers",
            "Art for Children",
            "Art for Children's Hospitals",
            "Art for Climate Change Initiatives",
            "Art for Construction Industry",
            "Art for Corporate Spaces",
            "Art for Cruise Ships",
            "Art for Culinary Presentation",
            "Art for E-Commerce Platforms",
            "Art for Educational Institutions",
            "Art for Educational Technology",
            "Art for Elderly",
            "Art for Emergency Services",
            "Art for Energy Industry",
            "Art for Entertainment Industry",
            "Art for Environmental Activism",
            "Art for Environmental Campaigns",
            "Art for Factories and Workshops",
            "Art for Fashion Industry",
            "Art for Festivals and Events",
            "Art for Financial Institutions",
            "Art for Financial Sector",
            "Art for Fitness Centers",
            "Art for Funerals",
            "Art for Gender Equality",
            "Art for Government Entities",
            "Art for Graduations",
            "Art for Health Care Facilities",
            "Art for Home Decor",
            "Art for Hospitality Industry",
            "Art for Hotels",
            "Art for Human Anatomy Studies",
            "Art for Human Rights Campaigns",
            "Art for Indigenous Cultures",
            "Art for LGBTQ+ Celebrations",
            "Art for Libraries",
            "Art for Marine Industry",
            "Art for Maritime Industry",
            "Art for Medical Illustrations",
            "Art for Military and Defense Sector",
            "Art for Military and Veterans",
            "Art for Mobile Apps",
            "Art for Museums",
            "Art for Music Videos",
            "Art for National Holidays",
            "Art for Nautical Navigation",
            "Art for Non-Profit Organizations",
            "Art for Office Spaces",
            "Art for Outdoor Advertising",
            "Art for Packaging Design",
            "Art for Pet Products",
            "Art for Pharmaceutical Industry",
            "Art for Political Campaigns",
            "Art for Prisons",
            "Art for Public Transportation",
            "Art for Real Estate Marketing",
            "Art for Religious Celebrations",
            "Art for Religious Institutions",
            "Art for Renewable Energy Sector",
            "Art for Retail Spaces",
            "Art for Retirement Parties",
            "Art for Robotics",
            "Art for Schools and Colleges",
            "Art for Science Centers",
            "Art for Scientific Exploration",
            "Art for Security and Defense",
            "Art for Seniors",
            "Art for Shopping Malls",
            "Art for Smart City Projects",
            "Art for Social Media Platforms",
            "Art for Social Networking Sites",
            "Art for Spa and Wellness Centers",
            "Art for Space Exploration",
            "Art for Space Industry",
            "Art for Spaceships and Aerospace",
            "Art for Sports Industry",
            "Art for Sports Venues",
            "Art for Technical Manuals",
            "Art for Teenagers",
            "Art for Teens",
            "Art for Television Shows",
            "Art for Theme Parks",
            "Art for Toddlers",
            "Art for Train Stations",
            "Art for Underwater Exploration",
            "Art for Video Game Development",
            "Art for Virtual Assistants and AI",
            "Art for Virtual Events",
            "Art for Virtual Reality Experiences",
            "Art for Wearable Technology",
            "Art for Wearables",
            "Art for Web Platforms",
            "Art for Weddings",
            "Art for Zoos",
            "Art in Public Transportation",
            "Art with Light and Projection",
            "Art with Metalwork",
            "Art with Organic Materials",
            "Art with Recycled Materials",
            "Artist's Books",
            "Aspen",
            "Assemblage Art",
            "Astrophotography",
            "Athens",
            "Athleisure Fashion",
            "Atlantis",
            "Augmented Reality (AR) Art",
            "Augmented Reality Art",
            "Australian Aboriginal Art",
            "Autobiography",
            "Automotive Design",
            "Autumn Art",
            "Avant-Garde Fashion",
            "Ballet Dance",
            "Ballroom Dance",
            "Bangkok",
            "Banksy_1",
            "Banksy_2",
            "Barbara Kruger",
            "Barcelona",
            "Baroque",
            "Baroque Architecture",
            "Baroque Art",
            "Baroque Music",
            "Basket Weaving",
            "Basket Weaving Art",
            "Bauhaus",
            "Bauhaus Architecture",
            "Bauhaus Design",
            "Beachwear Fashion",
            "Beijing",
            "Belly Dance",
            "Berlin",
            "Bharatanatyam Dance",
            "Bikini Bottom",
            "Bio Art",
            "Biographical Films",
            "Biographical Literature",
            "Biography",
            "Biomorphic Architecture",
            "Black Hole",
            "Black and White Photography",
            "Blockbuster Films",
            "Bluegrass Music",
            "Blues Music",
            "Blues Music Illustration",
            "Body Art",
            "Body Art Performance",
            "Body Painting",
            "Bohemian Fashion",
            "Bookbinding",
            "Botanical Illustration",
            "Brazil",
            "Brazilian Art",
            "Brazilian Cuisine",
            "Brazilian Graffiti Art",
            "Breakdance",
            "Bridal Fashion",
            "British Art",
            "Bronze Sculpture",
            "Bruce Nauman",
            "Bruges",
            "Brutalism",
            "Brutalist Architecture",
            "Budapest cityscape",
            "Cai Guo-Qiang",
            "Cake Decorating",
            "Canada",
            "Candid Portrait Photography",
            "Caravaggio",
            "Caribbean Carnival Art",
            "Caribbean Cuisine",
            "Caricature",
            "Caspar David Friedrich",
            "Casual Fashion",
            "Cecily Brown",
            "Celtic Knotwork Art",
            "Celtic Mythology Art",
            "Central African Art",
            "Ceramic Art",
            "Ceramic Design",
            "Ceramic Sculpture",
            "Ceramics",
            "Chalk Art",
            "Charcoal Drawing",
            "Charles Ray",
            "Chicago",
            "Children's Fashion",
            "Children's Theater",
            "Chilean Art",
            "Chinese Architecture",
            "Chinese Art",
            "Chinese Calligraphy",
            "Chinese Cuisine",
            "Chinese Ink Painting",
            "Chinese Jade Carving",
            "Chinese Landscape Painting",
            "Chinese Mythology Art",
            "Chinese Paper Cutting",
            "Chinese Scroll Painting",
            "Chris Ofili",
            "Cindy Sherman_1",
            "Cindy Sherman_2",
            "Cinematography",
            "Cinque Terre",
            "Circuit Bending_Uncategorized",
            "Circus Arts",
            "Classic Western",
            "Classical Architecture",
            "Classical Art",
            "Classical Music",
            "Classical Music Illustration",
            "Classical Realism",
            "Classical Theater",
            "Claude Monet",
            "Collaborative Art Projects",
            "Collage",
            "Collage Art",
            "Colombian Art",
            "Colonial Architecture",
            "Colosseum",
            "Combine Painting_Sci-Fi_Still Life",
            "Comedy",
            "Comedy Literature",
            "Commercial Photography",
            "Community Mural Projects",
            "Computer art",
            "Concept Art for Movies",
            "Concept Art for Video Games",
            "Conceptual Art",
            "Concert Poster Design",
            "Constructivism",
            "Constructivism Art",
            "Contemporary Ballet",
            "Contemporary Dance",
            "Copenhagen",
            "Copenhagen cityscape",
            "Corporate Identity Design",
            "Cosplay Design",
            "Country Music",
            "Country Music Graphics",
            "Crime Films",
            "Cross-Disciplinary Art",
            "Cuban Art",
            "Cuban Cuisine",
            "Cubism",
            "Cubism Art",
            "Cult Films",
            "Cyberpunk",
            "Cyberpunk Fantasy Art",
            "Dadaism",
            "Dadaism Art",
            "Damien Hirst_1",
            "Damien Hirst_2",
            "Dan Flavin",
            "Dance Choreography",
            "Dance Performance Art",
            "Dark Fantasy Art",
            "Data Visualization Art",
            "De Stijl_Uncategorized",
            "Deconstructivist Architecture",
            "Die Br\u00fccke_Graffiti",
            "Diego Velazquez",
            "Digital Animation",
            "Digital Art",
            "Digital Drawing Tablets",
            "Digital Illustration",
            "Digital Painting",
            "Digital Sculpture",
            "Digital Storytelling",
            "Diorama_Uncategorized",
            "Disco Music",
            "Documentary Films",
            "Documentary Photography",
            "Drama",
            "Drama Films",
            "Dubai",
            "Dublin",
            "Dublin cityscape",
            "Dunder Mifflin",
            "Dutch Art",
            "Earth Art",
            "East African Art",
            "Eco Art",
            "Eco-Art",
            "Ed Ruscha",
            "Edgar Degas",
            "Edinburgh cityscape",
            "Editorial Design",
            "Edvard Munch",
            "Edward Hopper",
            "Egyptian Mythology Art",
            "Egyptian Wall Art",
            "El Anatsui",
            "Electronic Music",
            "Electronic Music Visuals",
            "Elegant_Erotic_Photography",
            "Embroidery",
            "Emerging_Artist",
            "Engraving",
            "Environmental Art",
            "Environmental Design",
            "Ephemeral Art",
            "Etching",
            "Eugene Delacroix",
            "Exhibition Design",
            "Exoplanet",
            "Experimental Art",
            "Experimental Films",
            "Experimental Music Video",
            "Experimental Photography",
            "Experimental Theater",
            "Expressionism",
            "Expressionist Architecture",
            "Expressionist painting",
            "Fairy Tale Art",
            "Fantasy",
            "Fantasy Films",
            "Fantasy Literature",
            "Farce",
            "Fashion Design",
            "Fashion Illustration",
            "Fashion Photography",
            "Fast Fashion",
            "Fauvism",
            "Fauvism Art",
            "Festival Fashion",
            "Fiction",
            "Filipino Art",
            "Film Direction",
            "Film Editing",
            "Film Noir",
            "Fine Art Photography",
            "Fine_Art_Black_and_White_Photography",
            "Fire Art",
            "Flamenco Dance",
            "Folk Dance",
            "Folk Music",
            "Folk Music Art",
            "Food Art",
            "Food Photography",
            "Formal Fashion",
            "France",
            "Francisco Goya",
            "Frankfurt cityscape",
            "French Art",
            "French Cuisine",
            "French Impressionism",
            "Fresco Painting Technique",
            "Frida Kahlo",
            "Funk Music",
            "Furniture Design",
            "Futurism",
            "Futurist Architecture",
            "GAYZ_Portraiture",
            "Gabriel Orozco",
            "Game Design",
            "Generative Art",
            "Geometric Abstraction",
            "Geometric abstract painting",
            "Georg Baselitz",
            "Georgia O'Keeffe",
            "Gerhard Richter_1",
            "Gerhard Richter_2",
            "German Art",
            "Glamorous_Erotic_Photography",
            "Glasgow cityscape",
            "Glass Sculpture",
            "Glassblowing",
            "Glazing Technique in Painting",
            "Glenn Ligon",
            "Gospel Music",
            "Gotham City",
            "Gothic Architecture",
            "Gothic Fashion",
            "Gothic Literature",
            "Gothic Revival Architecture",
            "Graffiti Art",
            "Grand Canyon",
            "Grant Wood",
            "Graphic Design",
            "Great Barrier Reef",
            "Great Wall of China",
            "Greek Art",
            "Greek Classical Sculpture",
            "Greek Mythology Art",
            "Greek Pottery Art",
            "Greendale",
            "Gritty_Voyeuristic_Photography",
            "Gustav Klimt",
            "Hallstatt",
            "Hard-edge Painting_Uncategorized",
            "Hate Crime_Uncategorized",
            "Haute Couture",
            "Haute Couture Fashion",
            "Haute Cuisine",
            "Hawkins",
            "Heavy Metal",
            "Henri Matisse",
            "Hieronymus Bosch",
            "High Fantasy",
            "High Fantasy Art",
            "Hip-Hop Album Art",
            "Hip-Hop Dance",
            "Hip-Hop Fashion",
            "Hip-Hop Music",
            "Historical Fiction",
            "Hogwarts",
            "Hong Kong",
            "Hong Kong cityscape",
            "Horror",
            "Horror Films",
            "Ice Sculpture",
            "Illustration Design",
            "Illustration for Children's Books",
            "Impressionism",
            "Impressionism Art",
            "Impressionist Landscape Painting",
            "Impressionist Portrait Painting",
            "Improvisational Theater",
            "Inca Mythology Art",
            "Indian Art",
            "Indian Cuisine",
            "Indian Miniature Painting",
            "Indian Mythology Art",
            "Indie Films",
            "Indie Music Art",
            "Indigenous Australian Art",
            "Indigenous Painting",
            "Indigenous Pottery",
            "Indonesian Art",
            "Industrial Architecture",
            "Industrial Design",
            "Ink Drawing",
            "Installation Art",
            "Interaction Design",
            "Interactive Art",
            "Interactive Art Installations",
            "Interactive artwork",
            "Interior Design",
            "Intimate_Naturist_Photography",
            "Irish Art",
            "Irish Dance",
            "Islamic Architecture",
            "Islamic Art",
            "Islamic Calligraphy",
            "Islamic Geometric Art",
            "Islamic Geometric Patterns",
            "Istanbul",
            "Istanbul cityscape",
            "Italian Art",
            "Italian Cuisine",
            "Italian Renaissance Art",
            "J.M.W. Turner",
            "Jackson Pollock",
            "Jakarta cityscape",
            "Japan",
            "Japanese Architecture",
            "Japanese Art",
            "Japanese Cuisine",
            "Japanese Mythology Art",
            "Jazz Dance",
            "Jazz Music",
            "Jazz Poster Art",
            "Jean-Honore Fragonard",
            "Jeff Koons",
            "Jenny Holzer",
            "Jerusalem",
            "Jewelry Design",
            "Johannes Vermeer",
            "John Baldessari",
            "Joyful Art",
            "Julie Mehretu",
            "Kabuki Theater",
            "Kara Walker",
            "Kathak Dance",
            "Katsushika Hokusai",
            "Kehinde Wiley",
            "Kerry James Marshall",
            "Kiki Smith",
            "Kinetic Art",
            "Kinetic Sculpture",
            "Kintsugi (Japanese Gold Repair)",
            "Knitting",
            "Korean Art",
            "Korean Celadon Ceramics",
            "Korean Celadon Pottery",
            "Korean Cuisine",
            "Kuala Lumpur",
            "Kyoto",
            "Kyoto cityscape",
            "Land Art",
            "Landscape Architecture",
            "Landscape Design",
            "Landscape Photography",
            "Leonardo da Vinci",
            "Lettrist artwork",
            "Light Art",
            "Line Dance",
            "Lisbon cityscape",
            "Lithography",
            "London",
            "Los Angeles",
            "Low Fantasy",
            "Luxury Fashion",
            "Lynching_Uncategorized",
            "Lyrical abstract painting",
            "Macabre Memento Mori_Horror_Horror & Dark_Still Life",
            "Machu Picchu",
            "Macro Photography",
            "Madhubani Painting",
            "Madhubani Painting (Indian Folk Art)",
            "Magic Realist painting",
            "Mannerism",
            "Mannerist Architecture",
            "Maori Wood Carving",
            "Marina Abramovi\u0107",
            "Mark Bradford",
            "Mark Grotjahn",
            "Martin Puryear",
            "Maurizio Cattelan",
            "Maximalism",
            "Mecca",
            "Mech City__Location",
            "Media Art",
            "Medical Oddities_Uncategorized",
            "Mediterranean Cuisine",
            "Melancholy Art",
            "Melodrama",
            "Memento Mori_Horror_Horror & Dark",
            "Memoir",
            "Menswear Fashion",
            "Mesoamerican Mythology Art",
            "Mesopotamian Mythology Art",
            "Metabolist Architecture",
            "Metal Music",
            "Metal Music Artwork",
            "Metalwork",
            "Metropolis",
            "Mexican Art",
            "Mexican Cuisine",
            "Mexican Muralism",
            "Miami",
            "Michelangelo",
            "Middle Eastern Cuisine",
            "Middle-earth",
            "Milky Way Galaxy",
            "Mime",
            "Minimalism",
            "Minimalist Web Design",
            "Mixed Media Art",
            "Modern Architecture",
            "Modern Dance",
            "Modernist Architecture",
            "Mona Hatoum",
            "Monoprinting Technique",
            "Mosaic",
            "Mosaic Art",
            "Motion Design",
            "Motion Graphics Design",
            "Mount Everest",
            "Mount Olympus",
            "Mughal Miniature Painting",
            "Mumbai",
            "Munich cityscape",
            "Music Video Direction",
            "Musical Films",
            "Musical Theater",
            "Mystery",
            "Mystery Literature",
            "Mythic Fantasy Art",
            "Nantucket",
            "Native American Art",
            "Native American Basketry",
            "Native American Mythology Art",
            "Native American Pottery",
            "Naturalism in Literature",
            "Nature Landscape Photography",
            "Nature Photography",
            "Nebula",
            "Neo Rauch",
            "Neo-Gothic Architecture",
            "Neo-Noir",
            "Neoclassical Architecture",
            "Neoclassicism",
            "Neoplasticism",
            "New Orleans",
            "New Perpendicular art_Uncategorized",
            "New Simplicity_Architecture",
            "New York City",
            "New York cityscape",
            "Niagara Falls",
            "Nicole Eisenman",
            "Night Photography",
            "Non-Fiction",
            "Nordic Viking Art",
            "Norse Mythology Art",
            "North African Art",
            "Norwegian romantic nationalism_Nature_Landscape",
            "Occult Sacrifice_Occult",
            "Oil Painting",
            "Olafur Eliasson",
            "Op Art",
            "Opera",
            "Opera Music",
            "Opera Music Illustration",
            "Osaka cityscape",
            "Pablo Picasso",
            "Package Design",
            "Pandora",
            "Paper Cutting",
            "Paper Mache Art",
            "Parametric Architecture",
            "Paris",
            "Participatory Art",
            "Paul Cezanne",
            "Performance Art",
            "Performance Sculpture",
            "Peruvian Art",
            "Petra",
            "Photography",
            "Photojournalism",
            "Photorealism",
            "Photorealistic painting",
            "Physical Theater",
            "Pixel Art",
            "Pizza Making",
            "Plein Air Painting",
            "Plus-Size Fashion",
            "Poetry",
            "Pointillism",
            "Pointillism Art",
            "Pole Dance",
            "Polynesian Mythology Art",
            "Polynesian Tattoo Art",
            "Pop Art",
            "Pop Music",
            "Pop Music Branding",
            "Pop art style",
            "Porcelain Art",
            "Portrait Photography",
            "Portuguese Art",
            "Post-Impressionism",
            "Postmodern Architecture",
            "Pottery",
            "Prague",
            "Prague cityscape",
            "Pre-Raphaelite_Uncategorized",
            "Preppy Fashion",
            "Printmaking",
            "Projection Mapping Art",
            "Prose Literature",
            "Provocative_Surreal_Photography",
            "Psychedelic Concert Posters",
            "Public Art Installations",
            "Public Installations",
            "Public Sculptures",
            "Punk Fashion",
            "Punk Music",
            "Puppetry",
            "Pyramids of Giza",
            "Quahog",
            "Quilting",
            "Quilting Art",
            "Quito cityscape",
            "R&B Music",
            "Rachel Whiteread",
            "Rangoli (Indian Floor Art)",
            "Rap Music Graphics",
            "Raphael",
            "Rashid Johnson",
            "Realism Art",
            "Realism in Literature",
            "Realistic Fiction",
            "Recycled Art",
            "Reggae Music",
            "Reggae Music Design",
            "Rembrandt",
            "Renaissance",
            "Renaissance Architecture",
            "Renaissance Art",
            "Rene Magritte",
            "Responsive Web Design",
            "Richard Serra",
            "Richard Tuttle",
            "Rio de Janeiro",
            "Rio de Janeiro cityscape",
            "Robert Gober",
            "Robotics Art",
            "Rock Album Art",
            "Rock Music",
            "Rococo",
            "Rococo Architecture",
            "Rococo Art",
            "Roman Mosaic Art",
            "Roman Mythology Art",
            "Romance",
            "Romance Literature",
            "Romanesque Architecture",
            "Romantic Comedy",
            "Romantic Films",
            "Romanticism",
            "Romanticism Art",
            "Romanticism in Literature",
            "Rome",
            "Rural Photography",
            "Russia",
            "Russian Art",
            "Russian Icon Painting",
            "Sahara Desert",
            "Salem",
            "Salsa Dance",
            "Salsa Music",
            "Salvador Dali",
            "Sand Sculpture",
            "Sandro Botticelli",
            "Sarah Sze",
            "Satire",
            "Satire Literature",
            "Scandinavian Architecture",
            "Scandinavian Art",
            "Scandinavian Design",
            "Scary Stories at Campfire_Horror_Horror & Dark",
            "Sci-Fi Films",
            "Science Fiction",
            "Screen Printing",
            "Screwball Comedy",
            "Sculpture",
            "Seoul",
            "Set Design for Theater",
            "Shadow City_Horror_Occult_Horror & Dark_Gothic_Location",
            "Shanghai",
            "Shepard Fairey",
            "Shirakawa-go",
            "Shirin Neshat",
            "Silent Films",
            "Singapore",
            "Skateboarding Fashion",
            "Skeleton Dance_Horror_Horror & Dark_Animation",
            "Slavic Mythology Art",
            "Slow Fashion",
            "Social Realism painting",
            "Sonnet",
            "Soul Music",
            "Sound Art",
            "Sound Design",
            "Sound Sculpture",
            "South African Art",
            "South American Textile Art",
            "Southwest Kachina Dolls",
            "Spaghetti Western",
            "Spanish Art",
            "Spanish Cuisine",
            "Sports Photography",
            "Spring Art",
            "Springfield",
            "Stained Glass Art",
            "Stand-Up Comedy",
            "Stars Hollow",
            "Steampunk",
            "Steampunk Fantasy Art",
            "Steampunk Fashion",
            "Stockholm cityscape",
            "Stone Sculpture",
            "Street Art",
            "Street Art Performance",
            "Street Art and Graffiti",
            "Street Photography",
            "Street Theater",
            "Streetwear",
            "Streetwear Fashion",
            "Studio Portrait Photography",
            "Sub Baton Rouge__Location",
            "Sub Boise__Location",
            "Sub Oxnard__Location",
            "Sub Santa Rosa__Location",
            "Sumi-e Painting",
            "Summer Art",
            "Summer Fashion",
            "Surrealism",
            "Surrealism Art",
            "Surrealist Painting",
            "Surrealist Sculpture",
            "Sushi Making",
            "Sustainable Architecture",
            "Sustainable Fashion",
            "Swing Dance",
            "Sydney",
            "Symbolism Art",
            "Synthetic Cubism",
            "Taj Mahal",
            "Takashi Murakami",
            "Talavera Pottery",
            "Tamara de Lempicka",
            "Tango Dance",
            "Tap Dance",
            "Tatooine",
            "Techno Music Visuals",
            "Temporary Art Installations",
            "Textile Art",
            "Textile Design",
            "Textile Sculpture",
            "Thai Art",
            "Thai Cuisine",
            "Thomas Gainsborough",
            "Thriller",
            "Thriller Films",
            "Thriller Literature",
            "Tibetan Thangka Painting",
            "Titian",
            "Tokyo",
            "Tokyo cityscape",
            "Torture Device_Horror_Horror & Dark",
            "Toy Design",
            "Traditional Animation",
            "Traditional Dance",
            "Traditional Japanese Architecture",
            "Traditional Pottery",
            "Tragedy",
            "Tragedy Literature",
            "Tranquil Art",
            "Travel Photography",
            "Twin Peaks",
            "Typography Design",
            "Ukiyo-e (Japanese Woodblock Printing)",
            "Ukiyo-e Art",
            "Undefined_Emerging_Artist",
            "Under Berlin__Location",
            "Underwater Photography",
            "Urban Fantasy Art",
            "Urban Landscape Photography",
            "Urban Photography",
            "Urban Sculpture",
            "User-Centered Design",
            "Utrecht cityscape",
            "Valhalla",
            "Valve",
            "Vatican City",
            "Venezuelan Art",
            "Venice",
            "Verbatim Theater",
            "Victorian Architecture",
            "Victorian Fashion",
            "Video Art",
            "Video Mapping",
            "Vienna",
            "Vienna cityscape",
            "Vietnamese Art",
            "Vietnamese Cuisine",
            "Vija Celmins",
            "Vincent Van Gogh",
            "Vintage Fashion",
            "Virtual Reality (VR) Art",
            "Virtual Reality Art",
            "Visual Effects (VFX) Design",
            "Vorticism_Uncategorized",
            "Wallace and Gromit",
            "Waltz Dance",
            "War Films",
            "Wassily Kandinsky",
            "Water Art",
            "Watercolor Painting",
            "Weaving",
            "Web Design",
            "Wedding Fashion",
            "Wedding Photography",
            "Wellington cityscape",
            "West African Art",
            "Westeros",
            "Wildlife Photography",
            "William Kentridge",
            "Winter Art",
            "Winter Fashion",
            "Wolfgang Tillmans",
            "Womenswear Fashion",
            "Wonderland",
            "Wood Carving",
            "Woodblock Printing",
            "Woodcut",
            "Workwear Fashion",
            "World Music",
            "Xiamen cityscape",
            "Yayoi Kusama",
            "Yellowstone National Park",
            "Yokohama cityscape",
            "Zurich cityscape",
            "carpint_Gothic",
            "citz_Sci-Fi_Architecture",
            "coolio_Portraiture",
            "getting there_Portraiture",
            "girlz_Fashion_Horror_Horror & Dark_Gothic",
            "gotit jinx_Tattoo Art",
            "greatz_Portraiture",
            "gsssggg_Portraiture",
            "hoop_Portraiture",
            "jinx_Tattoo Art",
            "jinxed_Portraiture",
            "kjkjkjj_Digital Media_Still Life_Comics",
            "kool_Portraiture",
            "misc-horror_Horror_Horror & Dark",
            "mkkk_Portraiture_Digital Media_Animation",
            "stfhgff_Photography",
            "none byMisc",
            "carpint_Gothic",
            "citz_Sci-Fi_Architecture",
            "coolio_Portraiture",
            "GAYZ_Portraiture",
            "getting there_Portraiture",
            "girlz_Fashion_Horror_Horror & Dark_Gothic",
            "greatz_Portraiture",
            "gsssggg_Portraiture",
            "gotit jinx_Tattoo Art",
            "hoop_Portraiture",
            "jinxed_Portraiture",
            "jinx_Tattoo Art",
            "kjkjkjj_Digital Media_Still Life_Comics",
            "kool_Portraiture",
            "mkkk_Portraiture_Digital Media_Animation",
            "stfhgff_Photography",
            "Under Honolulu__Location",
            "Sub Juneau__Location",
            "Underground Lansing__Location",
            "Sub Topeka__Location",
            "Under St. Paul__Location",
            "Sub Jackson__Location",
            "Underground Columbus__Location",
            "Sub Indianapolis__Location",
            "Under Omaha__Location",
            "Under Oklahoma City__Location",
            "Sub Des Moines__Location",
            "Underground Wichita__Location",
            "Under Fargo__Location",
            "Sub Bozeman__Location",
            "Underground Anchorage__Location",
            "Sub Casper__Location",
            "Sub Cheyenne__Location",
            "Underground Portland__Location",
            "Under Eugene__Location",
            "Sub Salem__Location",
            "Underground Seattle__Location",
            "Sub Spokane__Location",
            "Sub Tacoma__Location",
            "Under Sacramento__Location",
            "Sub Oakland__Location",
            "Underground San Jose__Location",
            "Sub Fresno__Location",
            "Under Bakersfield__Location",
            "Sub Anaheim__Location",
            "Underground Riverside__Location",
            "Sub Santa Ana__Location",
            "Underground Chula Vista__Location",
            "Sub Irvine__Location",
            "Sub Fontana__Location",
            "Sub Oxnard__Location",
            "Sub Moreno Valley__Location",
            "Underground Huntington Beach__Location",
            "Sub Glendale__Location",
            "Sub Santa Clarita__Location",
            "Sub Garden Grove__Location",
            "Sub Santa Rosa__Location",
            "Sub Rancho Cucamonga__Location",
            "Sub Ontario__Location",
            "Sub Lancaster__Location",
            "Sub Palmdale__Location",
            "Sub Pomona__Location",
            "Sub Torrance__Location",
            "Sub Pasadena__Location",
            "Sub Orange__Location",
            "Sub Roseville__Location",
            "Sub Thousand Oaks__Location",
            "Sub Concord__Location",
            "Sub Simi Valley__Location",
            "Sub Victorville__Location",
            "Sub El Monte__Location",
            "Sub Berkeley__Location",
            "Sub Downey__Location",
            "Sub Costa Mesa__Location",
            "Sub Inglewood__Location",
            "Sub Carlsbad__Location",
            "Sub Temecula__Location",
            "Under Istanbul__Location",
            "Under Tallahassee__Location",
            "Under Albany__Location",
            "Under Trenton__Location",
            "Under Hartford__Location",
            "Underground Salt Lake City__Location",
            "Under Juneau__Location",
            "Sub Baton Rouge__Location",
            "Underground Helena__Location",
            "Sub Carson City__Location",
            "Under Santa Fe__Location",
            "Sub Boise__Location",
            "Underground Lincoln__Location",
            "Sub Denver__Location",
            "Under Bismarck__Location",
            "Sub Pierre__Location",
            "Underground Austin__Location",
            "Sub Atlanta__Location",
            "Under Jackson__Location",
            "Sub Montgomery__Location",
            "Underground Little Rock__Location",
            "Sub Frankfort__Location",
            "Under Nashville__Location",
            "Sub Columbia__Location",
            "Sub Richmond__Location",
            "Under Charleston__Location",
            "Sub Dover__Location",
            "Underground Springfield__Location",
            "Sub Annapolis__Location",
            "Sub Providence__Location",
            "Underground Concord__Location",
            "Sub Montpelier__Location",
            "Sub Jefferson City__Location",
            "Crystal Caverns_",
            "Mech City__Location",
            "Nova Alexandria_",
            "Steamtown_",
            "Technotopia_",
            "Clockwork City__Location",
            "Under London__Location",
            "Dwarvenholm_",
            "Sanctuary_",
            "Shangri-La_",
            "Mime City__Location",
            "Elfheim_",
            "Midgard_",
            "Musica_",
            "Caveopolis_",
            "Mage City__Location",
            "Steampunk City__Location",
            "Shadow City_Horror_Occult_Horror & Dark_Gothic_Location",
            "Under Chicago__Location",
            "Neotokyo_",
            "Leviathan_",
            "Underground Rome__Location",
            "Zion_",
            "New Caelum_",
            "Hackersville_",
            "Ghoul City__Location",
            "Under Berlin__Location",
            "Elven City__Location",
            "Dwarvendom_",
            "Lost Vegas_",
            "Under Paris__Location",
            "Steeltown_",
            "Tech City__Location",
            "Under Montreal__Location",
            "Brightwater_",
            "enhance_",
            "Bloodthirsty Vampire_",
            "Serial Killer_Horror_Horror & Dark",
            "Exorcism_",
            "Torture Chamber_",
            "Mutated Beast_",
            "Crucifixion_",
            "Headless Horseman_",
            "Sinister Ritual_",
            "Ferocious Werewolf_",
            "Abandoned Asylum_",
            "Ominous Fog_",
            "Demonic Portal_Horror_Horror & Dark",
            "Scarecrow_Horror_Horror & Dark",
            "Menacing Scarecrow_",
            "Grotesque Gargoyle_",
            "Masked Killer_",
            "Graveyard Mist_Horror_Horror & Dark",
            "Gothic Monster_Architecture_Horror_Horror & Dark_Gothic",
            "Butcher Shop_",
            "Melting Skull_",
            "Tortured Soul_",
            "Sinister Laboratory_Occult_Horror_Horror & Dark_Still Life",
            "Demonic Clown_",
            "Haunted Portrait_",
            "Lovecraftian Horror_Horror_Horror & Dark",
            "Macabre Memento Mori_Horror_Horror & Dark_Still Life",
            "Creepy Children_",
            "Demonic Possession_",
            "Undead Portrait_",
            "Occult Ritual_",
            "Nightmare Beast_",
            "Gothic Architecture_Architecture_Horror_Horror & Dark_Gothic",
            "Horror Movie Poster_Horror_Horror & Dark_Gothic",
            "H.P. Lovecraft Cover_Horror_Horror & Dark",
            "Carnival Freakshow_",
            "Creepy Porcelain Doll_",
            "Torture Device_Horror_Horror & Dark",
            "Gothic Revival Architecture_Architecture_Horror_Horror & Dark_Gothic",
            "Dark Carnival_Horror_Horror & Dark_Gothic",
            "Cemetery Statue_",
            "Spider Queen_",
            "Skeleton Dance_Horror_Horror & Dark_Animation",
            "Scary Stories at Campfire_Horror_Horror & Dark",
            "Tortured Prisoner_",
            "Victorian Laboratory_",
            "Vampire_",
            "Mummy Portrait_",
            "Animated Corpse_",
            "Back Alley Rogue_",
            "Insectoid Mutant_",
            "Rat King_",
            "Undead Gluttony_",
            "Alchemist's Study_",
            "Patchwork Creature_",
            "Masked Stalker_",
            "Rat Infestation_",
            "Disrespectful Grave Robber_",
            "Cabinet of Curiosities_Occult_Horror_Horror & Dark",
            "Plague Mass Grave_",
            "Sinister Crone_",
            "Crawler Mimicry_",
            "Ominous Warning_",
            "Conjoined Twins_",
            "Living Burial_",
            "Death Masque_",
            "Memento Mori_Horror_Horror & Dark",
            "Reanimated Corpse_",
            "Hate Crime_",
            "Mad Scientist Machinery_",
            "Smothering Earth_",
            "Vacuous Grimace_",
            "Arachnid Swarm_",
            "sai-base_",
            "sai-3d-model_",
            "sai-analog film_",
            "sai-anime_",
            "sai-cinematic_",
            "sai-comic book_",
            "sai-craft clay_",
            "sai-digital art_",
            "sai-enhance_",
            "sai-fantasy art_",
            "sai-isometric_",
            "sai-line art_",
            "sai-lowpoly_",
            "sai-neonpunk_",
            "sai-origami_",
            "sai-photographic_",
            "sai-pixel art_",
            "sai-texture_",
            "ads-advertising_",
            "ads-automotive_",
            "ads-corporate_",
            "ads-fashion editorial_",
            "ads-food photography_",
            "ads-luxury_",
            "ads-real estate_",
            "ads-retail_",
            "artstyle-abstract_",
            "artstyle-abstract expressionism_",
            "artstyle-art deco_",
            "artstyle-art nouveau_",
            "artstyle-constructivist_",
            "artstyle-cubist_",
            "artstyle-expressionist_",
            "artstyle-graffiti_",
            "artstyle-hyperrealism_",
            "artstyle-impressionist_",
            "artstyle-pointillism_",
            "artstyle-pop art_",
            "artstyle-psychedelic_",
            "artstyle-renaissance_",
            "artstyle-steampunk_",
            "artstyle-surrealist_",
            "artstyle-typography_",
            "artstyle-watercolor_",
            "futuristic-biomechanical_",
            "futuristic-biomechanical cyberpunk_",
            "futuristic-cybernetic_",
            "futuristic-cybernetic robot_",
            "futuristic-cyberpunk cityscape_",
            "futuristic-futuristic_",
            "futuristic-retro cyberpunk_",
            "futuristic-retro futurism_",
            "futuristic-sci-fi_",
            "futuristic-vaporwave_",
            "game-bubble bobble_",
            "game-cyberpunk game_",
            "game-fighting game_",
            "game-gta_",
            "game-mario_",
            "game-minecraft_",
            "game-pokemon_",
            "game-retro arcade_",
            "game-retro game_",
            "game-rpg fantasy game_",
            "game-strategy game_",
            "game-streetfighter_",
            "game-zelda_",
            "misc-architectural_",
            "misc-disco_",
            "misc-dreamscape_",
            "misc-dystopian_",
            "misc-fairy tale_",
            "misc-gothic_Horror_Horror & Dark_Gothic",
            "misc-grunge_",
            "misc-horror_Horror_Horror & Dark",
            "misc-kawaii_",
            "misc-lovecraftian_Surrealism_Horror & Dark_Horror",
            "misc-macabre_Horror_Horror & Dark_Gothic",
            "misc-manga_",
            "misc-metropolis_",
            "misc-minimalist_",
            "misc-monochrome_",
            "misc-nautical_",
            "misc-space_",
            "misc-stained glass_",
            "misc-techwear fashion_",
            "misc-tribal_",
            "misc-zentangle_",
            "papercraft-collage_",
            "papercraft-flat papercut_",
            "papercraft-kirigami_",
            "papercraft-paper mache_",
            "papercraft-paper quilling_",
            "papercraft-papercut collage_",
            "papercraft-papercut shadow box_",
            "papercraft-stacked papercut_",
            "papercraft-thick layered papercut_",
            "photo-alien_",
            "photo-film noir_",
            "photo-hdr_",
            "photo-long exposure_",
            "photo-neon noir_",
            "photo-silhouette_",
            "photo-tilt-shift_",
            "Vintage Travel Poster_",
            "Prismatic_",
            "Glamorous Portrait_",
            "Scientific Illustration_",
            "Stained Glass_",
            "Art Deco Architecture_",
            "Pop Surrealism_",
            "Vintage Tattoo Flash_",
            "Sports Card_",
            "Stop Motion_",
            "Bauhaus Design_",
            "Propaganda Poster_",
            "Art Nouveau_",
            "Glitch Art_",
            "Blueprint_",
            "Woodblock Print_",
            "Neon Lighting_",
            "Bas-Relief Sculpture_",
            "_",
            "Art Nouveau Poster_",
            "Vector Portrait_",
            "Egyptian Hieroglyphs_",
            "Movie Storyboard_",
            "Disney Animation_",
            "Studio Ghibli_",
            "Aardman_",
            "Xilam_",
            "Ankama_",
            "Mixer_",
            "LAIKA_",
            "Toei_",
            "UPA_",
            "Vaporwave Retro_",
            "Central American_",
            "Vogue Cover_",
            "Satanic_Occult_Horror_Horror & Dark",
            "Fortune Telling_",
            "Southern Gothic_Horror_Horror & Dark_Gothic",
            "Nouveau Circus_",
            "Rococo Interior_",
            "Mexican Skull Art_",
            "Psychedelic Pop Art_",
            "Voodoo_",
            "Vintage Baseball_",
            "Circus Performer_",
            "Tiki Bar_",
            "Apr\u00e8s-Ski_",
            "Kawaii Fashion_",
            "Tropical Luau_",
            "Voodoo Doll_",
            "Mardi Gras_",
            "Figurine Shelf_",
            "Terrarium_",
            "Tiki Cocktail_",
            "Cottagecore Fashion_",
            "Vintage Tattoo Print_",
            "Boudoir Photography_",
            "Vaporwave_",
            "Terrarium Bottle_",
            "Vaporwave City__Location",
            "Kawaii Character_",
            "Vintage Halloween Costume_",
            "Cassette Futurism_",
            "Punk Poster_",
            "Luchador_",
            "Tiki Totem_",
            "Cassette J-Card_",
            "Prairie Dress_",
            "Lounge Singer_",
            "Gongfu Tea_",
            "Aztec Calendar_",
            "Cassette Graphics_",
            "Laser Grid_",
            "Giant Robot_",
            "Vaporwave Sunset_",
            "Fortune Teller_",
            "Steampunk Portrait_",
            "Scary Stories_",
            "Woodblock Art_",
            "Vintage Halloween Mask_",
            "Grunge Flyer_",
            "Voodoo Altar_",
            "Cassette Collage_",
            "Tropical Cocktail_",
            "Vintage Robot Toy_",
            "Scary Pumpkin_",
            "Pinup_",
            "Tarot Cards_",
            "Ghibli_",
            "Egyptology_",
            "Battle_",
            "Tarot_",
            "Steampunk_",
            "Ancient Maya_",
            "Nautical_",
            "Bomber Jacket_",
            "Samurai_",
            "American Traditional_",
            "Propaganda Art_",
            "Glitchcore_",
            "Vaporgram_",
            "Desaturated_",
            "Dieselpunk_",
            "My Little Pony_",
            "Ballet_",
            "Galactic_",
            "Streamer Bike_",
            "Tropical Hotel_",
            "Tiki Mug_",
            "Neon Racer_",
            "Luau Fire Dancer_",
            "Day of the Dead_",
            "Sideshow Poster_",
            "Vaporwave Graphics_",
            "Voodoo Ceremony_",
            "Blacklight Poster_",
            "Teslapunk_",
            "Cassette Bedroom_",
            "Tropical Bathroom_",
            "Voodoo Shop_",
            "Vintage Halloween_",
            "Goth Boudoir_Horror_Horror & Dark_Gothic",
            "Island Luau__Location",
            "Tiki Outdoor Shower_",
            "Black Velvet Painting_",
            "Tattoo Print_",
            "Addams Family_Portraiture_Horror_Horror & Dark",
            "Cassette Wall_",
            "Neon Tokyo_",
            "Voodoo Queen_",
            "Surf Wood Sign_",
            "Haunted Carnival_",
            "Tiki Idol_",
            "Mall Goth_",
            "Volcano Lair_",
            "Graffiti Style_",
            "Impressionism_",
            "Fauvism_Uncategorized",
            "Dada_Uncategorized",
            "Cubism_Still Life",
            "_",
            "_",
            "_",
            "Op Art_",
            "_",
            "Conceptual Art_Uncategorized",
            "Folk Art_",
            "Naive Art_Sci-Fi_Architecture",
            "Outsider Art_",
            "_",
            "Suprematism_Uncategorized",
            "De Stijl_Uncategorized",
            "Bauhaus_Architecture",
            "Constructivism_Uncategorized",
            "Futurism_Uncategorized",
            "Rayonism_Uncategorized",
            "Vorticism_Uncategorized",
            "Orphism_Uncategorized",
            "Der Blaue Reiter_",
            "Die Br\u00fccke_Graffiti",
            "Ashcan School_",
            "Hudson River School_Nature_Landscape_Location",
            "Luminism_Nature_Landscape",
            "Tonalism_Nature_Landscape",
            "Barbizon School_Nature_Landscape",
            "Academic Art_Uncategorized",
            "Rococo_",
            "Neoclassicism_Uncategorized",
            "Romanticism_Nature",
            "_",
            "_",
            "Plein Air_Nature_Landscape",
            "Pre-Raphaelite_Uncategorized",
            "Art Informel_Uncategorized",
            "Hard-edge Painting_Uncategorized",
            "_",
            "_",
            "Post-Painterly Abstraction_Uncategorized",
            "Kinetic Art_",
            "Land Art_Fantasy_Nature_Sculpture_Landscape",
            "Performance Art_Uncategorized",
            "Installation Art_Uncategorized",
            "Video Art_",
            "Digital Art_",
            "New Media Art_",
            "Street Art_Sci-Fi",
            "Stuckism_",
            "Lowbrow Art_",
            "Photomontage_Photography",
            "Diorama_Uncategorized",
            "Assemblage_",
            "Combine Painting_Sci-Fi_Still Life",
            "Happenings_Uncategorized",
            "Mail Art_Uncategorized",
            "Neo-Dada_",
            "Neo-Expressionism_",
            "Bad Painting_",
            "Graffiti_",
            "Traditional Figurative Art_Sculpture",
            "Classical Realism_",
            "Contemporary Realism_",
            "Hyperrealism_",
            "_",
            "New Objectivity_",
            "Precisionism_Architecture_Nature_Landscape",
            "Figurative Expressionism_",
            "Neue Wilde_Uncategorized",
            "New Perpendicular art_Uncategorized",
            "New Simplicity_Architecture",
            "Remodernism_",
            "Norwegian romantic nationalism_Nature_Landscape",
            "_",
            "Propaganda Poster Art_Uncategorized",
            "Heroic Realism_Sculpture_Culture",
            "Na\u00efve Art_Uncategorized",
            "Art Brut_",
            "Neo-primitivism_Still Life",
            "Visionary Art_Uncategorized",
            "Intuitive Art_",
            "Pseudorealism_",
            "Radical Realism_Still Life",
            "Critical Realism_",
            "Neue Sachlichkeit_",
            "Regionalism_Uncategorized",
            "Abstract Expressionism_Uncategorized",
            "Later European abstraction_Uncategorized",
            "Tachisme_",
            "Abstraction-Cr\u00e9ation_Uncategorized",
            "Gutai_",
            "British Pop Art_",
            "Situationist International_",
            "Lettrism_Portraiture",
            "St Ives School_",
            "Transavantgarde_",
            "Transgressive Art_",
            "Neo Pop_",
            "Kitsch Movement_",
            "Virtual Art_",
            "Internet Art_",
            "_",
            "Information Art_",
            "Systems Art_",
            "Bio Art_",
            "Genetic Art_",
            "Sustainable Art_",
            "_",
            "Video Games_",
            "Machinima_",
            "Artware_",
            "Demoscene_",
            "Math Art_",
            "Data Art_",
            "Plotter Art_",
            "VR Art_",
            "AR Art_",
            "Circuit Bending_Uncategorized",
            "DIY Art_",
            "Maker Culture_Culture",
            "Self-taught Art_Fantasy",
            "Neo-Pop_Pop Culture_Culture",
            "Young British Artists_Portraiture",
            "Appropriation_Culture",
            "Algorithmic Art_Uncategorized",
            "Use these to populate the JSON instead._",
            "Under Honolulu_Architecture_Location",
            "Sub Juneau_Architecture_Location",
            "Underground Lansing_Culture_Location",
            "Sub Topeka_Architecture_Folk Art_Location",
            "Under St. Paul_Architecture_Location",
            "Sub Jackson_Folk Art_Location",
            "Underground Columbus_Retro_Location",
            "Sub Indianapolis_Uncategorized_Location",
            "Under Omaha_Culture_Location",
            "Under Oklahoma City_Architecture_Location",
            "Sub Des Moines_Architecture_Location",
            "Underground Wichita_Folk Art_Location",
            "Under Fargo_Architecture_Location",
            "Sub Bozeman_Architecture_Location",
            "Underground Anchorage_Architecture_Location",
            "Sub Casper_Uncategorized_Location",
            "Sub Cheyenne_Uncategorized_Location",
            "Underground Portland_Sci-Fi_Location",
            "Under Eugene_Folk Art_Location",
            "Sub Salem_Sci-Fi_Culture_Location",
            "Underground Seattle_Uncategorized_Location",
            "Sub Spokane_Architecture_Location",
            "Sub Tacoma_Architecture_Culture_Retro_Location",
            "Under Sacramento_Uncategorized_Location",
            "Sub Oakland_Sci-Fi_Culture_Location",
            "Underground San Jose_Uncategorized_Location",
            "Sub Fresno_Architecture_Nature_Landscape_Location",
            "Under Bakersfield_Uncategorized_Location",
            "Sub Anaheim_Fantasy_Location",
            "Underground Riverside_Culture_Location",
            "Sub Santa Ana_Sci-Fi_Culture_Location",
            "Underground Chula Vista_Uncategorized_Location",
            "Sub Irvine_Uncategorized_Location",
            "Sub Fontana_Culture_Location",
            "Sub Moreno Valley_Uncategorized_Location",
            "Underground Huntington Beach_Architecture_Culture_Location",
            "Sub Glendale_Uncategorized_Location",
            "Sub Santa Clarita_Uncategorized_Location",
            "Sub Garden Grove_Architecture_Location",
            "Sub Rancho Cucamonga_Architecture_Lifestyle_Location",
            "Sub Ontario_Uncategorized_Location",
            "Sub Lancaster_Sci-Fi_Retro_Location",
            "Sub Palmdale_Sci-Fi_Location",
            "Sub Pomona_Retro_Location",
            "Sub Torrance_Sci-Fi_Location",
            "Sub Pasadena_Uncategorized_Location",
            "Sub Orange_Retro_Location",
            "Sub Roseville_Architecture_Location",
            "Sub Thousand Oaks_Uncategorized_Location",
            "Sub Concord_Uncategorized_Location",
            "Sub Simi Valley_Pop Culture_Culture_Retro_Location",
            "Sub Victorville_Uncategorized_Location",
            "Sub El Monte_Sci-Fi_Location",
            "Sub Berkeley_Retro_Location",
            "Sub Downey_Sci-Fi_Location",
            "Sub Costa Mesa_Culture_Location",
            "Sub Inglewood_Sci-Fi_Pop Culture_Culture_Location",
            "Sub Carlsbad_Architecture_Culture_Location",
            "Sub Temecula_Lifestyle_Location",
            "Under Istanbul_Architecture_Location",
            "Under Tallahassee_Sci-Fi_Retro_Architecture_Location",
            "Under Albany_Architecture_Surrealism_Location",
            "Under Trenton_Uncategorized_Location",
            "Under Hartford_Architecture_Location",
            "Underground Salt Lake City_Architecture_Location",
            "Under Juneau_Architecture_Location",
            "Underground Helena_Architecture_Location",
            "Sub Carson City_Architecture_Location",
            "Under Santa Fe_Uncategorized_Location",
            "Underground Lincoln_Uncategorized_Location",
            "Sub Denver_Uncategorized_Location",
            "Under Bismarck_Uncategorized_Location",
            "Sub Pierre_Uncategorized_Location",
            "Underground Austin_Uncategorized_Location",
            "Sub Atlanta_Uncategorized_Location",
            "Under Jackson_Folk Art_Location",
            "Sub Montgomery_Uncategorized_Location",
            "Underground Little Rock_Uncategorized_Location",
            "Sub Frankfort_Uncategorized_Location",
            "Under Nashville_Uncategorized_Location",
            "Sub Columbia_Architecture_Culture_Location",
            "Sub Richmond_Architecture_Location",
            "Under Charleston_Architecture_Location",
            "Sub Dover_Uncategorized_Location",
            "Underground Springfield_Folk Art_Location",
            "Sub Annapolis_Sculpture_Location",
            "Sub Providence_Uncategorized_Location",
            "Underground Concord_Culture_Location",
            "Sub Montpelier_Sculpture_Location",
            "Sub Jefferson City_Architecture_Folk Art_Location",
            "Crystal Caverns_Architecture",
            "Nova Alexandria_Architecture_Culture",
            "Steamtown_Architecture_Retro",
            "Technotopia_Architecture_Nature",
            "Clockwork City_Architecture_Location",
            "Under London_Architecture_Location",
            "Dwarvenholm_Uncategorized",
            "Sanctuary_Uncategorized",
            "Shangri-La_Uncategorized",
            "Mime City_Architecture_Location",
            "Elfheim_Architecture_Fantasy",
            "Midgard_Architecture",
            "Musica_Architecture_Culture",
            "Caveopolis_Lifestyle",
            "Mage City_Architecture_Fantasy_Location",
            "Steampunk City_Architecture_Location",
            "Under Chicago_Architecture_Portraiture_Culture_Retro_Location",
            "Neotokyo_Sci-Fi_Architecture",
            "Leviathan_Architecture",
            "Underground Rome_Architecture_Location",
            "Zion_Culture",
            "Hackersville_Architecture",
            "Ghoul City_Architecture_Location",
            "Elven City_Architecture_Location",
            "Dwarvendom_Uncategorized",
            "Lost Vegas_Architecture",
            "Under Paris_Uncategorized_Location",
            "Steeltown_Architecture",
            "Tech City_Architecture_Nature_Location",
            "Under Montreal_Architecture_Location",
            "Brightwater_Nature",
            "Butcher Shop_Still Life",
            "Macabre Memento Mori_Still Life",
            "Torture Device_Uncategorized",
            "Scary Stories at Campfire_Uncategorized",
            "Memento Mori_Uncategorized",
            "Hate Crime_Uncategorized",
            "sai-base_Uncategorized",
            "sai-enhance_Uncategorized",
            "Art Nouveau_Uncategorized",
            "_",
            "Aardman_Uncategorized",
            "Impressionism_Uncategorized",
            "Fauvism (1)_Uncategorized",
            "Dada (1)_Uncategorized",
            "Cubism (1)_Still Life",
            "_",
            "Surrealism (1)_Surrealism",
            "Symbolism (1)_Uncategorized",
            "Minimalism (1)_Uncategorized",
            "Conceptual Art (1)_Uncategorized",
            "Naive Art (1)_Sci-Fi_Architecture",
            "_",
            "Suprematism (1)_Uncategorized",
            "De Stijl (1)_Uncategorized",
            "Constructivism (1)_Uncategorized",
            "Futurism (1)_Uncategorized",
            "Rayonism (1)_Uncategorized",
            "Vorticism (1)_Uncategorized",
            "Orphism (1)_Uncategorized",
            "Der Blaue Reiter_Uncategorized",
            "Die Br\u00fccke (1)_Graffiti",
            "Ashcan School_Architecture",
            "Hudson River School (1)_Nature_Landscape_Location",
            "Luminism (1)_Nature_Landscape",
            "Tonalism (1)_Nature_Landscape",
            "Barbizon School (1)_Nature_Landscape",
            "Academic Art (1)_Uncategorized",
            "Rococo_Uncategorized",
            "Neoclassicism (1)_Uncategorized",
            "Romanticism (1)_Nature",
            "Realism (1)_Uncategorized",
            "_",
            "Plein Air (1)_Nature_Landscape",
            "Pre-Raphaelite (1)_Uncategorized",
            "_",
            "Hard-edge Painting (1)_Uncategorized",
            "Geometric Abstraction (1)_Uncategorized",
            "_",
            "Post-Painterly Abstraction (1)_Uncategorized",
            "Kinetic Art_Fantasy_Sculpture",
            "Performance Art (1)_Uncategorized",
            "Installation Art (1)_Uncategorized",
            "Street Art (1)_Sci-Fi",
            "Photomontage (1)_Photography",
            "Diorama (1)_Uncategorized",
            "Assemblage_Sculpture_Still Life",
            "Combine Painting (1)_Sci-Fi_Still Life",
            "Happenings (1)_Uncategorized",
            "Mail Art (1)_Uncategorized",
            "Bad Painting_Uncategorized",
            "Graffiti_Sci-Fi_Graffiti_Folk Art_Architecture",
            "Traditional Figurative Art (1)_Sculpture",
            "Contemporary Realism_Architecture",
            "_",
            "New Objectivity_Uncategorized",
            "Precisionism (1)_Architecture_Nature_Landscape",
            "New Perpendicular art (1)_Uncategorized",
            "New Simplicity (1)_Architecture",
            "Norwegian romantic nationalism (1)_Nature_Landscape",
            "_",
            "Propaganda Poster Art (1)_Uncategorized",
            "Heroic Realism (1)_Sculpture_Culture",
            "Art Brut_Uncategorized",
            "Neue Sachlichkeit_Portraiture",
            "Regionalism (1)_Uncategorized",
            "Abstract Expressionism (1)_Uncategorized",
            "Tachisme_Uncategorized",
            "Abstraction-Cr\u00e9ation (1)_Uncategorized",
            "British Pop Art_Pop Culture_Culture",
            "Lettrism (1)_Portraiture",
            "_",
            "Systems Art_Uncategorized",
            "Machinima_Uncategorized",
            "Artware_Sci-Fi_Digital Media",
            "Math Art_Uncategorized",
            "VR Art_Sci-Fi",
            "AR Art_Digital Media",
            "Circuit Bending (1)_Uncategorized",
            "DIY Art_Uncategorized",
            "Maker Culture (1)_Culture",
            "Young British Artists (1)_Portraiture",
            "Algorithmic Art (1)_Uncategorized",
            "Use these to populate the JSON instead._Uncategorized",
            "Fauvism (2)_Uncategorized",
            "Dada (2)_Uncategorized",
            "Cubism (2)_Still Life",
            "Expressionism Variant_Uncategorized",
            "Surrealism (2)_Surrealism",
            "Symbolism (2)_Uncategorized",
            "Pop Art Variant_Culture",
            "Op Art Variant_Uncategorized",
            "Minimalism (2)_Uncategorized",
            "Conceptual Art (2)_Uncategorized",
            "Naive Art (2)_Sci-Fi_Architecture",
            "Outsider Art Variant_Uncategorized",
            "Photorealism Variant_Photography",
            "Suprematism (2)_Uncategorized",
            "De Stijl (2)_Uncategorized",
            "Bauhaus (2)_Architecture",
            "Constructivism (2)_Uncategorized",
            "Futurism (2)_Uncategorized",
            "Rayonism (2)_Uncategorized",
            "Vorticism (2)_Uncategorized",
            "Orphism (2)_Uncategorized",
            "Die Br\u00fccke (2)_Graffiti",
            "Hudson River School (2)_Nature_Landscape_Location",
            "Luminism (2)_Nature_Landscape",
            "Tonalism (2)_Nature_Landscape",
            "Barbizon School (2)_Nature_Landscape",
            "Academic Art (2)_Uncategorized",
            "Neoclassicism (2)_Uncategorized",
            "Romanticism (2)_Nature",
            "Realism (2)_Uncategorized",
            "Social Realism Variant_Uncategorized",
            "Plein Air (2)_Nature_Landscape",
            "Pre-Raphaelite (2)_Uncategorized",
            "Art Informel (2)_Uncategorized",
            "Hard-edge Painting (2)_Uncategorized",
            "Geometric Abstraction (2)_Uncategorized",
            "Lyrical Abstraction Variant_Uncategorized",
            "Post-Painterly Abstraction (2)_Uncategorized",
            "Land Art (2)_Fantasy_Nature_Sculpture_Landscape",
            "Performance Art (2)_Uncategorized",
            "Installation Art (2)_Uncategorized",
            "Video Art Variant_Uncategorized",
            "Digital Art Variant_Digital Media",
            "New Media Art Variant_Uncategorized",
            "Glitch Art Variant_Digital Media",
            "Street Art (2)_Sci-Fi",
            "Photomontage (2)_Photography",
            "Diorama (2)_Uncategorized",
            "Combine Painting (2)_Sci-Fi_Still Life",
            "Happenings (2)_Uncategorized",
            "Mail Art (2)_Uncategorized",
            "Neo-Dada Variant_Uncategorized",
            "Neo-Expressionism Variant_Uncategorized",
            "Bad Painting Variant_Uncategorized",
            "Graffiti Variant_Sci-Fi_Graffiti",
            "Traditional Figurative Art (2)_Sculpture",
            "Classical Realism Variant_Portraiture",
            "Contemporary Realism Variant_Uncategorized",
            "Hyperrealism Variant_Uncategorized",
            "Magic Realism Variant_Surrealism",
            "Precisionism (2)_Architecture_Nature_Landscape",
            "Figurative Expressionism Variant_Uncategorized",
            "Neue Wilde (2)_Uncategorized",
            "New Perpendicular art (2)_Uncategorized",
            "New Simplicity (2)_Architecture",
            "Norwegian romantic nationalism (2)_Nature_Landscape",
            "Socialist Realism Variant_Uncategorized",
            "Propaganda Poster Art (2)_Uncategorized",
            "Heroic Realism (2)_Sculpture_Culture",
            "Na\u00efve Art (2)_Uncategorized",
            "Art Brut Variant_Uncategorized",
            "Neo-primitivism (2)_Still Life",
            "Visionary Art (2)_Uncategorized",
            "Intuitive Art Variant_Uncategorized",
            "Pseudorealism Variant_Uncategorized",
            "Radical Realism (2)_Still Life",
            "Critical Realism Variant_Uncategorized",
            "New Objectivity Variant_Uncategorized",
            "Abstract Expressionism (2)_Uncategorized",
            "Later European abstraction (2)_Uncategorized",
            "Tachisme Variant_Uncategorized",
            "Abstraction-Cr\u00e9ation (2)_Uncategorized",
            "Gutai Variant_Sci-Fi_Event",
            "British Pop Art Variant_Pop Culture_Culture",
            "Lettrism (2)_Portraiture",
            "Neo Pop Variant_Pop Culture_Culture",
            "Kitsch Movement Variant_Culture",
            "Internet Art Variant_Digital Media",
            "Computer Art Variant_Digital Media",
            "Information Art Variant_Uncategorized",
            "Systems Art Variant_Uncategorized",
            "Bio Art Variant_Uncategorized",
            "Genetic Art Variant_Uncategorized",
            "Interactive Art Variant_Uncategorized",
            "Demoscene Variant_Animation",
            "Math Art Variant_Uncategorized",
            "Circuit Bending (2)_Uncategorized",
            "Maker Culture (2)_Culture",
            "Self-taught Art (2)_Fantasy",
            "Neo-Pop (2)_Pop Culture_Culture",
            "Regionalism (2)_Uncategorized",
            "Young British Artists (2)_Portraiture",
            "Appropriation (2)_Culture",
            "Algorithmic Art (2)_Uncategorized",
            "    Lynching_Uncategorized",
            "    Occult Sacrifice_Occult",
            "    Medical Oddities_Uncategorized",
            "none byMood",
            "Aggressive",
            "Calm",
            "Chaotic",
            "Energetic",
            "Happy",
            "Mysterious",
            "Relaxed",
            "Romantic",
            "Sad",
            "Serene",
            "Ethereal Tranquility",
            "Enigmatic Wonder",
            "Whimsical Delight",
            "Melancholic Reflection",
            "Dark, Brooding Atmosphere",
            "Joyful Celebration",
            "Surreal Euphoria",
            "Hushed Reverence",
            "Tense, Suspenseful Ambiance",
            "Dreamy Serenity",
            "Chaos and Discord",
            "Enchanted Whispers",
            "Frenetic Energy",
            "Eternal Twilight",
            "Abyssal Silence",
            "Gothic Elegance",
            "Bittersweet Nostalgia",
            "Spectral Whispers",
            "Celestial Harmony",
            "Dystopian Desolation",
            "none byOriginal",
            "none byQuantumRealism",
            "Ethereal Particle Dance",
            "Wavefunction Symphony",
            "Observer's Paradox",
            "Schrodinger's Garden",
            "Entangled Realities",
            "Quantum Mirage",
            "Cubist Uncertainty",
            "Quantum Kaleidoscope",
            "Quantum Dreamscape",
            "Quantum Chromatic Symphony",
            "Quantum Reflections",
            "Quantum Fractal Realities",
            "Quantum Tesseract Enigma",
            "Quantum Portal Nexus",
            "Quantum Interference Symphony",
            "Quantum Constellation Ballet",
            "Quantum Labyrinth",
            "Quantum Mirage Forest",
            "Quantum Alchemical Fusion",
            "none bySports",
            "Olympic Triumph",
            "Extreme Adventure Sports",
            "Soccer World Cup Glory",
            "Basketball Slam Dunk",
            "Surfing the Perfect Wave",
            "Winter Olympics Figure Skating",
            "Motorsport Grand Prix",
            "Tennis Championship Match",
            "Martial Arts Mastery",
            "Equestrian Elegance",
            "Baseball Grand Slam",
            "Swimming World Record",
            "Golf Masters Victory",
            "Rock Climbing Ascent",
            "Gymnastics Perfect Routine",
            "Rugby World Cup Glory",
            "Skiing Downhill Thrill",
            "Cycling Tour de France Victory",
            "Synchronized Swimming Beauty",
            "Archery Bullseye Accuracy",
            "Horse Racing Derby Finish",
            "Triathlon Triumph",
            "Table Tennis Rally",
            "Martial Arts Sparring",
            "Wrestling Championship Pin",
            "Badminton Smash",
            "Fencing Duel",
            "Sailing Regatta Victory",
            "Cricket Century Celebration",
            "Rhythmic Gymnastics Grace",
            "none bySteamPunkRealism",
            "Clockwork Menagerie",
            "Cogged Dreamscape",
            "Steam-Fueled Dreams",
            "Chrono-Mystical Carnival",
            "Mechanical Menagerie Ballroom",
            "Steampunk Alchemical Garden",
            "Clockwork Cityscape Dreams",
            "Steam-Driven Enigma",
            "Cogwheel Wonderland",
            "Surreal Airship Odyssey",
            "Neo-Victorian Dreamscape",
            "Steampunk Surrealist Ball",
            "Clockwork Wonderland",
            "Steampunk Astral Odyssey",
            "Mechanical Menagerie Parade",
            "Quantum Steam-Driven Enigma",
            "Steampunk Dreamscape Architect",
            "Steampunk Explorer's Dreams",
            "none byStreet",
            "Urban Graffiti Art",
            "City Street Market",
            "Street Performers' Showcase",
            "Neon-lit Nightlife",
            "Street Food Delight",
            "Street Fashion Runway",
            "Street Skateboarding Session",
            "Street Art Mural Festival",
            "Street Photography Icon",
            "Street Protest Rally",
            "Cityscape at Dusk",
            "Street Vendors in Marrakech",
            "Urban Park Skateboarding",
            "Street Musicians' Jam Session",
            "Street Art Gallery Opening",
            "City Biking Commute",
            "Urban Rooftop Party",
            "Street Fashion Boutique",
            "Street Market Mosaic",
            "City Transportation Hub",
            "Street Carnival Celebration",
            "Street Mural Collaboration",
            "Urban Street Basketball Game",
            "Street Fashion Show Extravaganza",
            "Street Food Truck Fiesta",
            "City Street Art Scavenger Hunt",
            "Street Carnival Parade",
            "Street Bazaar Browsing",
            "Urban Street Art Battle",
            "Street Jazz Performance",
            "none bySubject",
            "Animal",
            "Art",
            "Building",
            "Child",
            "Female",
            "Food",
            "Male",
            "Nature",
            "Technology",
            "Vehicle",
            "none bySurrealism",
            "A Parisian Caf\u00e9 Scene",
            "Cafe Terrace at Night",
            "The Clockwork Dreamscape",
            "The Melting Clocks of Dali's Vision",
            "The Mirrored Masks of Identity",
            "The Endless Staircase Ascent",
            "The Floating Islands of Imagination",
            "The Eyes in the Sky",
            "The Rain of Upside-Down Umbrellas",
            "The Fish in the Desert Mirage",
            "The Doorways to Unknown Realms",
            "The Symphony of Disjointed Melodies",
            "The Desert of Mirrors",
            "The Carousel of Forgotten Dreams",
            "The Library of Whispering Pages",
            "The Symphony of Broken Instruments",
            "The Mirrored Faces of Identity",
            "The Endless Corridor of Mirrors",
            "The Clockwork Circus of Time",
            "The Rain of Falling Stars",
            "The Underwater Forest of Whispers",
            "The Chessboard of Surreal Strategies",
            "none byThemes",
            "Abstract",
            "Aerial",
            "Fashion",
            "Landscape",
            "Macro",
            "Portrait",
            "Sports",
            "Street",
            "Wedding",
            "Wildlife",
            "none byTimeofDay",
            "Afternoon",
            "BlueHour",
            "Evening",
            "Midday",
            "Morning",
            "Night",
            "Sunrise",
            "Sunset",
            "Twilight",
            "Golden Hour",
            "Midnight Reverie",
            "Twilight Serenity",
            "Noonday Radiance",
            "Dawn's Awakening",
            "Dusk's Embrace",
            "Midday Hustle",
            "Starlit Silence",
            "Afternoon Lull",
            "Moonlit Dream",
            "Misty Morning Hush",
            "Midnight Dance",
            "Noontime Reverberation",
            "Twilight's Whispers",
            "High Noon Blaze",
            "Dawn's Promise",
            "Eerie Midnight",
            "Afternoon Bliss",
            "Moonlit Reflection",
            "Daybreak's Hope",
            "none byWildlife",
            "African Safari Adventure",
            "Arctic Wildlife Encounter",
            "Underwater Coral Reef Wonderland",
            "Amazon Rainforest Biodiversity",
            "Savannah Wildlife Spectacle",
            "Australian Outback Encounter",
            "Deep Sea Discovery",
            "North American Wilderness Serenity",
            "Tropical Rainforest Canopy",
            "African Elephant Migration",
            "Antarctic Penguin Parade",
            "Majestic Mountain Wildlife",
            "Jungle Canopy Adventure",
            "African Big Five Safari",
            "Arctic Foxes in the Snow",
            "Australian Reef Life",
            "African Cheetah Sprint",
            "Amazon River Wildlife",
            "Boreal Forest Moose Encounter",
            "Gorilla Family in the Jungle",
            "Alaskan Brown Bear Fishing",
            "African Serengeti Migration",
            "Coral Polyp Microcosm",
            "Bengal Tiger in the Jungle",
            "Humpback Whale Breach",
            "Red-Eyed Tree Frog in the Rainforest",
            "Siberian Tiger Stalking Prey",
            "Monarch Butterfly Migration",
            "African Nile Crocodile Basking",
            "Honeybee Hive Activity",
            "Viking_Knotwork",
            "Viking_Runic_Inscription",
            "Viking_Animal_Motifs",
            "Viking_Ship_Design",
            "Viking_Metalwork",
            "Viking_Warrior_Illustration",
            "Viking_Artifacts",
            "Viking_Rune_Stone",
            "Viking_Shield_Design",
            "Viking_Mythology_Illustration",
            "Viking_Jewelry",
            "Viking_Axe_Engraving",
            "Viking_Runestone_Replica",
            "Viking_Ship_Illustration",
            "Viking_Wood_Carving",
            "Viking_Warrior_Helmet",
            "Viking_Dragon_Art",
            "Viking_Boat_Decoration",
            "Viking_Warrior_Sculpture",
            "Viking_Textile_Pattern",
            "Viking_Raid_Illustration",
            "Viking_Warship_Painting",
            "Viking_Artist_Sketch",
            "Viking_Metalwork_Pattern",
            "Viking_Mythical_Beast",
            "Viking_Armor_Design",
            "Viking_Ship_Model",
            "Viking_Folk_Art",
            "Nationalist_Landscape_Painting",
            "Folklore_Illustration",
            "Historical_Epic_Painting",
            "National_Costume_Design",
            "Cultural_Heritage_Sculpture",
            "Nationalist_Mural_Art",
            "Patriotic_Poetry",
            "Revolutionary_Hero_Portrait",
            "National_Literature_Illustration",
            "Monumental_Historical_Mural",
            "National_Landscape_Photography",
            "Cultural_Heritage_Preservation",
            "Patriotic_Song_Composition",
            "National_Identity_Poetry",
            "Revivalist_Architecture",
            "Mythical_Hero_Statue",
            "Folkloric_Dance_Performance",
            "Historical_Narrative_Painting",
            "National_Flag_Design",
            "Patriotic_Literary_Work",
            "Nationalist_Music_Composition",
            "Revolutionary_Battle_Scene",
            "National_Folk_Music_Performance",
            "Cultural_History_Book_Illustration",
            "National_Heroic_Poem",
            "Cultural_Revival_Sculpture",
            "National_Landscape_Painting",
            "Traditional_Folk_Art_Design",
            "Patriotic_Poet_Portrait",
            "Nordic_Minimalism",
            "Arctic_Landscape_Photography",
            "Nordic_Abstract_Expressionism",
            "Nordic_Urban_Street_Art",
            "Contemporary_S\u00e1mi_Art",
            "Nordic_Nature_Installation",
            "Nordic_Design_Furniture",
            "Contemporary_Nordic_Portraiture",
            "Nordic_Light_Installation",
            "Nordic_Ceramics_Design",
            "Nordic_Digital_Illustration",
            "Contemporary_Nordic_Fashion",
            "Nordic_Urban_Landscape_Painting",
            "Nordic_Textile_Art",
            "Contemporary_Nordic_Sculpture",
            "Nordic_Wildlife_Photography",
            "Nordic_Ecological_Art",
            "Contemporary_Nordic_Installation",
            "Nordic_Film_Art",
            "Nordic_Architectural_Design",
            "Contemporary_Nordic_Collage",
            "Nordic_Abstract_Photography",
            "Nordic_Contemporary_Calligraphy",
            "Contemporary_Nordic_Digital_Art",
            "Nordic_Street_Photography",
            "Nordic_Graffiti_Art",
            "Contemporary_Nordic_Abstract_Sculpture",
            "Nordic_Contemporary_Painting",
            "Nordic_Mixed_Media_Art",
            "Icelandic_Landscape_Painting",
            "Contemporary_Icelandic_Sculpture",
            "Icelandic_Arctic_Photography",
            "Icelandic_Mythology_Illustration",
            "Contemporary_Icelandic_Textile_Art",
            "Icelandic_Digital_Art",
            "Contemporary_Icelandic_Fashion",
            "Icelandic_Urban_Street_Art",
            "Icelandic_Contemporary_Portraiture",
            "Icelandic_Ecological_Art",
            "Contemporary_Icelandic_Light_Installation",
            "Icelandic_Design_Furniture",
            "Icelandic_Contemporary_Poetry",
            "Contemporary_Icelandic_Installation",
            "Icelandic_Wildlife_Photography",
            "Icelandic_Contemporary_Calligraphy",
            "Contemporary_Icelandic_Digital_Illustration",
            "Icelandic_Street_Photography",
            "Contemporary_Icelandic_Graffiti_Art",
            "Icelandic_Contemporary_Abstract_Sculpture",
            "Icelandic_Contemporary_Painting",
            "Icelandic_Mixed_Media_Art",
            "Contemporary_Icelandic_Abstract_Photography",
            "Icelandic_Contemporary_Architectural_Design",
            "Icelandic_Contemporary_Collage",
            "Contemporary_Icelandic_Folk_Music_Performance",
            "Icelandic_Contemporary_Literature_Illustration",
            "Icelandic_Contemporary_Artist_Sketch"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      },
      "optional": {
        "auto_select_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "auto_refresh": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerAll",
    "display_name": "Prompt Styler All",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyArtist": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byArtists",
            "A.J.Casson",
            "Aaron Douglas",
            "Aaron Horkey",
            "Aaron Jasinski",
            "Aaron Siskind",
            "Abbott Fuller Graves",
            "Abbott Handerson Thayer",
            "Abdel Hadi Al Gazzar",
            "Abed Abdi",
            "Abigail Larson",
            "Abraham Mintchine",
            "Abraham Pether",
            "Abram Efimovich Arkhipov",
            "Adam Elsheimer",
            "Adam Hughes",
            "Adam Martinakis",
            "Adam Paquette",
            "Adi Granov",
            "Adolf Hir\u00e9my-Hirschl",
            "Adolph Gottlieb",
            "Adolph Menzel",
            "Adonna Khare",
            "Adriaen van Ostade",
            "Adriaen van Outrecht",
            "Adrian Donoghue",
            "Adrian Ghenie",
            "Adrian Paul Allinson",
            "Adrian Smith",
            "Adrian Tomine",
            "Adrianus Eversen",
            "Afarin Sajedi",
            "Affandi",
            "Aggi Erguna",
            "Agnes Cecile",
            "Agnes Lawrence Pelton",
            "Agnes Martin",
            "Agostino Arrivabene",
            "Agostino Tassi",
            "Ai Weiwei",
            "Ai Yazawa",
            "Akihiko Yoshida",
            "Akira Toriyama",
            "Akos Major",
            "Akseli Gallen-Kallela",
            "Al Capp",
            "Al Feldstein",
            "Al Williamson",
            "Alain Laboile",
            "Alan Bean",
            "Alan Davis",
            "Alan Kenny",
            "Alan Lee",
            "Alan Moore",
            "Alan Parry",
            "Alan Schaller",
            "Alasdair McLellan",
            "Alastair Magnaldo",
            "Alayna Lemmer",
            "Albert Benois",
            "Albert Bierstadt",
            "Albert Bloch",
            "Albert Dubois-Pillet",
            "Albert Eckhout",
            "Albert Edelfelt",
            "Albert Gleizes",
            "Albert Goodwin",
            "Albert Joseph Moore",
            "Albert Koetsier",
            "Albert Kotin",
            "Albert Lynch",
            "Albert Marquet",
            "Albert Pinkham Ryder",
            "Albert Robida",
            "Albert Servaes",
            "Albert Tucker",
            "Albert Watson",
            "Alberto Biasi",
            "Alberto Burri",
            "Alberto Giacometti",
            "Alberto Magnelli",
            "Alberto Seveso",
            "Alberto Sughi",
            "Alberto Vargas",
            "Albrecht Anker",
            "Albrecht Durer",
            "Alec Soth",
            "Alejandro Burdisio",
            "Alejandro Jodorowsky",
            "Aleksey Savrasov",
            "Aleksi Briclot",
            "Alena Aenami",
            "Alessandro Allori",
            "Alessandro Barbucci",
            "Alessandro Gottardo",
            "Alessio Albi",
            "Alex Alemany",
            "Alex Andreev",
            "Alex Colville",
            "Alex Figini",
            "Alex Garant",
            "Alex Grey",
            "Alex Gross",
            "Alex Hirsch",
            "Alex Horley",
            "Alex Howitt",
            "Alex Katz",
            "Alex Maleev",
            "Alex Petruk",
            "Alex Prager",
            "Alex Ross",
            "Alex Russell Flint",
            "Alex Schomburg",
            "Alex Timmermans",
            "Alex Toth",
            "Alexander Archipenko",
            "Alexander Bogen",
            "Alexander Fedosav",
            "Alexander Jansson",
            "Alexander Kanoldt",
            "Alexander McQueen",
            "Alexander Millar",
            "Alexander Milne Calder",
            "Alexandr Averin",
            "Alexandre Antigna",
            "Alexandre Benois",
            "Alexandre Cabanel",
            "Alexandre Calame",
            "Alexandre Jacovleff",
            "Alexandre-E\u0301variste Fragonard",
            "Alexei Harlamoff",
            "Alexej von Jawlensky",
            "Alexey Kurbatov",
            "Alexis Gritchenko",
            "Alfred Augustus Glendening",
            "Alfred Cheney Johnston",
            "Alfred Eisenstaedt",
            "Alfred Guillou",
            "Alfred Heber Hutty",
            "Alfred Henry Maurer",
            "Alfred Kelsner",
            "Alfred Kubin",
            "Alfred Munnings",
            "Alfred Parsons",
            "Alfred Sisley",
            "Alfred Stevens",
            "Alfredo Jaar",
            "Algernon Blackwood",
            "Alice Bailly",
            "Alice Neel",
            "Alice Pasquini",
            "Alice Rahon",
            "Alison Bechdel",
            "Aliza Razell",
            "Allen Williams",
            "Allie Brosh",
            "Allison Bechdel",
            "Alma Thomas",
            "Alois Arnegger",
            "Alphonse Mucha",
            "Alphonse Osbert",
            "Alpo Jaakola",
            "Alson Skinner Clark",
            "Alvar Aalto",
            "Alvaro Siza",
            "Alvin Langdon Coburn",
            "Alyssa Monks",
            "Amadou Opa Bathily",
            "Amanda Clark",
            "Amanda Sage",
            "Amandine Van Ray",
            "Ambrosius Benson",
            "Ambrosius Bosschaert",
            "Amedee Ozenfant",
            "Amedeo Modigliani",
            "Amiet Cuno",
            "Aminollah Rezaei",
            "Amir Zand",
            "Amy Earles",
            "Amy Judd",
            "Amy Sillman",
            "Am\u00e9d\u00e9e Guillemin",
            "Anato Finnstark",
            "Anatoly Metlan",
            "Anders Zorn",
            "Ando Fuchs",
            "Andre De Dienes",
            "Andre Derain",
            "Andre Kertesz",
            "Andre Kohn",
            "Andre Norton",
            "Andre-Charles Boulle",
            "Andrea Kowch",
            "Andrea Mantegna",
            "Andreas Achenbach",
            "Andreas Franke",
            "Andreas Gursky",
            "Andreas Levers",
            "Andreas Rocha",
            "Andreas Vesalius",
            "Andrei Markin",
            "Andrew Atroshenko",
            "Andrew Ferez",
            "Andrew Macara",
            "Andrew Robinson",
            "Andrew Whem",
            "Andrew Wyeth",
            "Andrey Remnev",
            "Andre\u0301i Arinouchkine",
            "Android Jones",
            "Andrzej Sykut",
            "Andr\u00e9 Lhote",
            "Andr\u00e9 Masson",
            "Andy Fairhurst",
            "Andy Goldsworthy",
            "Andy Kehoe",
            "Andy Warhol",
            "Angela Barrett",
            "Angela Sung",
            "Angus McKie",
            "Anish Kapoor",
            "Anita Malfatti",
            "Anja Millen",
            "Anja Percival",
            "Anka Zhuravleva",
            "Ann Stookey",
            "Anna Ancher",
            "Anna Bocek",
            "Anna Dittmann",
            "Anna Razumovskaya",
            "Anna and Elena Balbusso",
            "Anne Bachelier",
            "Anne Brigman",
            "Anne Dewailly",
            "Anne Mccaffrey",
            "Anne Packard",
            "Anne Rothenstein",
            "Anne Stokes",
            "Anne Sudworth",
            "Anne Truitt",
            "Anne-Louis Girodet",
            "Anni Albers",
            "Annibale Carracci",
            "Annick Bouvattier",
            "Annie Soudain",
            "Annie Swynnerton",
            "Ansel Adams",
            "Anselm Kiefer",
            "Antanas Sutkus",
            "Anthony Gerace",
            "Anthony Thieme",
            "Anthony van Dyck",
            "Anto Carte",
            "Antoine Blanchard",
            "Antoine Verney-Carron",
            "Anton Corbijn",
            "Anton Domenico Gabbiani",
            "Anton Fadeev",
            "Anton Mauve",
            "Anton Otto Fischer",
            "Anton Pieck",
            "Anton Raphael Mengs",
            "Anton Semenov",
            "Antonello da Messina",
            "Antoni Gaudi",
            "Antonio Canova",
            "Antonio Donghi",
            "Antonio J. Manzanedo",
            "Antonio Mancini",
            "Antonio Mora",
            "Antonio Roybal",
            "Antony Gormley",
            "Apollinary Vasnetsov",
            "Apollonia Saintclair",
            "Aquirax Uno",
            "Archibald Thorburn",
            "Aries Moross",
            "Arik Brauer",
            "Aristarkh Lentulov",
            "Aristide Maillol",
            "Arkhyp Kuindzhi",
            "Armand Guillaumin",
            "Armand Point",
            "Arnold Bocklin",
            "Arnold B\u00f6cklin",
            "Arnold Schoenberg",
            "Aron Demetz",
            "Aron Wiesenfeld",
            "Arshile Gorky",
            "Art Fitzpatrick",
            "Art Frahm",
            "Art Spiegelman",
            "Artem Chebokha",
            "Artemisia Gentileschi",
            "Artgerm",
            "Arthur Adams",
            "Arthur Boyd",
            "Arthur Dove",
            "Arthur Garfield Dove",
            "Arthur Hacker",
            "Arthur Hughes",
            "Arthur Lismer",
            "Arthur Rackham",
            "Arthur Radebaugh",
            "Arthur Sarnoff",
            "Arthur Stanley Wilkinson",
            "Arthur Streeton",
            "Arthur Tress",
            "Arthur Wardle",
            "Artur Bordalo",
            "Arturo Souto",
            "Artus Scheiner",
            "Ary Scheffer",
            "Asaf Hanuka",
            "Asger Jorn",
            "Asher Brown Durand",
            "Ashley Willerton",
            "Ashley Wood",
            "Atay Ghailan",
            "Atelier Olschinsky",
            "Atey Ghailan",
            "Aubrey Beardsley",
            "Audrey Kawasaki",
            "August Friedrich Schenck",
            "August Macke",
            "August Sander",
            "August von Pettenkofen",
            "Auguste Herbin",
            "Auguste Mambour",
            "Auguste Toulmouche",
            "Augustus Edwin Mulready",
            "Augustus Jansson",
            "Augustus John",
            "Austin Osman Spare",
            "Axel T\u00f6rneman",
            "Ayami Kojima",
            "Ayan Nag",
            "Aykut Aydogdu",
            "Bakemono Zukushi",
            "Balthus",
            "Banksy",
            "Barbara Hepworth",
            "Barbara Kruger",
            "Barbara Stauffacher Solomon",
            "Barbara Takenaga",
            "Barclay Shaw",
            "Barkley L. Hendricks",
            "Barnett Newman",
            "Barry McGee",
            "Barry Windsor Smith",
            "Bart Sears",
            "Barthel Bruyn the Elder",
            "Barthel Bruyn the Younger",
            "Bartolome Esteban Murillo",
            "Basil Gogos",
            "Bastien Lecouffe-Deharme",
            "Bayard Wu",
            "Beatrix Potter",
            "Beauford Delaney",
            "Becky Cloonan",
            "Beeple",
            "Bella Kotak",
            "Ben Aronson",
            "Ben Goossens",
            "Ben Hatke",
            "Ben Nicholson",
            "Ben Quilty",
            "Ben Shahn",
            "Ben Templesmith",
            "Ben Wooten",
            "Benedetto Caliari",
            "Benedick Bana",
            "Benoit B. Mandelbrot",
            "Berend Strik",
            "Bernard Aubertin",
            "Bernard Buffet",
            "Bernardo Bellotto",
            "Bernardo Strozzi",
            "Berndnaut Smilde",
            "Bernie Wrightson",
            "Bert Hardy",
            "Bert Stern",
            "Berthe Morisot",
            "Bertil Nilsson",
            "Bess Hamiti",
            "Beth Conklin",
            "Bettina Rheims",
            "Bhupen Khakhar",
            "Bijou Karman",
            "Bill Brandt",
            "Bill Brauer",
            "Bill Carman",
            "Bill Durgin",
            "Bill Gekas",
            "Bill Henson",
            "Bill Jacklin",
            "Bill Medcalf",
            "Bill Sienkiewicz",
            "Bill Traylor",
            "Bill Viola",
            "Bill Ward",
            "Bill Watterson",
            "Billy Childish",
            "Bjarke Ingels",
            "Blek Le Rat",
            "Bo Bartlett",
            "Bo Chen",
            "Bob Byerley",
            "Bob Eggleton",
            "Bob Ross",
            "Bojan Jevtic",
            "Bojan Koturanovic",
            "Bordalo II",
            "Boris Grigoriev",
            "Boris Groh",
            "Boris Kustodiev",
            "Boris Vallejo",
            "Botero",
            "Brad Kunkle",
            "Brad Rigney",
            "Brandon Mably",
            "Brandon Woelfel",
            "Brenda Zlamany",
            "Brent Cotton",
            "Brent Heighton",
            "Brett Weston",
            "Brett Whiteley",
            "Brian Bolland",
            "Brian Despain",
            "Brian Froud",
            "Brian K. Vaughan",
            "Brian Kesinger",
            "Brian M. Viveros",
            "Brian Mashburn",
            "Brian Oldham",
            "Brian Stelfreeze",
            "Brian Sum",
            "Briana Mora",
            "Brice Marden",
            "Bridget Bate Tichenor",
            "Bridget Riley",
            "Briton Rivi\u00e8re",
            "Brooke DiDonato",
            "Brooke Shaden",
            "Brothers Grimm",
            "Brothers Hildebrandt",
            "Bruce Coville",
            "Bruce Munro",
            "Bruce Nauman",
            "Bruce Pennington",
            "Bruce Timm",
            "Bruno Catalano",
            "Bruno Munari",
            "Bruno Walpoth",
            "Bryan Hitch",
            "Butcher Billy",
            "C. R. W. Nevinson",
            "Cagnaccio Di San Pietro",
            "Camille Corot",
            "Camille Pissarro",
            "Camille Walala",
            "Canaletto",
            "Candido Portinari",
            "Carel Willink",
            "Carl Barks",
            "Carl Gustav Carus",
            "Carl Holsoe",
            "Carl Larsson",
            "Carl Spitzweg",
            "Carlo Crivelli",
            "Carlos Schwabe",
            "Carmen Saldana",
            "Carne Griffiths",
            "Carrie Mae Weems",
            "Casey Weldon",
            "Caspar David Friedrich",
            "Cassius Marcellus Coolidge",
            "Catherine Hyde",
            "Catrin Welz-Stein",
            "Cedric Peyravernay",
            "Chad Knight",
            "Chantal Joffe",
            "Charles Addams",
            "Charles Angrand",
            "Charles Blackman",
            "Charles Camoin",
            "Charles Dana Gibson",
            "Charles E. Burchfield",
            "Charles Gwathmey",
            "Charles Le Brun",
            "Charles Liu",
            "Charles Schridde",
            "Charles Schulz",
            "Charles Spencelayh",
            "Charles Vess",
            "Charles-Francois Daubigny",
            "Charlie Bowater",
            "Charline von Heyl",
            "Cha\u00efm Soutine",
            "Chen Zhen",
            "Chesley Bonestell",
            "Chiharu Shiota",
            "Ching Yeh",
            "Chip Zdarsky",
            "Chris Claremont",
            "Chris Cunningham",
            "Chris Foss",
            "Chris Leib",
            "Chris Mars",
            "Chris Moore",
            "Chris Ofili",
            "Chris Saunders",
            "Chris Turnham",
            "Chris Uminga",
            "Chris Van Allsburg",
            "Chris Ware",
            "Christian Dimitrov",
            "Christian Grajewski",
            "Christophe Vacher",
            "Christopher Balaskas",
            "Christopher Jin Baron",
            "Chuck Close",
            "Cicely Mary Barker",
            "Cindy Sherman",
            "Claire Hummel",
            "Clara Miller Burd",
            "Clara Peeters",
            "Clarence Holbrook Carter",
            "Claude Cahun",
            "Claude Monet",
            "Clemens Ascher",
            "Cliff Chiang",
            "Clive Madgwick",
            "Clovis Trouille",
            "Clyde Caldwell",
            "Coby Whitmore",
            "Coles Phillips",
            "Colin Geller",
            "Conor Harrington",
            "Conrad Roset",
            "Constant Permeke",
            "Constantin Brancusi",
            "Cory Arcangel",
            "Cory Loftis",
            "Costa Dvorezky",
            "Craig Davison",
            "Craig Mullins",
            "Craig Wylie",
            "Craola",
            "Cuno Amiet",
            "Cyril Rolando",
            "Dain Yoon",
            "Dale Chihuly",
            "Damien Hirst",
            "Dan Flavin",
            "Dan Mumford",
            "Dan Witz",
            "Daniel Buren",
            "Daniel Clowes",
            "Daniel Garber",
            "Daniel Merriam",
            "Daniel Ridgway Knight",
            "Daniela Uhlig",
            "Daniele Afferni",
            "Dante Gabriel Rossetti",
            "Dao Le Trong",
            "Dariusz Zawadzki",
            "Darren Bacon",
            "Darwyn Cooke",
            "Daryl Mandryk",
            "Dave Dorman",
            "Dave Gibbons",
            "Dave McKean",
            "David A. Hardy",
            "David Aja",
            "David B. Mattingly",
            "David Bomberg",
            "David Bowie",
            "David Burdeny",
            "David Burliuk",
            "David Choe",
            "David Driskell",
            "David Finch",
            "David Hockney",
            "David Inshaw",
            "David Ligare",
            "David Lynch",
            "David McClellan",
            "David Palumbo",
            "David Shrigley",
            "David Spriggs",
            "David Teniers the Younger",
            "David Wiesner",
            "Dean Cornwell",
            "Dean Ellis",
            "Death Burger",
            "Debbie Criswell",
            "Derek Boshier",
            "Desmond Morris",
            "Diane Arbus",
            "Diane Dillon",
            "Dick Bickenbach",
            "Diego Dayer",
            "Diego Rivera",
            "Diego Vel\u00e1zquez",
            "Dmitry Kustanovich",
            "Don Bluth",
            "Don Maitz",
            "Donald Judd",
            "Donato Giancola",
            "Dora Carrington",
            "Dora Maar",
            "Dorina Costras",
            "Dorothea Tanning",
            "Dorothy Lathrop",
            "Doug Chiang",
            "Douglas Smith",
            "Dr. Seuss",
            "Dunkelbunt Hundertwasser\u201d",
            "Dustin Nguyen",
            "Duy Huynh",
            "E. H. Shepard",
            "Earl Norem",
            "Ed Benedict",
            "Ed Binkley",
            "Ed Brubaker",
            "Ed Emshwiller",
            "Ed Freeman",
            "Ed Mell",
            "Ed Roth",
            "Eddie Campbell",
            "Eddie Mendoza",
            "Edgar Degas",
            "Edmund Dulac",
            "Edmund Leighton",
            "Edouard Manet",
            "Edouard Riou",
            "Eduardo Kobra",
            "Edvard Munch",
            "Edward Atkinson Hornel",
            "Edward Burne-Jones",
            "Edward Gorey",
            "Edward Hopper",
            "Edward John Poynter",
            "Edward Julius Detmold",
            "Edward Lear",
            "Edward Robert Hughes",
            "Edward Steichen",
            "Edward Weston",
            "Edwin Austin Abbey",
            "Edwin Deakin",
            "Edwin Henry Landseer",
            "Eero Saarinen",
            "Egon Schiele",
            "Eiichiro Oda",
            "Eileen Agar",
            "El Greco",
            "Elaine de Kooning",
            "Eleanor Vere Boyle",
            "Elenore Abbott",
            "Eliott Lilly",
            "Elizabeth Gadd",
            "Elizabeth Shippen Green",
            "Ellen Gallagher",
            "Ellen Jewett",
            "Elliot Lilly",
            "Elsa Beskow",
            "Emil Alzamora",
            "Emil Ferris",
            "Emil Nolde",
            "Emilia Wilk",
            "Emily Kame Kngwarreye",
            "Emma Geary",
            "Emmanuel Shiu",
            "Emmanuelle Moureaux",
            "Emory Douglas",
            "Enki Bilal",
            "Ephraim Moses Lilien",
            "Eric Fischl",
            "Eric Wallis",
            "Eric Zener",
            "Erich Heckel",
            "Erin Hanson",
            "Ernest Crichlow",
            "Ernie Barnes",
            "Ernst Fuchs",
            "Ernst Haas",
            "Ernst Haeckel",
            "Ernst Ludwig Kirchner",
            "Esao Andrews",
            "Etel Adnan",
            "Ethan Van Sciver",
            "Etienne Hebinger",
            "Ettore Sottsass",
            "Ettore Tito",
            "Eugene Delacroix",
            "Eugene von Guerard",
            "Eug\u00e8ne Grasset",
            "Evelyn De Morgan",
            "Everett Raymond Kinstler",
            "Evgeni Gordiets",
            "Ewald R\u00fcbsamen",
            "Eyvind Earle",
            "F Scott Hess",
            "Fabian Perez",
            "Fabio Hurtado",
            "Fairfield Porter",
            "Faith 47",
            "Faith Ringgold",
            "Fang Lijun",
            "Farel Dalrymple",
            "Fenghua Zhong",
            "Ferdinand Hodler",
            "Ferdinand Knab",
            "Ferdinand Van Kessel",
            "Fernand Khnopff",
            "Fernand Toussaint",
            "Fernando Herenu",
            "Filip Hodas",
            "Filippino Lippi",
            "Filippo Balbi",
            "Flora Borsi",
            "Ford Madox Brown",
            "Francesca Woodman",
            "Francis Bacon",
            "Francis Coates Jones",
            "Francis Picabia",
            "Francisco De Goya",
            "Francisco Mart\u00edn",
            "Frank Auerbach",
            "Frank Frazetta",
            "Frank Gehry",
            "Frank Holl",
            "Frank Lloyd Wright",
            "Frank Miller",
            "Frank Stella",
            "Frank Tinsley",
            "Frank Xavier Leyendecker",
            "Franklin Booth",
            "Franz Marc",
            "Franz Sedlacek",
            "Franz Xaver Winterhalter",
            "Frederic Church",
            "Frederic Remington",
            "Frederick Lord Leighton",
            "Frederick McCubbin",
            "Frida Kahlo",
            "Frits Van den Berghe",
            "Gabriel Dawe",
            "Gabriele M\u00fcnter",
            "Gaetano Pesce",
            "Galan Pang",
            "Gareth Pugh",
            "Gary Larson",
            "Gaston Bussi\u00e8re",
            "Gediminas Pranckevicius",
            "Genndy Tartakovsky",
            "Geof Darrow",
            "Georg Jensen",
            "Georg Karl Pfahler",
            "George Ault",
            "George Cruikshank",
            "George Dionysus Ehret",
            "George Frederic Watts",
            "George French Angas",
            "George Grosz",
            "George Herriman",
            "George Inness",
            "George Lucas",
            "George Luks",
            "George Stubbs",
            "George Tooker",
            "Georges Rouault",
            "Georges Seurat",
            "Georges de La Tour",
            "Georgia O\u2019Keeffe",
            "Gerald Brom",
            "Gerda Wegener",
            "Gerhard Munthe",
            "Gerhard Richter",
            "Gertrude Abercrombie",
            "Giacomo Balla",
            "Gianluca Foli",
            "Gifford Beal",
            "Gil Elvgren",
            "Gilbert Stuart",
            "Giorgio De Chirico",
            "Giotto Di Bondone",
            "Giovanni Battista Bracelli",
            "Giovanni Battista Gaulli",
            "Giovanni Battista Piranesi",
            "Giovanni Battista Venanzi",
            "Giovanni da Udina",
            "Giuseppe Arcimboldo",
            "Giuseppe de Nittis",
            "Gjon Mili",
            "Glen Orbik",
            "Glenn Fabry",
            "Gloria Stoll Karn",
            "Go Nagai",
            "Gordon Browne",
            "Gordon Parks",
            "Goro Fujita",
            "Grace Cossington Smith",
            "Grace Popp",
            "Grandma Moses",
            "Grant Wood",
            "Grayson Perry",
            "Greg Girard",
            "Greg Hildebrandt",
            "Greg Rutkowski",
            "Greg Simkins",
            "Gregory Crewdson",
            "Guerrilla Girls",
            "Guido Borelli Da Caluso",
            "Guido Crepax",
            "Guillermo del Toro",
            "Guo Pei",
            "Gustaf Tenggren",
            "Gustav Klimt",
            "Gustave Buchet",
            "Gustave Courbet",
            "Gustave Dor\u00e9",
            "Gustave Moreau",
            "Gustave Van de Woestijne",
            "Guy Billout",
            "Gwen John",
            "Gwenda Morgan",
            "H. R. (Hans Ruedi) Giger",
            "H.P. Lovecraft",
            "Haddon Sundblom",
            "Hajime Sorayama",
            "Hal Foster",
            "Hale Woodruff",
            "Hanna-Barbera",
            "Hannah Hoch",
            "Hans Arnold",
            "Hans Baldung",
            "Hans Baluschek",
            "Hans Bellmer",
            "Harold McCauley",
            "Haroon Mirza",
            "Harriet Backer",
            "Harry Clarke",
            "Hasui Kawase",
            "Hayao Miyazaki",
            "Hayv Kahraman",
            "Hein Gorny",
            "Heinrich Kley",
            "Heinrich Lefler",
            "Heinz Edelmann",
            "Helen Frankenthaler",
            "Helene Knoop",
            "Helene Schjerfbeck",
            "Helio Oiticica",
            "Helmut Newton",
            "Hendrick Avercamp",
            "Hendrick Cornelisz Vroom",
            "Hendrick Goltzius",
            "Hendrik Kerstens",
            "Henri De Toulouse Lautrec",
            "Henri Fantin Latour",
            "Henri Matisse",
            "Henri Rousseau",
            "Henri-Edmond Cross",
            "Henriette Grindat",
            "Henry Asencio",
            "Henry Fuseli",
            "Henry Moore",
            "Henry Moret",
            "Henry Ossawa Tanner",
            "Henry Raleigh",
            "Herbert List",
            "Herve Groussin",
            "Herv\u00e9 Guibert",
            "Hethe Srodawa",
            "Hieronymus Bosch",
            "Hikari Shimoda",
            "Hilma AF Klint",
            "Hirohiko Araki",
            "Hiroshi Nagai",
            "Hiroshi Sugimoto",
            "Hiroshi Yoshida",
            "Honor C. Appleton",
            "Honor\u00e9 Daumier",
            "Hope Gangloff",
            "Horace Vernet",
            "Hou China",
            "Howard Chandler Christy",
            "Howard Finster",
            "Howard Hodgkin",
            "Howard Pyle",
            "Hsiao-Ron Cheng",
            "Hubert Robert",
            "Hugh Ferriss",
            "Hugh Kretschmer",
            "Hyacinthe Rigaud",
            "Iain Faulkner",
            "Ian McQue",
            "Ian Miller",
            "Ida Rentoul Outhwaite",
            "Igor Morski",
            "Igor Wolski",
            "Igor Zenin",
            "Ilya Kuvshinov",
            "Ilya Repin",
            "Incarcerated Jerkfaces",
            "Ingrid Baars",
            "Inio Asano",
            "Irma Stern",
            "Iryna Yermolova",
            "Isaac Cordal",
            "Isaac Levitan",
            "Ismail Inceoglu",
            "Issac Levitan",
            "Istvan Banyai",
            "It\u014d Jakuch\u016b",
            "Ivan Aivazovsky",
            "Ivan Albright",
            "Ivan Bilibin",
            "Ivan Shishkin",
            "Iwan Baan",
            "J. J. Grandville",
            "J.C. Leyendecker",
            "J.M.W. Turner",
            "JC Leyendecker",
            "Jacek Yerka",
            "Jack Butler Yeats",
            "Jack Davis",
            "Jack Gaughan",
            "Jack Kirby",
            "Jackson Pollock",
            "Jacob Hashimoto",
            "Jacob Lawrence",
            "Jacob van Ruisdael",
            "Jacques Le Moyne",
            "Jacques Nathan-Garamond",
            "Jake Parker",
            "Jakub R\u00f3\u017calski",
            "James Abbott McNeill Whistler",
            "James C Christensen",
            "James Ensor",
            "James Gilleard",
            "James Gillray",
            "James Gurney",
            "James Jean",
            "James Montgomery Flagg",
            "James Paick",
            "James Stokoe",
            "James Thomas Watts",
            "James Tissot",
            "James Turrell",
            "Jamie Baldridge",
            "Jamie Hawkesworth",
            "Jamie Hewlett",
            "Jamie McKelvie",
            "Jamini Roy",
            "Jan Brett",
            "Jan Luyken",
            "Jan Pietersz Saenredam",
            "Jan Van Eyck",
            "Jan van Kessel the Elder",
            "Jane Graverol",
            "Jane Newland",
            "Janek Sedlar",
            "Jasmine Becket-Griffith",
            "Jason A. Engle",
            "Jason Chan",
            "Jason Edmiston",
            "Jasper Johns",
            "Jaume Plensa",
            "Jaya Suberg",
            "Jean Arp",
            "Jean Auguste Dominique Ingres",
            "Jean Bourdichon",
            "Jean Delville",
            "Jean Dubuffet",
            "Jean Fouquet",
            "Jean Giraud",
            "Jean Jullien",
            "Jean Marc Nattier",
            "Jean Metzinger",
            "Jean Nouvel",
            "Jean-Antoine Watteau",
            "Jean-Baptiste Monge",
            "Jean-Fran\u00e7ois Millet",
            "Jean-Honor\u00e9 Fragonard",
            "Jean-Louis Prevost",
            "Jean-L\u00e9on G\u00e9r\u00f4me",
            "Jean-Michel Basquiat",
            "Jean-Paul Riopelle",
            "Jeanloup Sieff",
            "Jeannette Guichard-Bunel",
            "Jed Henry",
            "Jef Wu",
            "Jeff Easley",
            "Jeff Goldblum",
            "Jeff Kinney",
            "Jeff Koons",
            "Jeff Legg",
            "Jeff Lemire",
            "Jeff Simpson",
            "Jeff Wall",
            "Jeffrey Catherine Jones",
            "Jeffrey Smith art",
            "Jeffrey T. Larson",
            "Jenny Saville",
            "JennyBird Alcantara",
            "Jeremiah Ketner",
            "Jeremy Geddes",
            "Jeremy Lipking",
            "Jeremy Mann",
            "Jerry Pinkney",
            "Jerry Siegel",
            "Jerzy Duda-Gracz",
            "Jesper Ejsing",
            "Jessica Rossier",
            "Jessica Woulfe",
            "Jessie Willcox Smith",
            "Jhonen Vasquez",
            "Jillian Tamaki",
            "Jim Burns",
            "Jim Davis",
            "Jim Lee",
            "Jim Mahfood",
            "Jim Woodring",
            "Jimmy Ernst",
            "Jimmy Lawlor",
            "Joachim Brohm",
            "Joan Mir\u00f3",
            "Joan Tuset",
            "Joanna Kustra",
            "Joao Ruas",
            "Joaqu\u00edn Sorolla",
            "Joe Bowler",
            "Joe De Mers",
            "Joe Fenton",
            "Joe Jusko",
            "Joe Madureira",
            "Joe Webb",
            "Joel Meyerowitz",
            "Joel Sternfeld",
            "Joey Chou",
            "Johann Wolfgang von Goethe",
            "Johannes Itten",
            "Johannes Vermeer",
            "Johannes Voss",
            "Johfra Bosschart",
            "John Anster Fitzgerald",
            "John Atherton",
            "John Atkinson Grimshaw",
            "John Bauer",
            "John Berkey",
            "John Blanche",
            "John Bratby",
            "John Cassaday",
            "John Constable",
            "John Currin",
            "John Duncan",
            "John Frederick Kensett",
            "John French Sloan",
            "John Harris",
            "John Howe",
            "John Hoyland",
            "John James Audubon",
            "John Kenn Mortensen",
            "John La Farge",
            "John Lavery",
            "John Martin",
            "John Perceval",
            "John Philip Falter",
            "John Salminen",
            "John Singer Sargent",
            "John Singleton Copley",
            "John Stezaker",
            "John Totleben",
            "John Wayne Gacy",
            "John Whitcomb",
            "John Wilhelm",
            "John William Waterhouse",
            "Jon Klassen",
            "Jon McCoy",
            "Jon Whitcomb",
            "Jordan Grimmer",
            "Jorge Jacinto",
            "Josan Gonzalez",
            "Josef Albers",
            "Joseph Cornell",
            "Joseph Ducreux",
            "Joseph Lorusso",
            "Joseph Mallord William Turner",
            "Joseph Stella",
            "Josephine Wall",
            "Josh Kao",
            "Josh Keyes",
            "Jos\u00e9 Clemente Orozco",
            "Jovana Rikalo",
            "Juan Gris",
            "Judy Chicago",
            "Juergen Teller",
            "Jules Bastien-Lepage",
            "Julia Contacessi",
            "Julian Calle",
            "Juliana Huxtable",
            "Julie Bell",
            "Julie Blackmon",
            "Julie Mehretu",
            "Julien Delval",
            "Julius Horsthuis",
            "Jun Kaneko",
            "Junji Ito",
            "Justin Gerard",
            "J\u00f3zef Mehoffer",
            "Kadir Nelson",
            "Kaethe Butcher",
            "Kapwani Kiwanga",
            "Karel Appel",
            "Karel Thole",
            "Karen Wallis",
            "Karl Blossfeldt",
            "Karl Schmidt-Rottluff",
            "Karol Bak",
            "Kasia Nowowiejska",
            "Kate Beaton",
            "Kate Greenaway",
            "Kathryn Morris Trotter",
            "Kati Horna",
            "Katsuhiro Otomo",
            "Katsushika Hokusai",
            "Kawanabe Ky\u014dsai",
            "Kaws",
            "Kay Nielsen",
            "Kay Sage",
            "Kazimir Malevich",
            "Kazuo Koike",
            "Kehinde Wiley",
            "Keith Haring",
            "Keith Negley",
            "Keith Parkinson",
            "Kelly Freas",
            "Kelly Mckernan",
            "Kelly Sue Deconnick",
            "Kelly Vivanco",
            "Ken Fairclough",
            "Ken Kelly",
            "Ken Sugimori",
            "Kengo Kuma",
            "Kenne Gregoire",
            "Kent Monkman",
            "Kentaro Miura",
            "Kevin Gnutzmans",
            "Kevin Sloan",
            "Kieron Gillen",
            "Kilian Eng",
            "Kim Jung Gi",
            "Kim Keever",
            "Kitagawa Utamaro",
            "Kitty Lange Kielland",
            "Klaus Burgle",
            "Klaus Janson",
            "Klaus Wittmann",
            "Kobayashi Kiyochika",
            "Konstantin Korovin",
            "Konstantin Yuon",
            "Koson Ohara",
            "Krenz Cushart",
            "Kris Kuksi",
            "Kuang Hong",
            "Kunisada",
            "Kuno Veeber",
            "Kurzgesagt",
            "K\u00e4the Kollwitz",
            "L. Birge Harrison",
            "Lady Pink",
            "Larry Elmore",
            "Larry Poons",
            "Larry Sultan",
            "Laurel Burch",
            "Laurent Grasso",
            "Laurie Greasley",
            "Laurie Lipton",
            "Lawren Harris",
            "Lee Krasner",
            "Lee Madgwick",
            "Lee Quinones",
            "Leiji Matsumoto",
            "Leon Kossoff",
            "Leonardo Da Vinci",
            "Leonetto Cappiello",
            "Leonid Afremov",
            "Leonora Carrington",
            "Les Edwards",
            "Lesley Vance",
            "Leticia Gillett",
            "Liam Wong",
            "Liang Mark",
            "Lisa Frank",
            "Lisa Keene",
            "Liu Ye",
            "Liubov Sergeevna Popova",
            "Lois van Baarle",
            "Loish",
            "Lorena Alvarez G\u00f3mez",
            "Lorenz Hideyoshi",
            "Loretta Lux",
            "Lori Earley",
            "Louis Comfort Tiffany",
            "Louis Glackens",
            "Louis Icart",
            "Louis Janmot",
            "Louis Rhead",
            "Louis Wain",
            "Louise Bourgeois",
            "Louise Dahl-Wolfe",
            "Lovis Corinth",
            "Luca Boni",
            "Lucas Cranach the Elder",
            "Lucian Freud",
            "Lucy Madox Brown",
            "Ludwig Mies van der Rohe",
            "Luis Royo",
            "Luisa Russo",
            "Lynd Ward",
            "Lynda Barry",
            "Lynda Benglis",
            "Lyonel Feininger",
            "Lyubov Popova",
            "L\u00e1szl\u00f3 Moholy-Nagy",
            "M.C. Escher",
            "M.W. Kaluta",
            "Mab Graves",
            "Maginel Wright Enright Barney",
            "Magnus Enckell",
            "Makoto Shinkai",
            "Malcolm Liepke",
            "Man Ray",
            "Mandy Disher",
            "Mao Hamaguchi",
            "Marat Latypov",
            "Marc Chagall",
            "Marc Davis",
            "Marc Samson",
            "Marc Simonetti",
            "Marcin Jakubowski",
            "Marco Mazzoni",
            "Marcus Selmer",
            "Marek Okon",
            "Margaret Brundage",
            "Margaret Macdonald Mackintosh",
            "Margaret Mee",
            "Margaux Valonia",
            "Maria Kreyn",
            "Maria Pascual Alberich",
            "Maria Sibylla Merian",
            "Marianne North",
            "Marianne von Werefkin",
            "Marie Guillemine Benoist",
            "Marie Spartali Stillman",
            "Marina Abramovi\u0107",
            "Marius Borgeaud",
            "Marjane Satrapi",
            "Mark Arian",
            "Mark Briscoe",
            "Mark Brooks",
            "Mark Keathley",
            "Mark Lovett",
            "Mark Rothko",
            "Mark Ryden",
            "Mark Seliger",
            "Marsden Hartley",
            "Martin Ansin",
            "Martin Deschambault",
            "Martin John Heade",
            "Martin Johnson Heade",
            "Martin Kippenberger",
            "Martine Johanna",
            "Martiros Saryan",
            "Mary Anning",
            "Mary Blair",
            "Mary Cassatt",
            "Masaaki Sasamoto",
            "Masamune Shirow",
            "Mat Collishaw",
            "Mati Klarwein",
            "Matias Hannecke",
            "Matt Bors",
            "Matt Fraction",
            "Matt Groening",
            "Matthias Gr\u00fcnewald",
            "Matthias Jung",
            "Matti Suuronen",
            "Maurice Sendak",
            "Max Beckmann",
            "Max Dupain",
            "Max Ernst",
            "Max Pechstein",
            "Max Weber",
            "Maxfield Parrish",
            "Maximilian Pirner",
            "Maximilien Luce",
            "Maxwell Boas",
            "Mead Schaeffer",
            "Meryl McMaster",
            "Michael Carson",
            "Michael Cheval",
            "Michael Deforge",
            "Michael Heizer",
            "Michael Hutter",
            "Michael Parkes",
            "Michael Sowa",
            "Michael Whelan",
            "Michal Karcz",
            "Michal Lisowski",
            "Michelangelo Buonarroti",
            "Michelangelo Merisi Da Caravaggio",
            "Mickalene Thomas",
            "Miho Hirano",
            "Mikalojus Konstantinas Ciurlionis",
            "Mike Campau",
            "Mike Deodato",
            "Mike Mayhew",
            "Mike Mignola",
            "Mike Winkelmann (Beeple)",
            "Mike Worrall",
            "Mikhail Larionov",
            "Mikhail Nesterov",
            "Mikhail Vrubel",
            "Mikko Lagerstedt",
            "Milo Manara",
            "Milton Avery",
            "Milton Caniff",
            "Milton Glaser",
            "Miriam Schapiro",
            "Moebius",
            "Mordecai Ardon",
            "Mort Kunstler",
            "Muxxi",
            "M\u00e9ret Oppenheim",
            "NC Wyeth",
            "NHK Animation",
            "Nagel Patrick",
            "Nan Goldin",
            "Naoki Urasawa",
            "Naoko Takeuchi",
            "Naomi Okubo",
            "Naoto Hattori",
            "Natalia Goncharova",
            "Nathan Coley",
            "Nathan Wirth",
            "Neil Boyle",
            "Neil Welliver",
            "Nele Zirnite",
            "Ni Chuanjing",
            "Nicholas Roerich",
            "Nick Knight",
            "Nick Sharratt",
            "Nick Silva",
            "Nicola Samori",
            "Nicolas Delort",
            "Nicolas Mignard",
            "Nicolas de Stael",
            "Nikolai Ge",
            "Nikolina Petolas",
            "Noah Bradley",
            "Nobuyoshi Araki",
            "Noelle Stevenson",
            "Noriyoshi Ohrai",
            "Norman Ackroyd",
            "Norman Bluhm",
            "Norman Foster",
            "Norman Rockwell",
            "OSGEMEOS",
            "Octavio Ocampo",
            "Odd Nerdrum",
            "Odilon Redon",
            "Ogawa Kazumasa",
            "Ohara Koson",
            "Olafur Eliasson",
            "Oleg Oprisco",
            "Olga Skomorokhova",
            "Olivier Bonhomme",
            "Olivier Valsecchi",
            "Ollie Hoff",
            "Os Gemeos",
            "Osamu Tezuka",
            "Oskar Fischinger",
            "Oskar Kokoschka",
            "Ossip Zadkine",
            "Otto Dix",
            "Otto Marseus van Schrieck",
            "Pablo Picasso",
            "Pamela Colman Smith",
            "Paolo Roversi",
            "Paolo Veronese",
            "Pascal Blanche",
            "Pascale Campion",
            "Patrice Murciano",
            "Patricia Polacco",
            "Patrick Brown",
            "Patrick Caulfield",
            "Patrick Dougherty",
            "Patrick Heron",
            "Patrick Woodroffe",
            "Paul Barson",
            "Paul Chadeisson",
            "Paul Corfield",
            "Paul C\u00e9zanne",
            "Paul Delvaux",
            "Paul Gauguin",
            "Paul Gustav Fischer",
            "Paul Henry",
            "Paul Klee",
            "Paul Laffoley",
            "Paul Lehr",
            "Paul Ranson",
            "Paul Strand",
            "Paul Wonner",
            "Paula Modersohn-Becker",
            "Paulus Potter",
            "Pawel Kuczynski",
            "Peter Andrew Jones",
            "Peter Bagge",
            "Peter De Seve",
            "Peter Doig",
            "Peter Elson",
            "Peter Gric",
            "Peter Holme III",
            "Peter Howson",
            "Peter Kemp",
            "Peter Max",
            "Peter Milligan",
            "Peter Mohrbacher",
            "Peter Paul Rubens",
            "Peter Sculthorpe",
            "Peter Wileman",
            "Peter Zumthor",
            "Phil Foglio",
            "Phil Jimenez",
            "Phil Koch",
            "Phil Noto",
            "Philip Guston",
            "Philippe Druillet",
            "Philippe Parreno",
            "Pierre Bonnard",
            "Pierre Puvis de Chavannes",
            "Pierre-Auguste Renoir",
            "Piet Hein Eek",
            "Piet Mondrian",
            "Pieter Aertsen",
            "Pieter Bruegel The Elder",
            "Pieter Claesz",
            "Pieter Jansz Saenredam",
            "Pieter de Hooch",
            "Piotr Jab\u0142o\u0144ski",
            "Pipilotti Rist",
            "Pixar",
            "Pixar Concept Artists",
            "Posuka Demizu",
            "Qian Xuan",
            "Qing Han",
            "Quentin Blake",
            "Quentin Tarantino",
            "Quint Buchholz",
            "RETNA (Marquis Lewis)",
            "RHADS",
            "ROA",
            "Rafael Albuquerque",
            "Rafa\u0142 Olbi\u0144ski",
            "Raffaello Sanizo",
            "Raina Telgemeier",
            "Raja Ravi Varma",
            "Ralph Horsley",
            "Ralph McQuarrie",
            "Ralph Steadman",
            "Ramon Casas",
            "Randolph Caldecott",
            "Raphael",
            "Raphael Lacoste",
            "Raphaelle Peale",
            "Ravi Zupa",
            "Ray Caesar",
            "Ray Donley",
            "Raymond Briggs",
            "Raymond Duchamp-Villon",
            "Raymond Leech",
            "Raymond Swanland",
            "Rayner Alencar",
            "Rebeca Saray",
            "Rebecca Guay",
            "Rebecca Louise Law",
            "Rebecca Sugar",
            "Reginald Marsh",
            "Rembrandt Van Rijn",
            "Remedios Varo",
            "Rene Laloux",
            "Rene Magritte",
            "Ren\u00e9 Lalique",
            "Reylia Slaby",
            "Rich Davies",
            "Richard Burlet",
            "Richard Corben",
            "Richard Dadd",
            "Richard Deacon",
            "Richard Diebenkorn",
            "Richard Doyle",
            "Richard Eurich",
            "Richard Hamilton",
            "Richard Lindner",
            "Richard McGuire",
            "Richard Misrach",
            "Richard S. Johnson",
            "Richard Scarry",
            "Rick Guidice",
            "Rob Gonsalves",
            "Rob Liefeld",
            "Robby Cavanaugh",
            "Robert Antoine Pinchon",
            "Robert Chew",
            "Robert Childress",
            "Robert Crumb",
            "Robert Farkas",
            "Robert Hagan",
            "Robert Irwin",
            "Robert M Cunningham",
            "Robert Maguire",
            "Robert McCall",
            "Robert Mcginnis",
            "Robert Motherwell",
            "Robert Neubecker",
            "Robert Rauschenberg",
            "Robert S. Duncanson",
            "Robert Stivers",
            "Robert Vonnoh",
            "Robert William Hume",
            "Robert Williams",
            "Roberto Ferri",
            "Roberto Matta",
            "Roberto Parada",
            "Rockwell Kent",
            "Rodney Matthews",
            "Rodr\u00edguez ARS",
            "Roger Ballen",
            "Roger Dean",
            "Roger de La Fresnaye",
            "Rolf Armstrong",
            "Romero Britto",
            "Ron Mueck",
            "Ron Walotsky",
            "Ronald Balfour",
            "Ross Tran",
            "Roy Gjertson",
            "Roy Lichtenstein",
            "Roz Chast",
            "Ruan Jia",
            "Rudolf Freund",
            "Rufino Tamayo",
            "Rumiko Takahashi",
            "Russ Mills",
            "Russell Ayto",
            "Ruth Bernhard",
            "Ruxing Gao",
            "Ryan Hewett",
            "Ryan McGinley",
            "Ryan Stegman",
            "Ryohei Hase",
            "Sacha Goldberger",
            "Sailor Moon",
            "Sakai Ho\u0304itsu",
            "Sally Mann",
            "Salomon van Ruysdael",
            "Salvador Dali",
            "Sam Bosma",
            "Sam Kieth",
            "Sam Spratt",
            "Samuel Earp",
            "Samuel Melton Fisher",
            "Samuel and Joseph Newsom",
            "Sandra Chevrier",
            "Sandro Botticelli",
            "Sandy Skoglund",
            "Saner Edgar",
            "Sanford Kossin",
            "Sangyeob Park",
            "Santiago Calatrava",
            "Santiago Caruso",
            "Sara Wollfalk",
            "Sarah Lucas",
            "Satoshi Kon",
            "Saturno Butto",
            "Saul Bass",
            "Saul Steinberg",
            "Saul Tepper",
            "Scarlett Hooft Graafland",
            "Scott Brundage",
            "Scott Listfield",
            "Scott Naismith",
            "Sean Scully",
            "Sean Yoro",
            "Seb Mckinnon",
            "Sebastian Errazuriz",
            "Serge Marshennikov",
            "Shaddy Safadi",
            "Shaun Tan",
            "Shawn Coss",
            "Sheilah Beckett",
            "Shepard Fairey",
            "Sherree Valentine Daines",
            "Shin Jeongho",
            "Shinji Aramaki",
            "Shintaro Kago",
            "Shohei Otomo",
            "Shotaro Ishinomori",
            "Shusei Nagaoko",
            "Sidney Nolan",
            "Silvestro Lega",
            "Simeon Solomon",
            "Simon Birch",
            "Simon Bisley",
            "Simon Stalenhag",
            "Simone Martini",
            "Sir James Guthrie",
            "Siya Oum",
            "Skottie Young",
            "Slim Aarons",
            "Sofonisba Anguissola",
            "Sonia Delaunay",
            "Sou Fujimoto",
            "Sparth",
            "Squeak Carnwath",
            "Stan And Jan Berenstain",
            "Stan Lee",
            "Stanislav Poltavsky",
            "Stanis\u0142aw Szukalski",
            "Stanley Donwood",
            "Stephan Martiniere",
            "Stephen Gammell",
            "Stephen Oakley",
            "Stephen Shore",
            "Stevan Dohanos",
            "Steve Argyle",
            "Steve Dillon",
            "Steve Ditko",
            "Steve Henderson",
            "Steve Lieber",
            "Steve McCurry",
            "Steven Belledin",
            "Storm Thorgerson",
            "Stuart Davis",
            "Stuart Haygarth",
            "Stuart Immonen",
            "Studio Ghibli",
            "Sue Bryce",
            "Susan Luo",
            "Susan Seddon Boulet",
            "Sven Nordqvist",
            "Syd Mead",
            "Sydney Edmunds",
            "Sydney Prior Hall",
            "Tadao Ando",
            "Taiy\u014d Matsumoto",
            "Takashi Murakami",
            "Takato Yamamoto",
            "Takeshi Obata",
            "Tamara Lempicka",
            "Tan Zhi Hui",
            "Tara McPherson",
            "Tari Ma\u0301rk Da\u0301vid",
            "Tatsuro Kiuchi",
            "Ted Nasmith",
            "Ted Wallace",
            "Teophilus Tetteh",
            "Terada Katsuya",
            "Teresa Ramos",
            "Terry Oakes",
            "Terry Redlin",
            "Tex Avery",
            "Theo van Rysselberghe",
            "Thomas Allom",
            "Thomas Benjamin Kennington",
            "Thomas Blackshear",
            "Thomas Cole",
            "Thomas Dodd",
            "Thomas Eakins",
            "Thomas Gainsborough",
            "Thomas Moran",
            "Thomas Rowlandson",
            "Thomas Saliot",
            "Thomas Struth",
            "Thomas Visscher",
            "Thomas W Schaller",
            "Thornton Oakley",
            "Th\u00e9odore G\u00e9ricault",
            "Tibor Nagy",
            "Till Freitag",
            "Tim Burton",
            "Tim Doyle",
            "Tim Hildebrandt",
            "Tim White",
            "Tintoretto",
            "Titian",
            "Todd McFarlane",
            "Todd Schorr",
            "Toei Animations",
            "Tokujin Yoshioka",
            "Tom Bagshaw",
            "Tom Hammick",
            "Tom Lovell",
            "Tom Roberts",
            "Tom Thomson",
            "Tom Whalen",
            "Tomasz Alen Kopera",
            "Tomer Hanuka",
            "Tomi Ungerer",
            "Tomma Abts",
            "Tomokazu Matsuyama",
            "Tony DiTerlizzi",
            "Tony Moore",
            "Toshiharu Mizutani",
            "Toumas Korpi",
            "Tove Jansson",
            "Tracey Emin",
            "Travis Louie",
            "Tristan Eaton",
            "Tsutomu Nihei",
            "Tyler Edlin",
            "Tyler Shields",
            "Tyler West",
            "Ub Iwerks",
            "Uemura Shoen",
            "Ul Di Rico",
            "Umberto Boccioni",
            "Utagawa Hiroshige",
            "Valerie Hegarty",
            "Vhils",
            "Victo Ngai",
            "Victor Adame Minguez",
            "Victor Brauner",
            "Victor Medina",
            "Victor Moscoso",
            "Victor Nizovtsev",
            "Victor Vasarely",
            "Victoria Crowe",
            "Viktor Vasnetsov",
            "Viktoria Gavrilenko",
            "Vincent Di Fate",
            "Vincent Tanguay",
            "Vincent Van Gogh",
            "Virgil Finlay",
            "Vito Acconci",
            "Vittorio Matteo Corcos",
            "Vivian Maier",
            "Viviane Sassen",
            "Vivienne Westwood",
            "Vladimir Kush",
            "W. Heath Robinson",
            "W.W. Denslow",
            "Wadim Kashin",
            "Walt Disney",
            "Walt Kelly",
            "Walter Crane",
            "Walter Kim",
            "Walter Langley",
            "Walter Percy Day",
            "Wangechi Mutu",
            "Warren Ellis",
            "Warwick Globe",
            "Wassily Kandinsky",
            "Wayne Barlowe",
            "Wendy Froud",
            "Wes Anderson",
            "Wilfredo Lam",
            "Will Barnet",
            "Will Eisner",
            "Willem de Kooning",
            "Willem van Haecht",
            "William Blake",
            "William Eggleston",
            "William Etty",
            "William Gropper",
            "William Henry Hunt",
            "William Hogarth",
            "William Holman Hunt",
            "William Kentridge",
            "William Morris",
            "William S. Burroughs",
            "William Steig",
            "William Stout",
            "William Wegman",
            "William Zorach",
            "William-Adolphe Bouguereau",
            "Wim Crouwel",
            "Wim Wenders",
            "Winslow Homer",
            "Winsor McCay",
            "Wojciech Ostrycharz",
            "Wolf Kahn",
            "Wolfgang Tillmans",
            "Worthington Whittredge",
            "Yaacov Agam",
            "Yang Jialun",
            "Yanjun Cheng",
            "Yasuo Kuniyoshi",
            "Yasushi Nirasawa",
            "Yasutomo Oka",
            "Yayi Morales",
            "Yayoi Kusama",
            "Yiannis Moralis",
            "Yinka Shonibare",
            "Yohann Schepacz",
            "Yoji Shinkawa",
            "Yoshitaka Amano",
            "Yoshiyuki Tomino",
            "Yue Minjun",
            "Yuri Ivanovich Pimenov",
            "Yuumei",
            "Yves Klein",
            "Yves Tanguy",
            "Zack Snyder",
            "Zaha Hadid",
            "Zanele Muholi",
            "Zdzis\u0142aw Beksi\u0144ski",
            "Zeen Chin",
            "Zhang Kechun",
            "Zhelong Xu",
            "Zhichao Cai",
            "Zinaida Serebriakova",
            "teamLab",
            "theCHAMBA",
            "tokyogenso",
            "\u00c9lisabeth Vig\u00e9e Le Brun",
            "\u00c9mile Bernard",
            "\u00c9mile Gall\u00e9",
            "\u00c9tienne-Louis Boull\u00e9e",
            "\u201cFriedensreich Regentag"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyArtist",
    "display_name": "Prompt Styler Artist",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyCamera": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byCamera",
            "Canon EOS 90D",
            "Canon EOS M50",
            "Canon EOS M50 Mark II",
            "Canon EOS M6 Mark II",
            "Canon EOS R5",
            "Canon EOS R5 (Unique Variant)",
            "Canon EOS RP",
            "Canon EOS Rebel T8i",
            "Canon EOS Rebel T8i (Unique Variant)",
            "Canon EOS-1D X Mark III",
            "Canon EOS-1D X Mark III (Unique Dynamic Capture Variant)",
            "Canon EOS-1D X Mark III (Unique Dynamic Scenes Variant)",
            "Canon PowerShot G7 X Mark III",
            "Canon PowerShot G7 X Mark III (Unique Specific Variant)",
            "Canon PowerShot G7 X Mark III (Unique Variant)",
            "Fujifilm FinePix XP140",
            "Fujifilm GFX 100",
            "Fujifilm GFX 100 (Unique Specific Variant)",
            "Fujifilm GFX 100 (Unique Variant)",
            "Fujifilm GFX 50S",
            "Fujifilm Instax Mini 11",
            "Fujifilm X-E4",
            "Fujifilm X-E4 (Unique Variant)",
            "Fujifilm X-Pro3",
            "Fujifilm X-Pro3 (Unique Variant)",
            "Fujifilm X-T200",
            "Fujifilm X-T4",
            "Fujifilm X-T4 (Unique Strong Stabilization)",
            "Fujifilm X100V",
            "Fujifilm X100V (Unique Variant)",
            "GoPro HERO9 Black",
            "Hasselblad 907X 50C",
            "Hasselblad 907X 50C (Unique Large Format)",
            "Hasselblad H5D-50c",
            "Hasselblad H6D-100c",
            "Hasselblad X1D II 50C",
            "Hasselblad X1D II 50C (Unique High Resolution)",
            "Hasselblad XCD 4/45P",
            "Leica CL",
            "Leica M-D",
            "Leica M10 Monochrom",
            "Leica M10 Monochrom (Unique Variant)",
            "Leica M10-R",
            "Leica M11",
            "Leica Q-P",
            "Leica Q2",
            "Leica Q2 Monochrom",
            "Leica S3",
            "Leica SL2",
            "Leica SL2 (Unique Variant)",
            "Leica SL2-S",
            "Nikon Coolpix P950",
            "Nikon Coolpix P950 (Unique Variant)",
            "Nikon Coolpix W300",
            "Nikon D3500",
            "Nikon D6",
            "Nikon D780",
            "Nikon D850",
            "Nikon D850 (Unique High Resolution)",
            "Nikon Z5",
            "Nikon Z50",
            "Nikon Z50 (Unique Variant)",
            "Nikon Z6",
            "Nikon Z6 II",
            "Nikon Z7 II",
            "Nikon Z7 II (Unique Variant)",
            "Olympus E-M1X",
            "Olympus OM-D E-M1 Mark II",
            "Olympus OM-D E-M10 Mark IV",
            "Olympus OM-D E-M10 Mark IV (Unique Variant)",
            "Olympus OM-D E-M1X",
            "Olympus OM-D E-M5 Mark III",
            "Olympus OM-D E-M5 Mark III (Unique Variant)",
            "Olympus PEN E-PL10",
            "Olympus PEN-F",
            "Olympus PEN-F (Unique Specific Variant)",
            "Olympus PEN-F (Unique Variant)",
            "Olympus Tough TG-6",
            "Olympus Tough TG-6 (Unique Variant)",
            "Panasonic Lumix DC-G100",
            "Panasonic Lumix DC-G9",
            "Panasonic Lumix DC-GH5",
            "Panasonic Lumix DC-S1R",
            "Panasonic Lumix DC-S5",
            "Panasonic Lumix DC-S5 (Unique Variant)",
            "Panasonic Lumix DMC-FZ300",
            "Panasonic Lumix DMC-FZ300 (Unique Variant)",
            "Panasonic Lumix DMC-LX100 II",
            "Panasonic Lumix FZ1000 II",
            "Panasonic Lumix G100",
            "Panasonic Lumix GH5 II",
            "Panasonic Lumix S1",
            "Panasonic Lumix S1R",
            "Panasonic Lumix S5",
            "Pentax 645Z",
            "Pentax 645Z (Unique Large Format)",
            "Pentax K-1 Mark II",
            "Pentax KP",
            "Phase One XF IQ4 150MP",
            "Phase One XT",
            "Ricoh GR III",
            "Ricoh GR III (Unique Steady Focus)",
            "Ricoh GR III (Unique Variant)",
            "Ricoh Theta Z1",
            "Ricoh Theta Z1 (Unique Variant)",
            "Sigma SD Quattro H",
            "Sigma fp",
            "Sigma fp (Unique Specific Variant)",
            "Sigma fp (Unique Variant)",
            "Sigma fp L",
            "Sony A6000",
            "Sony A6400",
            "Sony A7R IV",
            "Sony A7S III",
            "Sony A9 II",
            "Sony Alpha 1",
            "Sony Alpha 1 (Unique Variant)",
            "Sony Alpha A7 III",
            "Sony Alpha A9 II",
            "Sony Cyber-shot DSC-RX10 IV",
            "Sony Cyber-shot DSC-W800",
            "Sony Cyber-shot RX100 VII",
            "Sony RX10 IV",
            "Sony RX100 VII",
            "Sony RX100 VII (Unique Fast Capture)",
            "Sony ZV-1"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyCamera",
    "display_name": "Prompt Styler Camera",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyCelticArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byCelticArt",
            "Celtic Knotwork Elegance",
            "Mystical Celtic Forest",
            "Celtic Mythological Saga",
            "Celtic Warrior's Journey",
            "Celtic Knotwork Mandala",
            "Celtic Music and Dance",
            "Celtic Nature Reverie",
            "Celtic Illuminated Manuscript",
            "Celtic Knotwork Wildlife",
            "Celtic Cross Reverence",
            "Celtic Dreamlike Enchantment",
            "Celtic Warrior Queen's Saga",
            "Celtic Knotwork Animal Totems",
            "Celtic Myths and Legends Tapestry",
            "Celtic Nature Spirits Invocation",
            "Celtic Spiral Labyrinth",
            "Celtic Festive Celebration",
            "Celtic Serpent Enigma",
            "Celtic Bard's Tale",
            "Celtic Tree of Life Reverence",
            "Celtic Elemental Elegance",
            "Celtic Druidic Ritual",
            "Celtic Warrior's Ancestral Legacy",
            "Celtic Ogham Script Artistry",
            "Celtic Faerie Enchantment",
            "Celtic Harpist's Melody",
            "Celtic Stone Circle Mystery",
            "Celtic Goddess Invocation",
            "Celtic Art Nouveau Fusion",
            "Celtic Traveler's Odyssey"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyCelticArt",
    "display_name": "Prompt Styler Celtic Art",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyComposition": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none by Composition",
            "Balance",
            "Framing",
            "LeadingLines",
            "NegativeSpace",
            "Pattern",
            "Perspective",
            "RuleOfThirds",
            "Simplicity",
            "Symmetry",
            "Texture"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyComposition",
    "display_name": "Prompt Styler Composition",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyContemporaryNordicArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byContemporaryNordicArt",
            "Nordic_Minimalism",
            "Arctic_Landscape_Photography",
            "Nordic_Abstract_Expressionism",
            "Nordic_Urban_Street_Art",
            "Contemporary_S\u00e1mi_Art",
            "Nordic_Nature_Installation",
            "Nordic_Design_Furniture",
            "Contemporary_Nordic_Portraiture",
            "Nordic_Light_Installation",
            "Nordic_Ceramics_Design",
            "Nordic_Digital_Illustration",
            "Contemporary_Nordic_Fashion",
            "Nordic_Urban_Landscape_Painting",
            "Nordic_Textile_Art",
            "Contemporary_Nordic_Sculpture",
            "Nordic_Wildlife_Photography",
            "Nordic_Ecological_Art",
            "Contemporary_Nordic_Installation",
            "Nordic_Film_Art",
            "Nordic_Architectural_Design",
            "Contemporary_Nordic_Collage",
            "Nordic_Abstract_Photography",
            "Nordic_Contemporary_Calligraphy",
            "Contemporary_Nordic_Digital_Art",
            "Nordic_Street_Photography",
            "Nordic_Graffiti_Art",
            "Contemporary_Nordic_Abstract_Sculpture",
            "Nordic_Contemporary_Painting",
            "Nordic_Mixed_Media_Art"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyContemporaryNordicArt",
    "display_name": "Prompt Styler Contemporary Nordic Art",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyCyberpunkSurrealism": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byCyberpunkSurrealism",
            "Neon Metropolis",
            "Biomechanical Dreamscape",
            "Cyberpunk Underwater Abyss",
            "Data Hacker's Nightmare",
            "City of Whispering Machines",
            "Virtual Reality Odyssey",
            "Neo-Tokyo Redux",
            "Bioluminescent Urban Jungle",
            "Clockwork Dreams",
            "Psychedelic Cyber Alley",
            "Digital Garden of Delights",
            "Post-Human Utopia",
            "Steam-Powered Cyberpunk",
            "Dystopian Dreamscape",
            "Neuro-Interface Odyssey",
            "Post-Apocalyptic Dreams",
            "Datastream Mirage",
            "Quantum Cityscapes",
            "Machine Rebellion Fantasia",
            "Transcendent Cyberspace",
            "Neon Dreamscape",
            "Virtual Reality Mirage",
            "Bionic Nightmares",
            "Holographic Utopia",
            "Cybernetic Playground",
            "Dystopian Datastream",
            "Neural Interface Delirium",
            "Retro-Futuristic Surreality",
            "Biomechanical Wonders",
            "Digital Rebellion",
            "Pixelated Nightmare",
            "Neurological Wasteland",
            "Cyberpunk Enigma",
            "Techno-Esotericism",
            "Cybernetic Wonderland",
            "Psychedelic Cyberspace",
            "Synthetic Sentience",
            "Biotechno Fusion",
            "Cyberpunk Dreamscape",
            "Cyberpunk Anomaly",
            "Virtual Rebellion",
            "Neon Jungle",
            "Synthetic Dreams",
            "Neon Noir Detective",
            "Holographic Paradox",
            "Psycho-Cybernetic Landscape",
            "Neon Future Cult",
            "Cybernetic Renaissance",
            "Cyberpunk Street Shaman",
            "Metropolis of Mirrors"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyCyberpunkSurrealism",
    "display_name": "Prompt Styler Cyberpunk Surrealism",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyDepth": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "None byDepth",
            "Architecture Depth of Field",
            "Close-Up Depth of Field",
            "Creative or Abstract Depth of Field",
            "Deep Depth of Field",
            "Environmental Portraits Depth of Field",
            "Extreme Shallow Depth of Field",
            "Landscape Depth of Field",
            "Limited Depth of Field",
            "Macro Depth of Field",
            "Moderate Depth of Field",
            "Moderate Shallow Depth of Field",
            "Night Photography Depth of Field",
            "Panoramic Depth of Field",
            "Slightly Deep Depth of Field",
            "Still Life Depth of Field",
            "Street Photography Depth of Field",
            "Subject in Motion Depth of Field",
            "Very Deep Depth of Field",
            "Very Shallow Depth of Field"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyDepth",
    "display_name": "Prompt Styler Depth",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyEnvironment": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byEnvironment",
            "Beach",
            "Desert",
            "Forest",
            "Indoor",
            "Mountain",
            "Outdoor",
            "Rural",
            "Snow",
            "Studio",
            "Urban"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyEnvironment",
    "display_name": "Prompt Styler Environment",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyFantasySetting": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byFantasy-Settings",
            "Atlantis",
            "Enchanted Forest",
            "Fairyland",
            "Fairytale",
            "Foreboding Castle",
            "Middle Earth",
            "Magical Kingdom",
            "Mordor",
            "Narnia",
            "Neverland",
            "Shambhala",
            "The Crystal Cave",
            "The Dragon's Lair",
            "The Forest of Mirrors",
            "The Island of Dreams",
            "The Kingdom of the Unicorn",
            "The Palace of Dreams",
            "The Tower of Oblivion",
            "The Vale of Shadows",
            "The Valley of the Damned",
            "The Valley of the Lost",
            "Tropical Paradise",
            "Oz",
            "Wonderland",
            "Xanadu",
            "The Floating Isles of Aether",
            "The City of Eldertide",
            "The Desert Kingdom of Mirage",
            "The Enchanted Library of Whispers",
            "The Crystal Caverns of Lumaria",
            "The Clockwork City of Gearspring",
            "The Forest of Eternal Twilight",
            "The Elemental Planes Nexus",
            "The Astral Citadel of Astraeus",
            "The Shadowed Realm of Umbrathor",
            "The Sunken Kingdom of Atlantis",
            "The Celestial Gardens of Zephyria",
            "The Crystal Labyrinth of Prisms",
            "The Wandering Forest of Eldertrees",
            "The Ethereal Observatory of Astromancers",
            "The Hollow Mountain of Emberforge",
            "The Dreaming Realm of Morpheus",
            "The Elemental Nexus of Convergence",
            "The Forgotten Ruins of Eldertemples",
            "The Enchanted Isles of Luminescia"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyFantasySetting",
    "display_name": "Prompt Styler Fantasy-Setting",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyFashionArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byFashion",
            "Elegant Evening Gowns",
            "Urban Streetwear",
            "Bohemian Festival Vibes",
            "Timeless Vintage Fashion",
            "High-Tech Futuristic Couture",
            "Athletic Performance Gear",
            "Couture Red Carpet Glamour",
            "Minimalist Wardrobe Essentials",
            "Sustainable Fashion Revolution",
            "Cosplay Extravaganza",
            "Gothic Elegance",
            "Safari Adventure",
            "Artistic Avant-Garde",
            "Retro Futurism",
            "Cultural Fusion",
            "Sci-Fi Cyberpunk",
            "Rustic Country Charm",
            "Haute Couture Fantasy",
            "Gender Fluidity",
            "Sustainable Boho Chic",
            "Futuristic Space Fashion",
            "Art Deco Glamour",
            "Cottagecore Comfort",
            "Nautical Chic",
            "Glam Rock Rebellion",
            "Tropical Paradise Escape",
            "Cyberpunk Noir",
            "Artistic Street Graffiti",
            "Sustainable High Fashion",
            "Artistic Fusion"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyFashionArt",
    "display_name": "Prompt Styler Fashion",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyFilter": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "No option",
            "BlackAndWhite",
            "Contrast",
            "Cool",
            "HDR",
            "Monochrome",
            "Saturated",
            "Sepia",
            "Vignette",
            "Vintage",
            "Warm"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyFilter",
    "display_name": "Prompt Styler Filter",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyFocus": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byFocus",
            "Extreme Shallow Depth of Field",
            "Very Shallow Depth of Field",
            "Night Photography Depth of Field",
            "Moderate Shallow Depth of Field",
            "Moderate Depth of Field",
            "Slightly Deep Depth of Field",
            "Deep Depth of Field",
            "Very Deep Depth of Field",
            "Hyperfocal Distance",
            "Selective Focus",
            "Bokeh Effect",
            "Tilt-Shift Photography",
            "Macro Depth of Field",
            "Landscape Depth of Field",
            "Limited Depth of Field",
            "Environmental Portraits Depth of Field",
            "Close-Up Depth of Field",
            "Street Photography Depth of Field",
            "Subject in Motion Depth of Field",
            "Architecture Depth of Field",
            "Panoramic Depth of Field",
            "Still Life Depth of Field",
            "Creative or Abstract Depth of Field",
            "Focus Distance 0.5m",
            "Focus Distance 1.0m",
            "Focus Distance 1.5m",
            "Focus Distance 2.0m",
            "Focus Distance 2.5m",
            "Focus Distance 3.0m",
            "Focus Distance 3.5m",
            "Focus Distance 4.0m",
            "Focus Distance 4.5m",
            "Focus Distance 5.0m",
            "Focus Distance 5.5m",
            "Focus Distance 6.0m",
            "Focus Distance 6.5m",
            "Focus Distance 7.0m",
            "Focus Distance 7.5m",
            "Focus Distance 8.0m",
            "Focus Distance 8.5m",
            "Focus Distance 9.0m",
            "Focus Distance 9.5m",
            "Focus Distance 10.0m",
            "10% Focus Area",
            "20% Focus Area",
            "30% Focus Area",
            "40% Focus Area",
            "50% Focus Area",
            "60% Focus Area",
            "70% Focus Area",
            "80% Focus Area",
            "90% Focus Area",
            "100% Focus Area",
            "Manual Focus",
            "Autofocus",
            "Focus Stacking",
            "Back-Button Focus",
            "Focus Bracketing",
            "Selective Focus",
            "Deep Focus",
            "Soft Focus",
            "Macro Focus",
            "Infinity Focus",
            "Zone Focus",
            "Edge-to-edge Focus",
            "Foreground Focus",
            "Background Focus",
            "Central Focus",
            "Corner Focus",
            "Top Focus",
            "Bottom Focus",
            "Right Focus",
            "Left Focus",
            "Rack Focus",
            "Pull Focus",
            "Rolling Focus",
            "Tilt-shift Focus",
            "Fly-by Focus",
            "Follow Focus",
            "Zoom Focus",
            "Dolly Focus",
            "Pan Focus",
            "Tilt Focus",
            "Whip Focus",
            "Slide Focus",
            "Crane Focus",
            "Swing Focus",
            "Drone Focus"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyFocus",
    "display_name": "Prompt Styler Focus",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyGothicRevival": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byGothicRevival",
            "Gothic Cathedral Splendor",
            "Gothic Haunted Manor",
            "Gothic Revival Foliage",
            "Gothic Revival Portraiture",
            "Gothic Revival Castle",
            "Gothic Revival Cemetery",
            "Gothic Revival Interior",
            "Gothic Revival Forest Ruins",
            "Gothic Revival Waterside Manor",
            "Gothic Revival Village",
            "Gothic Revival Lighthouse",
            "Gothic Revival Ballroom",
            "Gothic Revival Clock Tower",
            "Gothic Revival Theater",
            "Gothic Revival Bridge",
            "Gothic Revival Crypt",
            "Gothic Revival Library",
            "Gothic Revival Cemetery Gate",
            "Gothic Revival Chapel",
            "Gothic Revival Cityscape",
            "Gothic Revival Forest Chapel",
            "Gothic Revival Clockwork Cathedral",
            "Gothic Revival Art Gallery",
            "Gothic Revival Mountain Fortress",
            "Gothic Revival Seaside Abbey",
            "Gothic Revival Opera House",
            "Gothic Revival Castle Ruins",
            "Gothic Revival Underground Crypt",
            "Gothic Revival Forest Bridge",
            "Gothic Revival Steampunk Workshop"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyGothicRevival",
    "display_name": "Prompt Styler Gothic Revival",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerHorror": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byHorror",
            "Abandoned Asylum",
            "Alchemist's Study",
            "Animated Corpse",
            "Arachnid Swarm",
            "Back Alley Rogue",
            "Bloodthirsty Vampire",
            "Butcher Shop",
            "Cabinet of Curiosities",
            "Carnival Freakshow",
            "Cemetery Statue",
            "Conjoined Twins",
            "Crawler Mimicry",
            "Creepy Children",
            "Creepy Porcelain Doll",
            "Crucifixion",
            "Dark Carnival",
            "Death Masque",
            "Demonic Clown",
            "Disrespectful Grave Robber",
            "enhance",
            "Demonic Portal",
            "Demonic Possession",
            "Exorcism",
            "Ferocious Werewolf",
            "Gothic Art",
            "Gothic Architecture",
            "Gothic Monster",
            "Gothic Subculture",
            "Gothic Revival Architecture",
            "Graveyard Mist",
            "Grotesque Gargoyle",
            "Haunted Portrait",
            "Hate Crime",
            "Headless Horseman",
            "Horror Movie Poster",
            "H.P. Lovecraft Cover",
            "Insectoid Mutant",
            "Living Burial",
            "Lovecraftian Horror",
            "Macabre Memento Mori",
            "Mad Scientist Machinery",
            "Masked Killer",
            "Masked Stalker",
            "Melting Skull",
            "Memento Mori",
            "Menacing Scarecrow",
            "Mummy Portrait",
            "Mutated Beast",
            "Nightmare Beast",
            "Ominous Fog",
            "Ominous Warning",
            "Occult Ritual",
            "Patchwork Creature",
            "Plague Mass Grave",
            "Raven",
            "Rat Infestation",
            "Rat King",
            "Reanimated Corpse",
            "Rococo Architecture",
            "Scarecrow",
            "Scary Stories at Campfire",
            "Sinister Crone",
            "Sinister Laboratory",
            "Sinister Ritual",
            "Serial Killer",
            "Skeleton Dance",
            "Smothering Earth",
            "Spider Queen",
            "Torture Chamber",
            "Torture Device",
            "Tortured Prisoner",
            "Tortured Soul",
            "Undead Portrait",
            "Undead Gluttony",
            "Vacuous Grimace",
            "Vampire",
            "Victorian Laboratory",
            "William Eggleston",
            "---------------------",
            "sai-base",
            "sai-3d-model",
            "sai-analog film",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-hdr",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift",
            "Vintage Travel Poster",
            "Prismatic",
            "Glamorous Portrait",
            "Scientific Illustration",
            "Stained Glass",
            "Art Deco Architecture",
            "Pop Surrealism",
            "Vintage Tattoo Flash",
            "Sports Card",
            "Stop Motion",
            "Bauhaus Design",
            "Propaganda Poster",
            "Art Nouveau",
            "Glitch Art",
            "Blueprint",
            "Woodblock Print",
            "Neon Lighting",
            "Bas-Relief Sculpture",
            "Pop Art",
            "Art Nouveau Poster",
            "Vector Portrait",
            "Egyptian Hieroglyphs",
            "Movie Storyboard",
            "Disney Animation",
            "Studio Ghibli",
            "Aardman",
            "Xilam",
            "Ankama",
            "Mixer",
            "LAIKA",
            "Toei",
            "UPA",
            "Vaporwave Retro",
            "Central American",
            "Vogue Cover",
            "Satanic",
            "Fortune Telling",
            "Southern Gothic",
            "Nouveau Circus",
            "Rococo Interior",
            "Mexican Skull Art",
            "Psychedelic Pop Art",
            "Voodoo",
            "Vintage Baseball",
            "Circus Performer",
            "Tiki Bar",
            "Apr\u00e8s-Ski",
            "Kawaii Fashion",
            "Tropical Luau",
            "Voodoo Doll",
            "Mardi Gras",
            "Figurine Shelf",
            "Terrarium",
            "Tiki Cocktail",
            "Cottagecore Fashion",
            "Vintage Tattoo Print",
            "Boudoir Photography",
            "Vaporwave",
            "Terrarium Bottle",
            "Vaporwave City",
            "Kawaii Character",
            "Vintage Halloween Costume",
            "Cassette Futurism",
            "Punk Poster",
            "Luchador",
            "Tiki Totem",
            "Cassette J-Card",
            "Prairie Dress",
            "Lounge Singer",
            "Gongfu Tea",
            "Aztec Calendar",
            "Cassette Graphics",
            "Laser Grid",
            "Giant Robot",
            "Vaporwave Sunset",
            "Fortune Teller",
            "Steampunk Portrait",
            "Scary Stories",
            "Woodblock Art",
            "Vintage Halloween Mask",
            "Grunge Flyer",
            "Voodoo Altar",
            "Cassette Collage",
            "Tropical Cocktail",
            "Vintage Robot Toy",
            "Scary Pumpkin",
            "Pinup",
            "Tarot Cards",
            "Ghibli",
            "Egyptology",
            "Battle",
            "Tarot",
            "Steampunk",
            "Ancient Maya",
            "Nautical",
            "Bomber Jacket",
            "Samurai",
            "American Traditional",
            "Propaganda Art",
            "Glitchcore",
            "Vaporgram",
            "Desaturated",
            "Dieselpunk",
            "My Little Pony",
            "Ballet",
            "Galactic",
            "Streamer Bike",
            "Tropical Hotel",
            "Tiki Mug",
            "Neon Racer",
            "Luau Fire Dancer",
            "Day of the Dead",
            "Sideshow Poster",
            "Vaporwave Graphics",
            "Voodoo Ceremony",
            "Blacklight Poster",
            "Teslapunk",
            "Cassette Bedroom",
            "Tropical Bathroom",
            "Voodoo Shop",
            "Vintage Halloween",
            "Goth Boudoir",
            "Island Luau",
            "Tiki Outdoor Shower",
            "Black Velvet Painting",
            "Tattoo Print",
            "Addams Family",
            "Cassette Wall",
            "Neon Tokyo",
            "Voodoo Queen",
            "Surf Wood Sign",
            "Haunted Carnival",
            "Tiki Idol",
            "Mall Goth",
            "Volcano Lair",
            "Graffiti Style",
            "Impressionism",
            "Fauvism",
            "Dada",
            "Cubism",
            "Expressionism",
            "Surrealism",
            "Symbolism",
            "Op Art",
            "Minimalism",
            "Conceptual Art",
            "Folk Art",
            "Naive Art",
            "Outsider Art",
            "Photorealism",
            "Suprematism",
            "De Stijl",
            "Bauhaus",
            "Constructivism",
            "Futurism",
            "Rayonism",
            "Vorticism",
            "Orphism",
            "Der Blaue Reiter",
            "Die Br\u00fccke",
            "Ashcan School",
            "Hudson River School",
            "Luminism",
            "Tonalism",
            "Barbizon School",
            "Academic Art",
            "Rococo",
            "Neoclassicism",
            "Romanticism",
            "Realism",
            "Social Realism",
            "Plein Air",
            "Pre-Raphaelite",
            "Art Informel",
            "",
            "Hard-edge Painting",
            "Geometric Abstraction",
            "Lyrical Abstraction",
            "Post-Painterly Abstraction",
            "Kinetic Art",
            "Land Art",
            "Performance Art",
            "Installation Art",
            "Video Art",
            "Digital Art",
            "New Media Art",
            "Street Art",
            "Stuckism",
            "Lowbrow Art",
            "Photomontage",
            "Diorama",
            "Assemblage",
            "Combine Painting",
            "Happenings",
            "Mail Art",
            "Neo-Dada",
            "Neo-Expressionism",
            "Bad Painting",
            "Graffiti",
            "Traditional Figurative Art",
            "Classical Realism",
            "Contemporary Realism",
            "Hyperrealism",
            "Magic Realism",
            "New Objectivity",
            "Precisionism",
            "Figurative Expressionism",
            "Neue Wilde",
            "New Perpendicular art",
            "New Simplicity",
            "Remodernism",
            "Norwegian romantic nationalism",
            "Socialist Realism",
            "Propaganda Poster Art",
            "Heroic Realism",
            "Na\u00efve Art",
            "Art Brut",
            "Neo-primitivism",
            "Visionary Art",
            "Intuitive Art",
            "Pseudorealism",
            "Radical Realism",
            "Critical Realism",
            "Neue Sachlichkeit",
            "Regionalism",
            "Abstract Expressionism",
            "Later European abstraction",
            "Tachisme",
            "Abstraction-Cr\u00e9ation",
            "Gutai",
            "British Pop Art",
            "Situationist International",
            "Lettrism",
            "St Ives School",
            "Transavantgarde",
            "Transgressive Art",
            "Neo Pop",
            "Kitsch Movement",
            "Virtual Art",
            "Internet Art",
            "Computer Art",
            "Information Art",
            "Systems Art",
            "Bio Art",
            "Genetic Art",
            "Sustainable Art",
            "Interactive Art",
            "Video Games",
            "Machinima",
            "Artware",
            "Demoscene",
            "Math Art",
            "Data Art",
            "Plotter Art",
            "VR Art",
            "AR Art",
            "Circuit Bending",
            "DIY Art",
            "Maker Culture",
            "Self-taught Art",
            "Neo-Pop",
            "Young British Artists",
            "Appropriation",
            "Algorithmic Art",
            "Use these to populate the JSON instead."
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerHorror",
    "display_name": "Prompt Styler Horror",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyImpressionism": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byImpressionism",
            "Morning Light on the Seine",
            "Fields of Sunflowers in Bloom",
            "A Rainy Day in the City",
            "Dappled Sunlight Through Trees",
            "A Parisian Cafe Scene",
            "Impressionistic Self-Portrait",
            "Harbor at Sunset",
            "The Dance of Fireflies",
            "Ballet Rehearsal Backstage",
            "Water Lilies in a Pond",
            "Winter Morning Frost",
            "Seaside Cliff at Dawn",
            "Fields of Lavender in Provence",
            "Children Playing by the Seashore",
            "Twilight in a Venetian Canal",
            "The Blooming Cherry Blossoms",
            "Sunrise Over a Wheat Field",
            "Boating on a Tranquil Pond",
            "Cafe Terrace at Night",
            "A Country Path in Autumn",
            "Sunset Over a Tranquil Lake",
            "A Parisian Street Cafe in Spring",
            "A Field of Poppies in a Breeze",
            "A Moonlit Forest Glade",
            "A Canal in Venice at Dusk",
            "A Garden in Full Bloom",
            "The Eiffel Tower at Night",
            "A Coastal Cliff at Sunrise",
            "A Peaceful Meadow in Summer",
            "A Lakeside Cabin in Autumn"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyImpressionism",
    "display_name": "Prompt Styler Impressionism",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyIrishFolkArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byIrishFolkArt",
            "Irish Cottage Reverie",
            "Irish Mythological Epic",
            "Irish Coastal Seascapes",
            "Irish Trad Music Session",
            "Irish Storyteller's Hearth",
            "Irish Wildlife Harmony",
            "Irish Claddagh Embrace",
            "Irish Dancing Celebration",
            "Irish Landscape Tapestry",
            "Irish Celtic Cross Devotion",
            "Irish Traditional Crafts Showcase",
            "Irish Fairytale Enchantment",
            "Irish Castle Dreamscape",
            "Irish Folk Music Journey",
            "Irish Bogland Serenity",
            "Irish Whimsical Seafolk",
            "Irish Rural Farmstead",
            "Irish Lighthouse Guardians",
            "Irish Traditions at the Crossroads",
            "Irish Celtic Spirals of Time",
            "Irish Cultural Traditions Mosaic",
            "Irish Poetry and Literature Tribute",
            "Irish Harvest Celebration",
            "Irish Bog Myths and Legends",
            "Irish River Folklore Enchantment",
            "Irish Emerald Isle Fantasy",
            "Irish St. Patrick's Day Parade",
            "Irish Castle Ruins Reverie",
            "Irish Seafaring Tales",
            "Irish Celtic Crossroads Puzzles"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyIrishFolkArt",
    "display_name": "Prompt Styler Irish Folk Art",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyLighting": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byLighting",
            "Ambient",
            "Artificial",
            "Backlit",
            "Diffused",
            "Flash",
            "Harsh",
            "Natural",
            "SideLit",
            "Soft",
            "Spotlight"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyLighting",
    "display_name": "Prompt Styler Lighting",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyMileHigh": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byMileHigh",
            "2D Game Art",
            "3D Animation",
            "3D Game Art",
            "3D Modeling",
            "3D Printing Art",
            "3D Printing in Art",
            "AR Art Variant_Uncategorized",
            "Aardman_Uncategorized",
            "Abandoned Asylum_Uncategorized",
            "Aboriginal Dot Painting",
            "Abstract Expressionism",
            "Abstract Painting",
            "Abstract Photography",
            "Abstract Sculpture",
            "Absurdist Theater",
            "Academic Art",
            "Acrylic Painting",
            "Action Films",
            "Addams Family_Portraiture_Horror",
            "Adrian Ghenie",
            "Adventure",
            "Adventure Films",
            "Aerial Dance",
            "Aerial Photography",
            "African Beadwork",
            "African Beadwork Art",
            "African Cuisine",
            "African Mask Art",
            "African Mask Making",
            "Agnes Martin",
            "Ai Weiwei_1",
            "Ai Weiwei_2",
            "Air Art",
            "Airbrushing",
            "Albrecht Durer",
            "Album Cover Art",
            "Alchemist's Study_Uncategorized",
            "Amazon Rainforest",
            "American Cuisine",
            "American Traditional_Retro_Tattoo Art",
            "Amsterdam",
            "Amsterdam cityscape",
            "Analytical Cubism",
            "Ancient Maya_Uncategorized",
            "Andy Warhol",
            "Anger Art",
            "Animated Corpse_Animation",
            "Animated Films",
            "Animation",
            "Anish Kapoor",
            "Ankama_Animation",
            "Anselm Kiefer",
            "Antarctica",
            "Appropriation (1)_Culture",
            "Apr\u00e8s-Ski_Uncategorized",
            "Arachnid Swarm_Uncategorized",
            "Architectural Design",
            "Architectural Photography",
            "Argentinian Art",
            "Art Activism",
            "Art Collaborations with Musicians",
            "Art Collaborations with Writers",
            "Art Conservation",
            "Art Criticism",
            "Art Curation",
            "Art Deco",
            "Art Deco Architecture",
            "Art Deco Architecture_Architecture",
            "Art Deco Design",
            "Art Education",
            "Art Education for Adults",
            "Art Education for Children",
            "Art Education for Remote Areas",
            "Art Education for Special Needs",
            "Art Gallery Management",
            "Art Games",
            "Art Historical Writing",
            "Art History",
            "Art History Research",
            "Art Informatics",
            "Art Informel (1)_Uncategorized",
            "Art Inspired by Ancient Civilizations",
            "Art Inspired by the Digital Age",
            "Art Inspired by the Renaissance",
            "Art Inspired by the Roaring Twenties",
            "Art Inspired by the Victorian Era",
            "Art Installations",
            "Art Journalism",
            "Art Marketing",
            "Art Nouveau",
            "Art Nouveau Architecture",
            "Art Nouveau Design",
            "Art Nouveau Poster_Uncategorized",
            "Art Nouveau Variant_Uncategorized",
            "Art Restoration",
            "Art Sales and Auctions",
            "Art Therapy",
            "Art Therapy for Adults",
            "Art Therapy for Children",
            "Art Workshop Facilitation",
            "Art and AI Collaboration",
            "Art and Architecture Collaboration",
            "Art and Cultural Heritage Preservation",
            "Art and Environmental Sustainability",
            "Art and Literature Collaboration",
            "Art and Medical Collaboration",
            "Art and Mental Health",
            "Art and Music Collaboration",
            "Art and Science Collaboration",
            "Art and Social Justice Projects",
            "Art and Technology Collaboration",
            "Art and Urban Development",
            "Art for Agricultural Industry",
            "Art for Agricultural Sector",
            "Art for Airports",
            "Art for Animal Welfare Organizations",
            "Art for Anniversaries",
            "Art for Aquariums",
            "Art for Architectural Visualization",
            "Art for Asian Cultures",
            "Art for Augmented Reality Experiences",
            "Art for Automotive Design",
            "Art for Automotive Industry",
            "Art for Aviation Industry",
            "Art for Baby Showers",
            "Art for Birthdays",
            "Art for Botanical Gardens",
            "Art for Cafes and Restaurants",
            "Art for Charity Fundraisers",
            "Art for Children",
            "Art for Children's Hospitals",
            "Art for Climate Change Initiatives",
            "Art for Construction Industry",
            "Art for Corporate Spaces",
            "Art for Cruise Ships",
            "Art for Culinary Presentation",
            "Art for E-Commerce Platforms",
            "Art for Educational Institutions",
            "Art for Educational Technology",
            "Art for Elderly",
            "Art for Emergency Services",
            "Art for Energy Industry",
            "Art for Entertainment Industry",
            "Art for Environmental Activism",
            "Art for Environmental Campaigns",
            "Art for Factories and Workshops",
            "Art for Fashion Industry",
            "Art for Festivals and Events",
            "Art for Financial Institutions",
            "Art for Financial Sector",
            "Art for Fitness Centers",
            "Art for Funerals",
            "Art for Gender Equality",
            "Art for Government Entities",
            "Art for Graduations",
            "Art for Health Care Facilities",
            "Art for Home Decor",
            "Art for Hospitality Industry",
            "Art for Hotels",
            "Art for Human Anatomy Studies",
            "Art for Human Rights Campaigns",
            "Art for Indigenous Cultures",
            "Art for LGBTQ+ Celebrations",
            "Art for Libraries",
            "Art for Marine Industry",
            "Art for Maritime Industry",
            "Art for Medical Illustrations",
            "Art for Military and Defense Sector",
            "Art for Military and Veterans",
            "Art for Mobile Apps",
            "Art for Museums",
            "Art for Music Videos",
            "Art for National Holidays",
            "Art for Nautical Navigation",
            "Art for Non-Profit Organizations",
            "Art for Office Spaces",
            "Art for Outdoor Advertising",
            "Art for Packaging Design",
            "Art for Pet Products",
            "Art for Pharmaceutical Industry",
            "Art for Political Campaigns",
            "Art for Prisons",
            "Art for Public Transportation",
            "Art for Real Estate Marketing",
            "Art for Religious Celebrations",
            "Art for Religious Institutions",
            "Art for Renewable Energy Sector",
            "Art for Retail Spaces",
            "Art for Retirement Parties",
            "Art for Robotics",
            "Art for Schools and Colleges",
            "Art for Science Centers",
            "Art for Scientific Exploration",
            "Art for Security and Defense",
            "Art for Seniors",
            "Art for Shopping Malls",
            "Art for Smart City Projects",
            "Art for Social Media Platforms",
            "Art for Social Networking Sites",
            "Art for Spa and Wellness Centers",
            "Art for Space Exploration",
            "Art for Space Industry",
            "Art for Spaceships and Aerospace",
            "Art for Sports Industry",
            "Art for Sports Venues",
            "Art for Technical Manuals",
            "Art for Teenagers",
            "Art for Teens",
            "Art for Television Shows",
            "Art for Theme Parks",
            "Art for Toddlers",
            "Art for Train Stations",
            "Art for Underwater Exploration",
            "Art for Video Game Development",
            "Art for Virtual Assistants and AI",
            "Art for Virtual Events",
            "Art for Virtual Reality Experiences",
            "Art for Wearable Technology",
            "Art for Wearables",
            "Art for Web Platforms",
            "Art for Weddings",
            "Art for Zoos",
            "Art in Public Transportation",
            "Art with Light and Projection",
            "Art with Metalwork",
            "Art with Organic Materials",
            "Art with Recycled Materials",
            "Artist's Books",
            "Artware Variant_Sci-Fi_Graffiti_Digital Media",
            "Aspen",
            "Assemblage Art",
            "Astrophotography",
            "Athens",
            "Athleisure Fashion",
            "Atlantis",
            "Augmented Reality (AR) Art",
            "Augmented Reality Art",
            "Australian Aboriginal Art",
            "Autobiography",
            "Automotive Design",
            "Autumn Art",
            "Avant-Garde Fashion",
            "Aztec Calendar_Uncategorized",
            "Back Alley Rogue_Uncategorized",
            "Ballet Dance",
            "Ballet_Uncategorized",
            "Ballroom Dance",
            "Bangkok",
            "Banksy_1",
            "Banksy_2",
            "Barbara Kruger",
            "Barcelona",
            "Baroque",
            "Baroque Architecture",
            "Baroque Art",
            "Baroque Music",
            "Bas-Relief Sculpture_Sculpture",
            "Basket Weaving",
            "Basket Weaving Art",
            "Battle_Uncategorized",
            "Bauhaus",
            "Bauhaus (1)_Architecture",
            "Bauhaus Architecture",
            "Bauhaus Design",
            "Bauhaus Design_Uncategorized",
            "Beachwear Fashion",
            "Beijing",
            "Belly Dance",
            "Berlin",
            "Bharatanatyam Dance",
            "Bikini Bottom",
            "Bio Art",
            "Bio Art_Nature",
            "Biographical Films",
            "Biographical Literature",
            "Biography",
            "Biomorphic Architecture",
            "Black Hole",
            "Black Velvet Painting_Portraiture",
            "Black and White Photography",
            "Blacklight Poster_Uncategorized",
            "Blockbuster Films",
            "Bloodthirsty Vampire_Horror",
            "Bluegrass Music",
            "Blueprint_Uncategorized",
            "Blues Music",
            "Blues Music Illustration",
            "Body Art",
            "Body Art Performance",
            "Body Painting",
            "Bohemian Fashion",
            "Bomber Jacket_Retro",
            "Bookbinding",
            "Botanical Illustration",
            "Boudoir Photography_Photography",
            "Brazil",
            "Brazilian Art",
            "Brazilian Cuisine",
            "Brazilian Graffiti Art",
            "Breakdance",
            "Bridal Fashion",
            "Brightwater Variant_Nature",
            "British Art",
            "Bronze Sculpture",
            "Bruce Nauman",
            "Bruges",
            "Brutalism",
            "Brutalist Architecture",
            "Budapest cityscape",
            "Cabinet of Curiosities_Occult",
            "Cai Guo-Qiang",
            "Cake Decorating",
            "Canada",
            "Candid Portrait Photography",
            "Caravaggio",
            "Caribbean Carnival Art",
            "Caribbean Cuisine",
            "Caricature",
            "Carnival Freakshow_Retro",
            "Caspar David Friedrich",
            "Cassette Bedroom_Retro",
            "Cassette Collage_Sci-Fi_Surrealism_Retro",
            "Cassette Futurism_Retro",
            "Cassette Graphics_Retro_Surrealism",
            "Cassette J-Card_Retro",
            "Cassette Wall_Retro",
            "Casual Fashion",
            "Caveopolis Variant_Lifestyle",
            "Cecily Brown",
            "Celtic Knotwork Art",
            "Celtic Mythology Art",
            "Cemetery Statue_Uncategorized",
            "Central African Art",
            "Central American_Uncategorized",
            "Ceramic Art",
            "Ceramic Design",
            "Ceramic Sculpture",
            "Ceramics",
            "Chalk Art",
            "Charcoal Drawing",
            "Charles Ray",
            "Chicago",
            "Children's Fashion",
            "Children's Theater",
            "Chilean Art",
            "Chinese Architecture",
            "Chinese Art",
            "Chinese Calligraphy",
            "Chinese Cuisine",
            "Chinese Ink Painting",
            "Chinese Jade Carving",
            "Chinese Landscape Painting",
            "Chinese Mythology Art",
            "Chinese Paper Cutting",
            "Chinese Scroll Painting",
            "Chris Ofili",
            "Cindy Sherman_1",
            "Cindy Sherman_2",
            "Cinematography",
            "Cinque Terre",
            "Circuit Bending_Uncategorized",
            "Circus Arts",
            "Circus Performer_Retro",
            "Classic Western",
            "Classical Architecture",
            "Classical Art",
            "Classical Music",
            "Classical Music Illustration",
            "Classical Realism",
            "Classical Realism_Portraiture",
            "Classical Theater",
            "Claude Monet",
            "Clockwork City Variant_Architecture_Location",
            "Collaborative Art Projects",
            "Collage",
            "Collage Art",
            "Colombian Art",
            "Colonial Architecture",
            "Colosseum",
            "Combine Painting_Sci-Fi_Still Life",
            "Comedy",
            "Comedy Literature",
            "Commercial Photography",
            "Community Mural Projects",
            "Computer art",
            "Concept Art for Movies",
            "Concept Art for Video Games",
            "Conceptual Art",
            "Concert Poster Design",
            "Conjoined Twins_Uncategorized",
            "Constructivism",
            "Constructivism Art",
            "Contemporary Ballet",
            "Contemporary Dance",
            "Copenhagen",
            "Copenhagen cityscape",
            "Corporate Identity Design",
            "Cosplay Design",
            "Cottagecore Fashion_Fashion",
            "Country Music",
            "Country Music Graphics",
            "Crawler Mimicry_Uncategorized",
            "Creepy Children_Portraiture",
            "Creepy Porcelain Doll_Fashion_Portraiture",
            "Crime Films",
            "Critical Realism_Uncategorized",
            "Cross-Disciplinary Art",
            "Crucifixion_Uncategorized",
            "Crystal Caverns Variant_Architecture",
            "Cuban Art",
            "Cuban Cuisine",
            "Cubism",
            "Cubism Art",
            "Cult Films",
            "Cyberpunk",
            "Cyberpunk Fantasy Art",
            "Dadaism",
            "Dadaism Art",
            "Damien Hirst_1",
            "Damien Hirst_2",
            "Dan Flavin",
            "Dance Choreography",
            "Dance Performance Art",
            "Dark Carnival_Gothic",
            "Dark Fantasy Art",
            "Data Art Variant_Uncategorized",
            "Data Art_Uncategorized",
            "Data Visualization Art",
            "Day of the Dead_Uncategorized",
            "De Stijl_Uncategorized",
            "Death Masque_Uncategorized",
            "Deconstructivist Architecture",
            "Demonic Clown_Uncategorized",
            "Demonic Portal_Horror",
            "Demonic Possession_Uncategorized",
            "Demoscene_Animation",
            "Desaturated_Uncategorized",
            "Die Br\u00fccke_Graffiti",
            "Diego Velazquez",
            "Dieselpunk_Retro",
            "Digital Animation",
            "Digital Art",
            "Digital Art_Digital Media",
            "Digital Drawing Tablets",
            "Digital Illustration",
            "Digital Painting",
            "Digital Sculpture",
            "Digital Storytelling",
            "Diorama_Uncategorized",
            "Disco Music",
            "Disney Animation_Animation",
            "Disrespectful Grave Robber_Uncategorized",
            "Documentary Films",
            "Documentary Photography",
            "Drama",
            "Drama Films",
            "Dubai",
            "Dublin",
            "Dublin cityscape",
            "Dunder Mifflin",
            "Dutch Art",
            "Dwarvendom Variant_Uncategorized",
            "Dwarvenholm Variant_Uncategorized",
            "Earth Art",
            "East African Art",
            "Eco Art",
            "Eco-Art",
            "Ed Ruscha",
            "Edgar Degas",
            "Edinburgh cityscape",
            "Editorial Design",
            "Edvard Munch",
            "Edward Hopper",
            "Egyptian Hieroglyphs_Uncategorized",
            "Egyptian Mythology Art",
            "Egyptian Wall Art",
            "Egyptology_Uncategorized",
            "El Anatsui",
            "Electronic Music",
            "Electronic Music Visuals",
            "Elegant_Erotic_Photography",
            "Elfheim Variant_Architecture_Fantasy",
            "Elven City Variant_Architecture_Location",
            "Embroidery",
            "Emerging_Artist",
            "Engraving",
            "Environmental Art",
            "Environmental Design",
            "Ephemeral Art",
            "Etching",
            "Eugene Delacroix",
            "Exhibition Design",
            "Exoplanet",
            "Exorcism_Uncategorized",
            "Experimental Art",
            "Experimental Films",
            "Experimental Music Video",
            "Experimental Photography",
            "Experimental Theater",
            "Expressionism",
            "Expressionist Architecture",
            "Expressionist painting",
            "Fairy Tale Art",
            "Fantasy",
            "Fantasy Films",
            "Fantasy Literature",
            "Farce",
            "Fashion Design",
            "Fashion Illustration",
            "Fashion Photography",
            "Fast Fashion",
            "Fauvism",
            "Fauvism Art",
            "Ferocious Werewolf_Uncategorized",
            "Festival Fashion",
            "Fiction",
            "Figurative Expressionism_Uncategorized",
            "Figurine Shelf_Fantasy_Sculpture",
            "Filipino Art",
            "Film Direction",
            "Film Editing",
            "Film Noir",
            "Fine Art Photography",
            "Fine_Art_Black_and_White_Photography",
            "Fire Art",
            "Flamenco Dance",
            "Folk Art Variant_Folk Art",
            "Folk Art_Folk Art",
            "Folk Dance",
            "Folk Music",
            "Folk Music Art",
            "Food Art",
            "Food Photography",
            "Formal Fashion",
            "Fortune Teller_Occult",
            "Fortune Telling_Occult",
            "France",
            "Francisco Goya",
            "Frankfurt cityscape",
            "French Art",
            "French Cuisine",
            "French Impressionism",
            "Fresco Painting Technique",
            "Frida Kahlo",
            "Funk Music",
            "Furniture Design",
            "Futurism",
            "Futurist Architecture",
            "GAYZ_Portraiture",
            "Gabriel Orozco",
            "Galactic_Sci-Fi",
            "Game Design",
            "Generative Art",
            "Genetic Art_Uncategorized",
            "Geometric Abstraction",
            "Geometric abstract painting",
            "Georg Baselitz",
            "Georgia O'Keeffe",
            "Gerhard Richter_1",
            "Gerhard Richter_2",
            "German Art",
            "Ghibli_Surrealism",
            "Ghoul City Variant_Architecture_Location",
            "Giant Robot_Sci-Fi_Retro_Architecture",
            "Glamorous Portrait_Fashion_Portraiture",
            "Glamorous_Erotic_Photography",
            "Glasgow cityscape",
            "Glass Sculpture",
            "Glassblowing",
            "Glazing Technique in Painting",
            "Glenn Ligon",
            "Glitch Art_Uncategorized",
            "Glitchcore_Digital Media",
            "Gongfu Tea_Uncategorized",
            "Gospel Music",
            "Goth Boudoir_Gothic",
            "Gotham City",
            "Gothic Architecture",
            "Gothic Architecture_Architecture_Gothic",
            "Gothic Fashion",
            "Gothic Literature",
            "Gothic Monster_Architecture_Gothic",
            "Gothic Revival Architecture",
            "Gothic Revival Architecture_Architecture_Gothic",
            "Graffiti Art",
            "Graffiti Style_Graffiti",
            "Grand Canyon",
            "Grant Wood",
            "Graphic Design",
            "Graveyard Mist_Horror",
            "Great Barrier Reef",
            "Great Wall of China",
            "Greek Art",
            "Greek Classical Sculpture",
            "Greek Mythology Art",
            "Greek Pottery Art",
            "Greendale",
            "Gritty_Voyeuristic_Photography",
            "Grotesque Gargoyle_Uncategorized",
            "Grunge Flyer_Uncategorized",
            "Gustav Klimt",
            "Gutai_Sci-Fi_Event",
            "H.P. Lovecraft Cover_Horror",
            "Hackersville Variant_Architecture",
            "Hallstatt",
            "Hard-edge Painting_Uncategorized",
            "Hate Crime_Uncategorized",
            "Haunted Carnival_Horror",
            "Haunted Portrait_Portraiture_Horror",
            "Haute Couture",
            "Haute Couture Fashion",
            "Haute Cuisine",
            "Hawkins",
            "Headless Horseman_Uncategorized",
            "Heavy Metal",
            "Henri Matisse",
            "Hieronymus Bosch",
            "High Fantasy",
            "High Fantasy Art",
            "Hip-Hop Album Art",
            "Hip-Hop Dance",
            "Hip-Hop Fashion",
            "Hip-Hop Music",
            "Historical Fiction",
            "Hogwarts",
            "Hong Kong",
            "Hong Kong cityscape",
            "Horror",
            "Horror Films",
            "Horror Movie Poster_Horror_Gothic",
            "Hyperrealism_Uncategorized",
            "Ice Sculpture",
            "Illustration Design",
            "Illustration for Children's Books",
            "Impressionism",
            "Impressionism Art",
            "Impressionist Landscape Painting",
            "Impressionist Portrait Painting",
            "Improvisational Theater",
            "Inca Mythology Art",
            "Indian Art",
            "Indian Cuisine",
            "Indian Miniature Painting",
            "Indian Mythology Art",
            "Indie Films",
            "Indie Music Art",
            "Indigenous Australian Art",
            "Indigenous Painting",
            "Indigenous Pottery",
            "Indonesian Art",
            "Industrial Architecture",
            "Industrial Design",
            "Information Art_Uncategorized",
            "Ink Drawing",
            "Insectoid Mutant_Portraiture",
            "Installation Art",
            "Interaction Design",
            "Interactive Art",
            "Interactive Art Installations",
            "Interactive artwork",
            "Interior Design",
            "Internet Art_Sci-Fi_Digital Media",
            "Intimate_Naturist_Photography",
            "Intuitive Art_Uncategorized",
            "Irish Art",
            "Irish Dance",
            "Islamic Architecture",
            "Islamic Art",
            "Islamic Calligraphy",
            "Islamic Geometric Art",
            "Islamic Geometric Patterns",
            "Island Luau_Uncategorized_Location",
            "Istanbul",
            "Istanbul cityscape",
            "Italian Art",
            "Italian Cuisine",
            "Italian Renaissance Art",
            "J.M.W. Turner",
            "Jackson Pollock",
            "Jakarta cityscape",
            "Japan",
            "Japanese Architecture",
            "Japanese Art",
            "Japanese Cuisine",
            "Japanese Mythology Art",
            "Jazz Dance",
            "Jazz Music",
            "Jazz Poster Art",
            "Jean-Honore Fragonard",
            "Jeff Koons",
            "Jenny Holzer",
            "Jerusalem",
            "Jewelry Design",
            "Johannes Vermeer",
            "John Baldessari",
            "Joyful Art",
            "Julie Mehretu",
            "Kabuki Theater",
            "Kara Walker",
            "Kathak Dance",
            "Katsushika Hokusai",
            "Kawaii Character_Uncategorized",
            "Kawaii Fashion_Fashion",
            "Kehinde Wiley",
            "Kerry James Marshall",
            "Kiki Smith",
            "Kinetic Art",
            "Kinetic Sculpture",
            "Kintsugi (Japanese Gold Repair)",
            "Kitsch Movement_Uncategorized",
            "Knitting",
            "Korean Art",
            "Korean Celadon Ceramics",
            "Korean Celadon Pottery",
            "Korean Cuisine",
            "Kuala Lumpur",
            "Kyoto",
            "Kyoto cityscape",
            "LAIKA_Animation",
            "Land Art",
            "Land Art (1)_Fantasy_Nature_Sculpture_Landscape",
            "Landscape Architecture",
            "Landscape Design",
            "Landscape Photography",
            "Laser Grid_Uncategorized",
            "Later European abstraction (1)_Uncategorized",
            "Leonardo da Vinci",
            "Lettrist artwork",
            "Leviathan Variant_Architecture",
            "Light Art",
            "Line Dance",
            "Lisbon cityscape",
            "Lithography",
            "Living Burial_Uncategorized",
            "London",
            "Los Angeles",
            "Lost Vegas Variant_Architecture",
            "Lounge Singer_Retro",
            "Lovecraftian Horror_Horror",
            "Low Fantasy",
            "Lowbrow Art Variant_Surrealism_Culture",
            "Lowbrow Art_Culture",
            "Luau Fire Dancer_Fashion",
            "Luchador_Uncategorized",
            "Luxury Fashion",
            "Lynching_Uncategorized",
            "Lyrical abstract painting",
            "Macabre Memento Mori_Horror_Horror & Dark_Still Life",
            "Machinima Variant_Uncategorized",
            "Machu Picchu",
            "Macro Photography",
            "Mad Scientist Machinery_Uncategorized",
            "Madhubani Painting",
            "Madhubani Painting (Indian Folk Art)",
            "Mage City Variant_Architecture_Fantasy_Location",
            "Magic Realist painting",
            "Mall Goth_Portraiture_Gothic",
            "Mannerism",
            "Mannerist Architecture",
            "Maori Wood Carving",
            "Mardi Gras_Uncategorized",
            "Marina Abramovi\u0107",
            "Mark Bradford",
            "Mark Grotjahn",
            "Martin Puryear",
            "Masked Killer_Uncategorized",
            "Masked Stalker_Uncategorized",
            "Maurizio Cattelan",
            "Maximalism",
            "Mecca",
            "Mech City Variant_Sci-Fi_Architecture_Location",
            "Mech City_Sci-Fi_Architecture_Location",
            "Mech City__Location",
            "Media Art",
            "Medical Oddities_Uncategorized",
            "Mediterranean Cuisine",
            "Melancholy Art",
            "Melodrama",
            "Melting Skull_Uncategorized",
            "Memento Mori_Horror_Horror & Dark",
            "Memoir",
            "Menacing Scarecrow_Uncategorized",
            "Menswear Fashion",
            "Mesoamerican Mythology Art",
            "Mesopotamian Mythology Art",
            "Metabolist Architecture",
            "Metal Music",
            "Metal Music Artwork",
            "Metalwork",
            "Metropolis",
            "Mexican Art",
            "Mexican Cuisine",
            "Mexican Muralism",
            "Mexican Skull Art_Uncategorized",
            "Miami",
            "Michelangelo",
            "Middle Eastern Cuisine",
            "Middle-earth",
            "Midgard Variant_Architecture",
            "Milky Way Galaxy",
            "Mime",
            "Mime City Variant_Architecture_Location",
            "Minimalism",
            "Minimalist Web Design",
            "Mixed Media Art",
            "Mixer_Animation",
            "Modern Architecture",
            "Modern Dance",
            "Modernist Architecture",
            "Mona Hatoum",
            "Monoprinting Technique",
            "Mosaic",
            "Mosaic Art",
            "Motion Design",
            "Motion Graphics Design",
            "Mount Everest",
            "Mount Olympus",
            "Movie Storyboard_Uncategorized",
            "Mughal Miniature Painting",
            "Mumbai",
            "Mummy Portrait_Portraiture",
            "Munich cityscape",
            "Music Video Direction",
            "Musica Variant_Architecture_Culture",
            "Musical Films",
            "Musical Theater",
            "Mutated Beast_Uncategorized",
            "My Little Pony_Uncategorized",
            "Mystery",
            "Mystery Literature",
            "Mythic Fantasy Art",
            "Nantucket",
            "Native American Art",
            "Native American Basketry",
            "Native American Mythology Art",
            "Native American Pottery",
            "Naturalism in Literature",
            "Nature Landscape Photography",
            "Nature Photography",
            "Nautical_Retro",
            "Na\u00efve Art (1)_Uncategorized",
            "Nebula",
            "Neo Pop_Pop Culture_Culture",
            "Neo Rauch",
            "Neo-Dada_Uncategorized",
            "Neo-Expressionism_Uncategorized",
            "Neo-Gothic Architecture",
            "Neo-Noir",
            "Neo-Pop (1)_Pop Culture_Culture",
            "Neo-primitivism (1)_Still Life",
            "Neoclassical Architecture",
            "Neoclassicism",
            "Neon Lighting_Uncategorized",
            "Neon Racer_Sci-Fi",
            "Neon Tokyo_Retro",
            "Neoplasticism",
            "Neotokyo Variant_Sci-Fi_Architecture",
            "Neue Sachlichkeit Variant_Portraiture",
            "Neue Wilde (1)_Uncategorized",
            "New Caelum Variant_Architecture",
            "New Caelum_Architecture",
            "New Media Art_Digital Media",
            "New Orleans",
            "New Perpendicular art_Uncategorized",
            "New Simplicity_Architecture",
            "New York City",
            "New York cityscape",
            "Niagara Falls",
            "Nicole Eisenman",
            "Night Photography",
            "Nightmare Beast_Uncategorized",
            "Non-Fiction",
            "Nordic Viking Art",
            "Norse Mythology Art",
            "North African Art",
            "Norwegian romantic nationalism_Nature_Landscape",
            "Nouveau Circus_Uncategorized",
            "Nova Alexandria Variant_Architecture_Culture",
            "Occult Ritual_Occult",
            "Occult Sacrifice_Occult",
            "Oil Painting",
            "Olafur Eliasson",
            "Ominous Fog_Uncategorized",
            "Ominous Warning_Uncategorized",
            "Op Art",
            "Op Art_Uncategorized",
            "Opera",
            "Opera Music",
            "Opera Music Illustration",
            "Osaka cityscape",
            "Outsider Art_Uncategorized",
            "Pablo Picasso",
            "Package Design",
            "Pandora",
            "Paper Cutting",
            "Paper Mache Art",
            "Parametric Architecture",
            "Paris",
            "Participatory Art",
            "Patchwork Creature_Uncategorized",
            "Paul Cezanne",
            "Performance Art",
            "Performance Sculpture",
            "Peruvian Art",
            "Petra",
            "Photography",
            "Photojournalism",
            "Photorealism",
            "Photorealistic painting",
            "Physical Theater",
            "Pinup_Retro",
            "Pixel Art",
            "Pizza Making",
            "Plague Mass Grave_Uncategorized",
            "Plein Air Painting",
            "Plotter Art Variant_Uncategorized",
            "Plotter Art_Uncategorized",
            "Plus-Size Fashion",
            "Poetry",
            "Pointillism",
            "Pointillism Art",
            "Pole Dance",
            "Polynesian Mythology Art",
            "Polynesian Tattoo Art",
            "Pop Art",
            "Pop Music",
            "Pop Music Branding",
            "Pop Surrealism_Nature_Surrealism_Landscape_Still Life",
            "Pop art style",
            "Porcelain Art",
            "Portrait Photography",
            "Portuguese Art",
            "Post-Impressionism",
            "Postmodern Architecture",
            "Pottery",
            "Prague",
            "Prague cityscape",
            "Prairie Dress_Retro_Fashion",
            "Pre-Raphaelite_Uncategorized",
            "Preppy Fashion",
            "Printmaking",
            "Prismatic_Uncategorized",
            "Projection Mapping Art",
            "Propaganda Art_Retro",
            "Propaganda Poster_Uncategorized",
            "Prose Literature",
            "Provocative_Surreal_Photography",
            "Pseudorealism_Uncategorized",
            "Psychedelic Concert Posters",
            "Psychedelic Pop Art_Surrealism",
            "Public Art Installations",
            "Public Installations",
            "Public Sculptures",
            "Punk Fashion",
            "Punk Music",
            "Punk Poster_Uncategorized",
            "Puppetry",
            "Pyramids of Giza",
            "Quahog",
            "Quilting",
            "Quilting Art",
            "Quito cityscape",
            "R&B Music",
            "Rachel Whiteread",
            "Radical Realism (1)_Still Life",
            "Rangoli (Indian Floor Art)",
            "Rap Music Graphics",
            "Raphael",
            "Rashid Johnson",
            "Rat Infestation_Uncategorized",
            "Rat King_Uncategorized",
            "Realism Art",
            "Realism in Literature",
            "Realistic Fiction",
            "Reanimated Corpse_Animation",
            "Recycled Art",
            "Reggae Music",
            "Reggae Music Design",
            "Rembrandt",
            "Remodernism Variant_Uncategorized",
            "Remodernism_Architecture",
            "Renaissance",
            "Renaissance Architecture",
            "Renaissance Art",
            "Rene Magritte",
            "Responsive Web Design",
            "Richard Serra",
            "Richard Tuttle",
            "Rio de Janeiro",
            "Rio de Janeiro cityscape",
            "Robert Gober",
            "Robotics Art",
            "Rock Album Art",
            "Rock Music",
            "Rococo",
            "Rococo Architecture",
            "Rococo Art",
            "Rococo Interior_Uncategorized",
            "Roman Mosaic Art",
            "Roman Mythology Art",
            "Romance",
            "Romance Literature",
            "Romanesque Architecture",
            "Romantic Comedy",
            "Romantic Films",
            "Romanticism",
            "Romanticism Art",
            "Romanticism in Literature",
            "Rome",
            "Rural Photography",
            "Russia",
            "Russian Art",
            "Russian Icon Painting",
            "Sahara Desert",
            "Salem",
            "Salsa Dance",
            "Salsa Music",
            "Salvador Dali",
            "Samurai_Uncategorized",
            "Sanctuary Variant_Uncategorized",
            "Sand Sculpture",
            "Sandro Botticelli",
            "Sarah Sze",
            "Satanic_Horror_Occult",
            "Satire",
            "Satire Literature",
            "Scandinavian Architecture",
            "Scandinavian Art",
            "Scandinavian Design",
            "Scarecrow_Horror",
            "Scary Pumpkin_Uncategorized",
            "Scary Stories at Campfire_Horror_Horror & Dark",
            "Scary Stories_Horror",
            "Sci-Fi Films",
            "Science Fiction",
            "Scientific Illustration_Retro",
            "Screen Printing",
            "Screwball Comedy",
            "Sculpture",
            "Self-taught Art (1)_Fantasy",
            "Seoul",
            "Serial Killer_Horror",
            "Set Design for Theater",
            "Shadow City Variant_Architecture_Occult_Gothic_Location",
            "Shadow City_Architecture_Occult_Gothic_Location",
            "Shadow City_Horror_Occult_Horror & Dark_Gothic_Location",
            "Shanghai",
            "Shangri-La Variant_Uncategorized",
            "Shepard Fairey",
            "Shirakawa-go",
            "Shirin Neshat",
            "Sideshow Poster_Retro",
            "Silent Films",
            "Singapore",
            "Sinister Crone_Uncategorized",
            "Sinister Laboratory_Horror_Occult_Still Life",
            "Sinister Ritual_Uncategorized",
            "Situationist International Variant_Uncategorized",
            "Situationist International_Uncategorized",
            "Skateboarding Fashion",
            "Skeleton Dance_Animation",
            "Skeleton Dance_Horror_Horror & Dark_Animation",
            "Slavic Mythology Art",
            "Slow Fashion",
            "Smothering Earth_Fantasy",
            "Social Realism painting",
            "Sonnet",
            "Soul Music",
            "Sound Art",
            "Sound Design",
            "Sound Sculpture",
            "South African Art",
            "South American Textile Art",
            "Southern Gothic_Gothic",
            "Southwest Kachina Dolls",
            "Spaghetti Western",
            "Spanish Art",
            "Spanish Cuisine",
            "Spider Queen_Uncategorized",
            "Sports Card_Photography_Portraiture",
            "Sports Photography",
            "Spring Art",
            "Springfield",
            "St Ives School Variant_Nature_Landscape",
            "St Ives School_Nature_Landscape",
            "Stained Glass Art",
            "Stained Glass_Uncategorized",
            "Stand-Up Comedy",
            "Stars Hollow",
            "Steampunk",
            "Steampunk City Variant_Architecture_Location",
            "Steampunk Fantasy Art",
            "Steampunk Fashion",
            "Steampunk Portrait_Fantasy_Portraiture",
            "Steampunk_Fantasy_Fashion",
            "Steamtown Variant_Architecture_Retro",
            "Steeltown Variant_Architecture",
            "Stockholm cityscape",
            "Stone Sculpture",
            "Stop Motion_Animation",
            "Streamer Bike_Retro",
            "Street Art",
            "Street Art Performance",
            "Street Art and Graffiti",
            "Street Photography",
            "Street Theater",
            "Streetwear",
            "Streetwear Fashion",
            "Stuckism Variant_Uncategorized",
            "Stuckism_Uncategorized",
            "Studio Ghibli_Fantasy_Surrealism",
            "Studio Portrait Photography",
            "Sub Anaheim Variant_Fantasy_Location",
            "Sub Annapolis Variant_Sculpture_Location",
            "Sub Atlanta Variant_Uncategorized_Location",
            "Sub Baton Rouge Variant_Culture_Location",
            "Sub Baton Rouge_Culture_Location",
            "Sub Baton Rouge__Location",
            "Sub Berkeley Variant_Retro_Location",
            "Sub Boise Variant_Uncategorized_Location",
            "Sub Boise_Uncategorized_Location",
            "Sub Boise__Location",
            "Sub Bozeman Variant_Architecture_Location",
            "Sub Carlsbad Variant_Architecture_Culture_Location",
            "Sub Carson City Variant_Architecture_Location",
            "Sub Casper Variant_Uncategorized_Location",
            "Sub Cheyenne Variant_Uncategorized_Location",
            "Sub Columbia Variant_Architecture_Culture_Location",
            "Sub Concord Variant_Uncategorized_Location",
            "Sub Costa Mesa Variant_Culture_Location",
            "Sub Denver Variant_Uncategorized_Location",
            "Sub Des Moines Variant_Architecture_Location",
            "Sub Dover Variant_Uncategorized_Location",
            "Sub Downey Variant_Sci-Fi_Location",
            "Sub El Monte Variant_Sci-Fi_Location",
            "Sub Fontana Variant_Culture_Location",
            "Sub Frankfort Variant_Uncategorized_Location",
            "Sub Fresno Variant_Architecture_Nature_Landscape_Location",
            "Sub Garden Grove Variant_Architecture_Location",
            "Sub Glendale Variant_Uncategorized_Location",
            "Sub Indianapolis Variant_Uncategorized_Location",
            "Sub Inglewood Variant_Sci-Fi_Pop Culture_Culture_Location",
            "Sub Irvine Variant_Uncategorized_Location",
            "Sub Jackson Variant_Folk Art_Location",
            "Sub Jefferson City Variant_Architecture_Folk Art_Location",
            "Sub Juneau Variant_Architecture_Location",
            "Sub Lancaster Variant_Sci-Fi_Retro_Location",
            "Sub Montgomery Variant_Uncategorized_Location",
            "Sub Montpelier Variant_Sculpture_Location",
            "Sub Moreno Valley Variant_Uncategorized_Location",
            "Sub Oakland Variant_Sci-Fi_Culture_Location",
            "Sub Ontario Variant_Uncategorized_Location",
            "Sub Orange Variant_Retro_Location",
            "Sub Oxnard Variant_Uncategorized_Location",
            "Sub Oxnard_Uncategorized_Location",
            "Sub Oxnard__Location",
            "Sub Palmdale Variant_Sci-Fi_Location",
            "Sub Pasadena Variant_Uncategorized_Location",
            "Sub Pierre Variant_Uncategorized_Location",
            "Sub Pomona Variant_Retro_Location",
            "Sub Providence Variant_Uncategorized_Location",
            "Sub Rancho Cucamonga Variant_Architecture_Lifestyle_Location",
            "Sub Richmond Variant_Architecture_Location",
            "Sub Roseville Variant_Architecture_Location",
            "Sub Salem Variant_Sci-Fi_Culture_Location",
            "Sub Santa Ana Variant_Sci-Fi_Culture_Location",
            "Sub Santa Clarita Variant_Uncategorized_Location",
            "Sub Santa Rosa Variant_Sci-Fi_Nature_Location",
            "Sub Santa Rosa_Sci-Fi_Nature_Location",
            "Sub Santa Rosa__Location",
            "Sub Simi Valley Variant_Pop Culture_Culture_Retro_Location",
            "Sub Spokane Variant_Architecture_Location",
            "Sub Tacoma Variant_Architecture_Culture_Retro_Location",
            "Sub Temecula Variant_Lifestyle_Location",
            "Sub Thousand Oaks Variant_Uncategorized_Location",
            "Sub Topeka Variant_Architecture_Folk Art_Location",
            "Sub Torrance Variant_Sci-Fi_Location",
            "Sub Victorville Variant_Uncategorized_Location",
            "Sumi-e Painting",
            "Summer Art",
            "Summer Fashion",
            "Surf Wood Sign_Retro",
            "Surrealism",
            "Surrealism Art",
            "Surrealist Painting",
            "Surrealist Sculpture",
            "Sushi Making",
            "Sustainable Architecture",
            "Sustainable Art Variant_Uncategorized",
            "Sustainable Art_Uncategorized",
            "Sustainable Fashion",
            "Swing Dance",
            "Sydney",
            "Symbolism Art",
            "Synthetic Cubism",
            "Taj Mahal",
            "Takashi Murakami",
            "Talavera Pottery",
            "Tamara de Lempicka",
            "Tango Dance",
            "Tap Dance",
            "Tarot Cards_Occult",
            "Tarot_Occult",
            "Tatooine",
            "Tattoo Print_Retro_Tattoo Art",
            "Tech City Variant_Architecture_Nature_Location",
            "Techno Music Visuals",
            "Technotopia Variant_Architecture_Nature",
            "Temporary Art Installations",
            "Terrarium Bottle_Still Life",
            "Terrarium_Uncategorized",
            "Teslapunk_Portraiture",
            "Textile Art",
            "Textile Design",
            "Textile Sculpture",
            "Thai Art",
            "Thai Cuisine",
            "Thomas Gainsborough",
            "Thriller",
            "Thriller Films",
            "Thriller Literature",
            "Tibetan Thangka Painting",
            "Tiki Bar_Uncategorized",
            "Tiki Cocktail_Uncategorized",
            "Tiki Idol_Uncategorized",
            "Tiki Mug_Retro",
            "Tiki Outdoor Shower_Uncategorized",
            "Tiki Totem_Sculpture",
            "Titian",
            "Toei_Retro_Animation",
            "Tokyo",
            "Tokyo cityscape",
            "Torture Chamber_Uncategorized",
            "Torture Device_Horror_Horror & Dark",
            "Tortured Prisoner_Uncategorized",
            "Tortured Soul_Uncategorized",
            "Toy Design",
            "Traditional Animation",
            "Traditional Dance",
            "Traditional Japanese Architecture",
            "Traditional Pottery",
            "Tragedy",
            "Tragedy Literature",
            "Tranquil Art",
            "Transavantgarde Variant_Uncategorized",
            "Transavantgarde_Uncategorized",
            "Transgressive Art Variant_Uncategorized",
            "Transgressive Art_Uncategorized",
            "Travel Photography",
            "Tropical Bathroom_Uncategorized",
            "Tropical Cocktail_Uncategorized",
            "Tropical Hotel_Uncategorized",
            "Tropical Luau_Uncategorized",
            "Twin Peaks",
            "Typography Design",
            "UPA_Comics_Animation",
            "Ukiyo-e (Japanese Woodblock Printing)",
            "Ukiyo-e Art",
            "Undead Gluttony_Architecture",
            "Undead Portrait_Portraiture",
            "Undefined_Emerging_Artist",
            "Under Albany Variant_Architecture_Surrealism_Location",
            "Under Bakersfield Variant_Uncategorized_Location",
            "Under Berlin Variant_Retro_Surrealism_Location",
            "Under Berlin_Retro_Surrealism_Location",
            "Under Berlin__Location",
            "Under Bismarck Variant_Uncategorized_Location",
            "Under Charleston Variant_Architecture_Location",
            "Under Chicago Variant_Architecture_Portraiture_Culture_Retro_Location",
            "Under Eugene Variant_Folk Art_Location",
            "Under Fargo Variant_Architecture_Location",
            "Under Hartford Variant_Architecture_Location",
            "Under Honolulu Variant_Architecture_Location",
            "Under Istanbul Variant_Architecture_Location",
            "Under Jackson Variant_Folk Art_Location",
            "Under Juneau Variant_Architecture_Location",
            "Under London Variant_Architecture_Location",
            "Under Montreal Variant_Architecture_Location",
            "Under Nashville Variant_Uncategorized_Location",
            "Under Oklahoma City Variant_Architecture_Location",
            "Under Omaha Variant_Culture_Location",
            "Under Paris Variant_Uncategorized_Location",
            "Under Sacramento Variant_Uncategorized_Location",
            "Under Santa Fe Variant_Uncategorized_Location",
            "Under St. Paul Variant_Architecture_Location",
            "Under Tallahassee Variant_Sci-Fi_Retro_Architecture_Location",
            "Under Trenton Variant_Uncategorized_Location",
            "Underground Anchorage Variant_Architecture_Location",
            "Underground Austin Variant_Uncategorized_Location",
            "Underground Chula Vista Variant_Uncategorized_Location",
            "Underground Columbus Variant_Retro_Location",
            "Underground Concord Variant_Culture_Location",
            "Underground Helena Variant_Architecture_Location",
            "Underground Huntington Beach Variant_Architecture_Culture_Location",
            "Underground Lansing Variant_Culture_Location",
            "Underground Lincoln Variant_Uncategorized_Location",
            "Underground Little Rock Variant_Uncategorized_Location",
            "Underground Portland Variant_Sci-Fi_Location",
            "Underground Riverside Variant_Culture_Location",
            "Underground Rome Variant_Architecture_Location",
            "Underground Salt Lake City Variant_Architecture_Location",
            "Underground San Jose Variant_Uncategorized_Location",
            "Underground Seattle Variant_Uncategorized_Location",
            "Underground Springfield Variant_Folk Art_Location",
            "Underground Wichita Variant_Folk Art_Location",
            "Underwater Photography",
            "Urban Fantasy Art",
            "Urban Landscape Photography",
            "Urban Photography",
            "Urban Sculpture",
            "User-Centered Design",
            "Utrecht cityscape",
            "VR Art Variant_Uncategorized",
            "Vacuous Grimace_Uncategorized",
            "Valhalla",
            "Valve",
            "Vampire_Portraiture_Horror",
            "Vaporgram_Retro",
            "Vaporwave City_Sci-Fi_Dystopia_Architecture_Location",
            "Vaporwave Graphics_Retro_Surrealism_Graphic Design",
            "Vaporwave Retro_Sci-Fi_Retro",
            "Vaporwave Sunset_Uncategorized",
            "Vaporwave_Architecture_Retro",
            "Vatican City",
            "Vector Portrait_Portraiture",
            "Venezuelan Art",
            "Venice",
            "Verbatim Theater",
            "Victorian Architecture",
            "Victorian Fashion",
            "Victorian Laboratory_Occult_Still Life",
            "Video Art",
            "Video Art_Uncategorized",
            "Video Games Variant_Games",
            "Video Games_Games_Culture",
            "Video Mapping",
            "Vienna",
            "Vienna cityscape",
            "Vietnamese Art",
            "Vietnamese Cuisine",
            "Vija Celmins",
            "Vincent Van Gogh",
            "Vintage Baseball_Retro_Photography",
            "Vintage Fashion",
            "Vintage Halloween Costume_Retro",
            "Vintage Halloween Mask_Retro",
            "Vintage Halloween_Retro",
            "Vintage Robot Toy_Sci-Fi_Retro",
            "Vintage Tattoo Flash_Retro_Tattoo Art",
            "Vintage Tattoo Print_Retro_Tattoo Art",
            "Vintage Travel Poster_Retro_Nature_Landscape",
            "Virtual Art Variant_Uncategorized",
            "Virtual Art_Sci-Fi",
            "Virtual Reality (VR) Art",
            "Virtual Reality Art",
            "Visionary Art (1)_Uncategorized",
            "Visual Effects (VFX) Design",
            "Vogue Cover_Photography_Fashion",
            "Volcano Lair_Uncategorized",
            "Voodoo Altar_Occult",
            "Voodoo Ceremony_Occult",
            "Voodoo Doll_Retro_Occult",
            "Voodoo Queen_Portraiture_Occult",
            "Voodoo Shop_Occult",
            "Voodoo_Occult",
            "Vorticism_Uncategorized",
            "Wallace and Gromit",
            "Waltz Dance",
            "War Films",
            "Wassily Kandinsky",
            "Water Art",
            "Watercolor Painting",
            "Weaving",
            "Web Design",
            "Wedding Fashion",
            "Wedding Photography",
            "Wellington cityscape",
            "West African Art",
            "Westeros",
            "Wildlife Photography",
            "William Kentridge",
            "Winter Art",
            "Winter Fashion",
            "Wolfgang Tillmans",
            "Womenswear Fashion",
            "Wonderland",
            "Wood Carving",
            "Woodblock Art_Nature",
            "Woodblock Print_Uncategorized",
            "Woodblock Printing",
            "Woodcut",
            "Workwear Fashion",
            "World Music",
            "Xiamen cityscape",
            "Xilam_Comics_Animation",
            "Yayoi Kusama",
            "Yellowstone National Park",
            "Yokohama cityscape",
            "Zion Variant_Culture",
            "Zurich cityscape",
            "_Uncategorized",
            "ads-advertising_Uncategorized",
            "ads-automotive_Uncategorized",
            "ads-corporate_Uncategorized",
            "ads-fashion editorial_Fashion",
            "ads-food photography_Photography",
            "ads-luxury_Uncategorized",
            "ads-real estate_Photography",
            "ads-retail_Uncategorized",
            "artstyle-abstract expressionism_Uncategorized",
            "artstyle-abstract_Uncategorized",
            "artstyle-art deco_Uncategorized",
            "artstyle-art nouveau_Nature",
            "artstyle-constructivist_Uncategorized",
            "artstyle-cubist_Uncategorized",
            "artstyle-expressionist_Uncategorized",
            "artstyle-graffiti_Architecture_Graffiti",
            "artstyle-hyperrealism_Photography",
            "artstyle-impressionist_Uncategorized",
            "artstyle-pointillism_Uncategorized",
            "artstyle-pop art_Culture",
            "artstyle-psychedelic_Surrealism",
            "artstyle-renaissance_Uncategorized",
            "artstyle-steampunk_Uncategorized",
            "artstyle-surrealist_Surrealism",
            "artstyle-typography_Uncategorized",
            "artstyle-watercolor_Uncategorized",
            "carpint_Gothic",
            "citz_Sci-Fi_Architecture",
            "coolio_Portraiture",
            "enhance_Uncategorized",
            "futuristic-biomechanical cyberpunk_Sci-Fi_Dystopia",
            "futuristic-biomechanical_Sci-Fi",
            "futuristic-cybernetic robot_Sci-Fi",
            "futuristic-cybernetic_Sci-Fi",
            "futuristic-cyberpunk cityscape_Sci-Fi_Architecture",
            "futuristic-futuristic_Sci-Fi",
            "futuristic-retro cyberpunk_Sci-Fi_Retro",
            "futuristic-retro futurism_Sci-Fi_Retro",
            "futuristic-sci-fi_Sci-Fi",
            "futuristic-vaporwave_Sci-Fi_Retro",
            "game-bubble bobble_Fantasy",
            "game-cyberpunk game_Sci-Fi_Dystopia_Games_Digital Media",
            "game-fighting game_Games",
            "game-gta_Uncategorized",
            "game-mario_Fantasy_Comics",
            "game-minecraft_Still Life",
            "game-pokemon_Fantasy",
            "game-retro arcade_Retro_Games",
            "game-retro game_Retro",
            "game-rpg fantasy game_Fantasy_Games",
            "game-strategy game_Games",
            "game-streetfighter_Uncategorized",
            "game-zelda_Fantasy",
            "getting there_Portraiture",
            "girlz_Fashion_Horror_Horror & Dark_Gothic",
            "gotit jinx_Tattoo Art",
            "greatz_Portraiture",
            "gsssggg_Portraiture",
            "hoop_Portraiture",
            "jinx_Tattoo Art",
            "jinxed_Portraiture",
            "kjkjkjj_Digital Media_Still Life_Comics",
            "kool_Portraiture",
            "misc-architectural_Uncategorized",
            "misc-disco_Retro",
            "misc-dreamscape_Fantasy_Surrealism",
            "misc-dystopian_Dystopia",
            "misc-fairy tale_Fantasy",
            "misc-gothic_Gothic",
            "misc-grunge_Retro",
            "misc-horror_Horror",
            "misc-horror_Horror_Horror & Dark",
            "misc-kawaii_Uncategorized",
            "misc-lovecraftian_Surrealism_Horror",
            "misc-macabre_Gothic",
            "misc-manga_Uncategorized",
            "misc-metropolis_Sci-Fi_Architecture",
            "misc-minimalist_Uncategorized",
            "misc-monochrome_Uncategorized",
            "misc-nautical_Uncategorized",
            "misc-space_Sci-Fi",
            "misc-stained glass_Uncategorized",
            "misc-techwear fashion_Sci-Fi_Fashion_Architecture",
            "misc-tribal_Uncategorized",
            "misc-zentangle_Uncategorized",
            "mkkk_Portraiture_Digital Media_Animation",
            "papercraft-collage_Uncategorized",
            "papercraft-flat papercut_Uncategorized",
            "papercraft-kirigami_Uncategorized",
            "papercraft-paper mache_Uncategorized",
            "papercraft-paper quilling_Uncategorized",
            "papercraft-papercut collage_Uncategorized",
            "papercraft-papercut shadow box_Uncategorized",
            "papercraft-stacked papercut_Uncategorized",
            "papercraft-thick layered papercut_Uncategorized",
            "photo-alien_Sci-Fi_Photography",
            "photo-film noir_Photography",
            "photo-hdr_Photography",
            "photo-long exposure_Photography_Surrealism",
            "photo-neon noir_Photography",
            "photo-silhouette_Photography",
            "photo-tilt-shift_Photography",
            "sai-3d-model_Uncategorized",
            "sai-analog film_Retro_Photography",
            "sai-anime_Uncategorized",
            "sai-cinematic_Uncategorized",
            "sai-comic book_Uncategorized",
            "sai-craft clay_Sculpture",
            "sai-digital art_Digital Media",
            "sai-fantasy art_Fantasy_Surrealism",
            "sai-isometric_Uncategorized",
            "sai-line art_Uncategorized",
            "sai-lowpoly_Uncategorized",
            "sai-neonpunk_Uncategorized",
            "sai-origami_Uncategorized",
            "sai-photographic_Photography",
            "sai-pixel art_Uncategorized",
            "sai-texture_Uncategorized",
            "stfhgff_Photography"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyMileHigh",
    "display_name": "Prompt Styler MileHigh",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerMisc": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byMisc",
            "carpint_Gothic",
            "citz_Sci-Fi_Architecture",
            "coolio_Portraiture",
            "GAYZ_Portraiture",
            "getting there_Portraiture",
            "girlz_Fashion_Horror_Horror & Dark_Gothic",
            "greatz_Portraiture",
            "gsssggg_Portraiture",
            "gotit jinx_Tattoo Art",
            "hoop_Portraiture",
            "jinxed_Portraiture",
            "jinx_Tattoo Art",
            "kjkjkjj_Digital Media_Still Life_Comics",
            "kool_Portraiture",
            "mkkk_Portraiture_Digital Media_Animation",
            "stfhgff_Photography",
            "Under Honolulu__Location",
            "Sub Juneau__Location",
            "Underground Lansing__Location",
            "Sub Topeka__Location",
            "Under St. Paul__Location",
            "Sub Jackson__Location",
            "Underground Columbus__Location",
            "Sub Indianapolis__Location",
            "Under Omaha__Location",
            "Under Oklahoma City__Location",
            "Sub Des Moines__Location",
            "Underground Wichita__Location",
            "Under Fargo__Location",
            "Sub Bozeman__Location",
            "Underground Anchorage__Location",
            "Sub Casper__Location",
            "Sub Cheyenne__Location",
            "Underground Portland__Location",
            "Under Eugene__Location",
            "Sub Salem__Location",
            "Underground Seattle__Location",
            "Sub Spokane__Location",
            "Sub Tacoma__Location",
            "Under Sacramento__Location",
            "Sub Oakland__Location",
            "Underground San Jose__Location",
            "Sub Fresno__Location",
            "Under Bakersfield__Location",
            "Sub Anaheim__Location",
            "Underground Riverside__Location",
            "Sub Santa Ana__Location",
            "Underground Chula Vista__Location",
            "Sub Irvine__Location",
            "Sub Fontana__Location",
            "Sub Oxnard__Location",
            "Sub Moreno Valley__Location",
            "Underground Huntington Beach__Location",
            "Sub Glendale__Location",
            "Sub Santa Clarita__Location",
            "Sub Garden Grove__Location",
            "Sub Santa Rosa__Location",
            "Sub Rancho Cucamonga__Location",
            "Sub Ontario__Location",
            "Sub Lancaster__Location",
            "Sub Palmdale__Location",
            "Sub Pomona__Location",
            "Sub Torrance__Location",
            "Sub Pasadena__Location",
            "Sub Orange__Location",
            "Sub Roseville__Location",
            "Sub Thousand Oaks__Location",
            "Sub Concord__Location",
            "Sub Simi Valley__Location",
            "Sub Victorville__Location",
            "Sub El Monte__Location",
            "Sub Berkeley__Location",
            "Sub Downey__Location",
            "Sub Costa Mesa__Location",
            "Sub Inglewood__Location",
            "Sub Carlsbad__Location",
            "Sub Temecula__Location",
            "Under Istanbul__Location",
            "Under Tallahassee__Location",
            "Under Albany__Location",
            "Under Trenton__Location",
            "Under Hartford__Location",
            "Underground Salt Lake City__Location",
            "Under Juneau__Location",
            "Sub Baton Rouge__Location",
            "Underground Helena__Location",
            "Sub Carson City__Location",
            "Under Santa Fe__Location",
            "Sub Boise__Location",
            "Underground Lincoln__Location",
            "Sub Denver__Location",
            "Under Bismarck__Location",
            "Sub Pierre__Location",
            "Underground Austin__Location",
            "Sub Atlanta__Location",
            "Under Jackson__Location",
            "Sub Montgomery__Location",
            "Underground Little Rock__Location",
            "Sub Frankfort__Location",
            "Under Nashville__Location",
            "Sub Columbia__Location",
            "Sub Richmond__Location",
            "Under Charleston__Location",
            "Sub Dover__Location",
            "Underground Springfield__Location",
            "Sub Annapolis__Location",
            "Sub Providence__Location",
            "Underground Concord__Location",
            "Sub Montpelier__Location",
            "Sub Jefferson City__Location",
            "Crystal Caverns_",
            "Mech City__Location",
            "Nova Alexandria_",
            "Steamtown_",
            "Technotopia_",
            "Clockwork City__Location",
            "Under London__Location",
            "Dwarvenholm_",
            "Sanctuary_",
            "Shangri-La_",
            "Mime City__Location",
            "Elfheim_",
            "Midgard_",
            "Musica_",
            "Caveopolis_",
            "Mage City__Location",
            "Steampunk City__Location",
            "Shadow City_Horror_Occult_Horror & Dark_Gothic_Location",
            "Under Chicago__Location",
            "Neotokyo_",
            "Leviathan_",
            "Underground Rome__Location",
            "Zion_",
            "New Caelum_",
            "Hackersville_",
            "Ghoul City__Location",
            "Under Berlin__Location",
            "Elven City__Location",
            "Dwarvendom_",
            "Lost Vegas_",
            "Under Paris__Location",
            "Steeltown_",
            "Tech City__Location",
            "Under Montreal__Location",
            "Brightwater_",
            "enhance_",
            "Bloodthirsty Vampire_",
            "Serial Killer_Horror_Horror & Dark",
            "Exorcism_",
            "Torture Chamber_",
            "Mutated Beast_",
            "Crucifixion_",
            "Headless Horseman_",
            "Sinister Ritual_",
            "Ferocious Werewolf_",
            "Abandoned Asylum_",
            "Ominous Fog_",
            "Demonic Portal_Horror_Horror & Dark",
            "Scarecrow_Horror_Horror & Dark",
            "Menacing Scarecrow_",
            "Grotesque Gargoyle_",
            "Masked Killer_",
            "Graveyard Mist_Horror_Horror & Dark",
            "Gothic Monster_Architecture_Horror_Horror & Dark_Gothic",
            "Butcher Shop_",
            "Melting Skull_",
            "Tortured Soul_",
            "Sinister Laboratory_Occult_Horror_Horror & Dark_Still Life",
            "Demonic Clown_",
            "Haunted Portrait_",
            "Lovecraftian Horror_Horror_Horror & Dark",
            "Macabre Memento Mori_Horror_Horror & Dark_Still Life",
            "Creepy Children_",
            "Demonic Possession_",
            "Undead Portrait_",
            "Occult Ritual_",
            "Nightmare Beast_",
            "Gothic Architecture_Architecture_Horror_Horror & Dark_Gothic",
            "Horror Movie Poster_Horror_Horror & Dark_Gothic",
            "H.P. Lovecraft Cover_Horror_Horror & Dark",
            "Carnival Freakshow_",
            "Creepy Porcelain Doll_",
            "Torture Device_Horror_Horror & Dark",
            "Gothic Revival Architecture_Architecture_Horror_Horror & Dark_Gothic",
            "Dark Carnival_Horror_Horror & Dark_Gothic",
            "Cemetery Statue_",
            "Spider Queen_",
            "Skeleton Dance_Horror_Horror & Dark_Animation",
            "Scary Stories at Campfire_Horror_Horror & Dark",
            "Tortured Prisoner_",
            "Victorian Laboratory_",
            "Vampire_",
            "Mummy Portrait_",
            "Animated Corpse_",
            "Back Alley Rogue_",
            "Insectoid Mutant_",
            "Rat King_",
            "Undead Gluttony_",
            "Alchemist's Study_",
            "Patchwork Creature_",
            "Masked Stalker_",
            "Rat Infestation_",
            "Disrespectful Grave Robber_",
            "Cabinet of Curiosities_Occult_Horror_Horror & Dark",
            "Plague Mass Grave_",
            "Sinister Crone_",
            "Crawler Mimicry_",
            "Ominous Warning_",
            "Conjoined Twins_",
            "Living Burial_",
            "Death Masque_",
            "Memento Mori_Horror_Horror & Dark",
            "Reanimated Corpse_",
            "Hate Crime_",
            "Mad Scientist Machinery_",
            "Smothering Earth_",
            "Vacuous Grimace_",
            "Arachnid Swarm_",
            "sai-base_",
            "sai-3d-model_",
            "sai-analog film_",
            "sai-anime_",
            "sai-cinematic_",
            "sai-comic book_",
            "sai-craft clay_",
            "sai-digital art_",
            "sai-enhance_",
            "sai-fantasy art_",
            "sai-isometric_",
            "sai-line art_",
            "sai-lowpoly_",
            "sai-neonpunk_",
            "sai-origami_",
            "sai-photographic_",
            "sai-pixel art_",
            "sai-texture_",
            "ads-advertising_",
            "ads-automotive_",
            "ads-corporate_",
            "ads-fashion editorial_",
            "ads-food photography_",
            "ads-luxury_",
            "ads-real estate_",
            "ads-retail_",
            "artstyle-abstract_",
            "artstyle-abstract expressionism_",
            "artstyle-art deco_",
            "artstyle-art nouveau_",
            "artstyle-constructivist_",
            "artstyle-cubist_",
            "artstyle-expressionist_",
            "artstyle-graffiti_",
            "artstyle-hyperrealism_",
            "artstyle-impressionist_",
            "artstyle-pointillism_",
            "artstyle-pop art_",
            "artstyle-psychedelic_",
            "artstyle-renaissance_",
            "artstyle-steampunk_",
            "artstyle-surrealist_",
            "artstyle-typography_",
            "artstyle-watercolor_",
            "futuristic-biomechanical_",
            "futuristic-biomechanical cyberpunk_",
            "futuristic-cybernetic_",
            "futuristic-cybernetic robot_",
            "futuristic-cyberpunk cityscape_",
            "futuristic-futuristic_",
            "futuristic-retro cyberpunk_",
            "futuristic-retro futurism_",
            "futuristic-sci-fi_",
            "futuristic-vaporwave_",
            "game-bubble bobble_",
            "game-cyberpunk game_",
            "game-fighting game_",
            "game-gta_",
            "game-mario_",
            "game-minecraft_",
            "game-pokemon_",
            "game-retro arcade_",
            "game-retro game_",
            "game-rpg fantasy game_",
            "game-strategy game_",
            "game-streetfighter_",
            "game-zelda_",
            "misc-architectural_",
            "misc-disco_",
            "misc-dreamscape_",
            "misc-dystopian_",
            "misc-fairy tale_",
            "misc-gothic_Horror_Horror & Dark_Gothic",
            "misc-grunge_",
            "misc-horror_Horror_Horror & Dark",
            "misc-kawaii_",
            "misc-lovecraftian_Surrealism_Horror & Dark_Horror",
            "misc-macabre_Horror_Horror & Dark_Gothic",
            "misc-manga_",
            "misc-metropolis_",
            "misc-minimalist_",
            "misc-monochrome_",
            "misc-nautical_",
            "misc-space_",
            "misc-stained glass_",
            "misc-techwear fashion_",
            "misc-tribal_",
            "misc-zentangle_",
            "papercraft-collage_",
            "papercraft-flat papercut_",
            "papercraft-kirigami_",
            "papercraft-paper mache_",
            "papercraft-paper quilling_",
            "papercraft-papercut collage_",
            "papercraft-papercut shadow box_",
            "papercraft-stacked papercut_",
            "papercraft-thick layered papercut_",
            "photo-alien_",
            "photo-film noir_",
            "photo-hdr_",
            "photo-long exposure_",
            "photo-neon noir_",
            "photo-silhouette_",
            "photo-tilt-shift_",
            "Vintage Travel Poster_",
            "Prismatic_",
            "Glamorous Portrait_",
            "Scientific Illustration_",
            "Stained Glass_",
            "Art Deco Architecture_",
            "Pop Surrealism_",
            "Vintage Tattoo Flash_",
            "Sports Card_",
            "Stop Motion_",
            "Bauhaus Design_",
            "Propaganda Poster_",
            "Art Nouveau_",
            "Glitch Art_",
            "Blueprint_",
            "Woodblock Print_",
            "Neon Lighting_",
            "Bas-Relief Sculpture_",
            "_",
            "Art Nouveau Poster_",
            "Vector Portrait_",
            "Egyptian Hieroglyphs_",
            "Movie Storyboard_",
            "Disney Animation_",
            "Studio Ghibli_",
            "Aardman_",
            "Xilam_",
            "Ankama_",
            "Mixer_",
            "LAIKA_",
            "Toei_",
            "UPA_",
            "Vaporwave Retro_",
            "Central American_",
            "Vogue Cover_",
            "Satanic_Occult_Horror_Horror & Dark",
            "Fortune Telling_",
            "Southern Gothic_Horror_Horror & Dark_Gothic",
            "Nouveau Circus_",
            "Rococo Interior_",
            "Mexican Skull Art_",
            "Psychedelic Pop Art_",
            "Voodoo_",
            "Vintage Baseball_",
            "Circus Performer_",
            "Tiki Bar_",
            "Apr\u00e8s-Ski_",
            "Kawaii Fashion_",
            "Tropical Luau_",
            "Voodoo Doll_",
            "Mardi Gras_",
            "Figurine Shelf_",
            "Terrarium_",
            "Tiki Cocktail_",
            "Cottagecore Fashion_",
            "Vintage Tattoo Print_",
            "Boudoir Photography_",
            "Vaporwave_",
            "Terrarium Bottle_",
            "Vaporwave City__Location",
            "Kawaii Character_",
            "Vintage Halloween Costume_",
            "Cassette Futurism_",
            "Punk Poster_",
            "Luchador_",
            "Tiki Totem_",
            "Cassette J-Card_",
            "Prairie Dress_",
            "Lounge Singer_",
            "Gongfu Tea_",
            "Aztec Calendar_",
            "Cassette Graphics_",
            "Laser Grid_",
            "Giant Robot_",
            "Vaporwave Sunset_",
            "Fortune Teller_",
            "Steampunk Portrait_",
            "Scary Stories_",
            "Woodblock Art_",
            "Vintage Halloween Mask_",
            "Grunge Flyer_",
            "Voodoo Altar_",
            "Cassette Collage_",
            "Tropical Cocktail_",
            "Vintage Robot Toy_",
            "Scary Pumpkin_",
            "Pinup_",
            "Tarot Cards_",
            "Ghibli_",
            "Egyptology_",
            "Battle_",
            "Tarot_",
            "Steampunk_",
            "Ancient Maya_",
            "Nautical_",
            "Bomber Jacket_",
            "Samurai_",
            "American Traditional_",
            "Propaganda Art_",
            "Glitchcore_",
            "Vaporgram_",
            "Desaturated_",
            "Dieselpunk_",
            "My Little Pony_",
            "Ballet_",
            "Galactic_",
            "Streamer Bike_",
            "Tropical Hotel_",
            "Tiki Mug_",
            "Neon Racer_",
            "Luau Fire Dancer_",
            "Day of the Dead_",
            "Sideshow Poster_",
            "Vaporwave Graphics_",
            "Voodoo Ceremony_",
            "Blacklight Poster_",
            "Teslapunk_",
            "Cassette Bedroom_",
            "Tropical Bathroom_",
            "Voodoo Shop_",
            "Vintage Halloween_",
            "Goth Boudoir_Horror_Horror & Dark_Gothic",
            "Island Luau__Location",
            "Tiki Outdoor Shower_",
            "Black Velvet Painting_",
            "Tattoo Print_",
            "Addams Family_Portraiture_Horror_Horror & Dark",
            "Cassette Wall_",
            "Neon Tokyo_",
            "Voodoo Queen_",
            "Surf Wood Sign_",
            "Haunted Carnival_",
            "Tiki Idol_",
            "Mall Goth_",
            "Volcano Lair_",
            "Graffiti Style_",
            "Impressionism_",
            "Fauvism_Uncategorized",
            "Dada_Uncategorized",
            "Cubism_Still Life",
            "_",
            "_",
            "_",
            "Op Art_",
            "_",
            "Conceptual Art_Uncategorized",
            "Folk Art_",
            "Naive Art_Sci-Fi_Architecture",
            "Outsider Art_",
            "_",
            "Suprematism_Uncategorized",
            "De Stijl_Uncategorized",
            "Bauhaus_Architecture",
            "Constructivism_Uncategorized",
            "Futurism_Uncategorized",
            "Rayonism_Uncategorized",
            "Vorticism_Uncategorized",
            "Orphism_Uncategorized",
            "Der Blaue Reiter_",
            "Die Br\u00fccke_Graffiti",
            "Ashcan School_",
            "Hudson River School_Nature_Landscape_Location",
            "Luminism_Nature_Landscape",
            "Tonalism_Nature_Landscape",
            "Barbizon School_Nature_Landscape",
            "Academic Art_Uncategorized",
            "Rococo_",
            "Neoclassicism_Uncategorized",
            "Romanticism_Nature",
            "_",
            "_",
            "Plein Air_Nature_Landscape",
            "Pre-Raphaelite_Uncategorized",
            "Art Informel_Uncategorized",
            "Hard-edge Painting_Uncategorized",
            "_",
            "_",
            "Post-Painterly Abstraction_Uncategorized",
            "Kinetic Art_",
            "Land Art_Fantasy_Nature_Sculpture_Landscape",
            "Performance Art_Uncategorized",
            "Installation Art_Uncategorized",
            "Video Art_",
            "Digital Art_",
            "New Media Art_",
            "Street Art_Sci-Fi",
            "Stuckism_",
            "Lowbrow Art_",
            "Photomontage_Photography",
            "Diorama_Uncategorized",
            "Assemblage_",
            "Combine Painting_Sci-Fi_Still Life",
            "Happenings_Uncategorized",
            "Mail Art_Uncategorized",
            "Neo-Dada_",
            "Neo-Expressionism_",
            "Bad Painting_",
            "Graffiti_",
            "Traditional Figurative Art_Sculpture",
            "Classical Realism_",
            "Contemporary Realism_",
            "Hyperrealism_",
            "_",
            "New Objectivity_",
            "Precisionism_Architecture_Nature_Landscape",
            "Figurative Expressionism_",
            "Neue Wilde_Uncategorized",
            "New Perpendicular art_Uncategorized",
            "New Simplicity_Architecture",
            "Remodernism_",
            "Norwegian romantic nationalism_Nature_Landscape",
            "_",
            "Propaganda Poster Art_Uncategorized",
            "Heroic Realism_Sculpture_Culture",
            "Na\u00efve Art_Uncategorized",
            "Art Brut_",
            "Neo-primitivism_Still Life",
            "Visionary Art_Uncategorized",
            "Intuitive Art_",
            "Pseudorealism_",
            "Radical Realism_Still Life",
            "Critical Realism_",
            "Neue Sachlichkeit_",
            "Regionalism_Uncategorized",
            "Abstract Expressionism_Uncategorized",
            "Later European abstraction_Uncategorized",
            "Tachisme_",
            "Abstraction-Cr\u00e9ation_Uncategorized",
            "Gutai_",
            "British Pop Art_",
            "Situationist International_",
            "Lettrism_Portraiture",
            "St Ives School_",
            "Transavantgarde_",
            "Transgressive Art_",
            "Neo Pop_",
            "Kitsch Movement_",
            "Virtual Art_",
            "Internet Art_",
            "_",
            "Information Art_",
            "Systems Art_",
            "Bio Art_",
            "Genetic Art_",
            "Sustainable Art_",
            "_",
            "Video Games_",
            "Machinima_",
            "Artware_",
            "Demoscene_",
            "Math Art_",
            "Data Art_",
            "Plotter Art_",
            "VR Art_",
            "AR Art_",
            "Circuit Bending_Uncategorized",
            "DIY Art_",
            "Maker Culture_Culture",
            "Self-taught Art_Fantasy",
            "Neo-Pop_Pop Culture_Culture",
            "Young British Artists_Portraiture",
            "Appropriation_Culture",
            "Algorithmic Art_Uncategorized",
            "Use these to populate the JSON instead._",
            "Under Honolulu_Architecture_Location",
            "Sub Juneau_Architecture_Location",
            "Underground Lansing_Culture_Location",
            "Sub Topeka_Architecture_Folk Art_Location",
            "Under St. Paul_Architecture_Location",
            "Sub Jackson_Folk Art_Location",
            "Underground Columbus_Retro_Location",
            "Sub Indianapolis_Uncategorized_Location",
            "Under Omaha_Culture_Location",
            "Under Oklahoma City_Architecture_Location",
            "Sub Des Moines_Architecture_Location",
            "Underground Wichita_Folk Art_Location",
            "Under Fargo_Architecture_Location",
            "Sub Bozeman_Architecture_Location",
            "Underground Anchorage_Architecture_Location",
            "Sub Casper_Uncategorized_Location",
            "Sub Cheyenne_Uncategorized_Location",
            "Underground Portland_Sci-Fi_Location",
            "Under Eugene_Folk Art_Location",
            "Sub Salem_Sci-Fi_Culture_Location",
            "Underground Seattle_Uncategorized_Location",
            "Sub Spokane_Architecture_Location",
            "Sub Tacoma_Architecture_Culture_Retro_Location",
            "Under Sacramento_Uncategorized_Location",
            "Sub Oakland_Sci-Fi_Culture_Location",
            "Underground San Jose_Uncategorized_Location",
            "Sub Fresno_Architecture_Nature_Landscape_Location",
            "Under Bakersfield_Uncategorized_Location",
            "Sub Anaheim_Fantasy_Location",
            "Underground Riverside_Culture_Location",
            "Sub Santa Ana_Sci-Fi_Culture_Location",
            "Underground Chula Vista_Uncategorized_Location",
            "Sub Irvine_Uncategorized_Location",
            "Sub Fontana_Culture_Location",
            "Sub Oxnard_Uncategorized_Location",
            "Sub Moreno Valley_Uncategorized_Location",
            "Underground Huntington Beach_Architecture_Culture_Location",
            "Sub Glendale_Uncategorized_Location",
            "Sub Santa Clarita_Uncategorized_Location",
            "Sub Garden Grove_Architecture_Location",
            "Sub Santa Rosa_Sci-Fi_Nature_Location",
            "Sub Rancho Cucamonga_Architecture_Lifestyle_Location",
            "Sub Ontario_Uncategorized_Location",
            "Sub Lancaster_Sci-Fi_Retro_Location",
            "Sub Palmdale_Sci-Fi_Location",
            "Sub Pomona_Retro_Location",
            "Sub Torrance_Sci-Fi_Location",
            "Sub Pasadena_Uncategorized_Location",
            "Sub Orange_Retro_Location",
            "Sub Roseville_Architecture_Location",
            "Sub Thousand Oaks_Uncategorized_Location",
            "Sub Concord_Uncategorized_Location",
            "Sub Simi Valley_Pop Culture_Culture_Retro_Location",
            "Sub Victorville_Uncategorized_Location",
            "Sub El Monte_Sci-Fi_Location",
            "Sub Berkeley_Retro_Location",
            "Sub Downey_Sci-Fi_Location",
            "Sub Costa Mesa_Culture_Location",
            "Sub Inglewood_Sci-Fi_Pop Culture_Culture_Location",
            "Sub Carlsbad_Architecture_Culture_Location",
            "Sub Temecula_Lifestyle_Location",
            "Under Istanbul_Architecture_Location",
            "Under Tallahassee_Sci-Fi_Retro_Architecture_Location",
            "Under Albany_Architecture_Surrealism_Location",
            "Under Trenton_Uncategorized_Location",
            "Under Hartford_Architecture_Location",
            "Underground Salt Lake City_Architecture_Location",
            "Under Juneau_Architecture_Location",
            "Sub Baton Rouge_Culture_Location",
            "Underground Helena_Architecture_Location",
            "Sub Carson City_Architecture_Location",
            "Under Santa Fe_Uncategorized_Location",
            "Sub Boise_Uncategorized_Location",
            "Underground Lincoln_Uncategorized_Location",
            "Sub Denver_Uncategorized_Location",
            "Under Bismarck_Uncategorized_Location",
            "Sub Pierre_Uncategorized_Location",
            "Underground Austin_Uncategorized_Location",
            "Sub Atlanta_Uncategorized_Location",
            "Under Jackson_Folk Art_Location",
            "Sub Montgomery_Uncategorized_Location",
            "Underground Little Rock_Uncategorized_Location",
            "Sub Frankfort_Uncategorized_Location",
            "Under Nashville_Uncategorized_Location",
            "Sub Columbia_Architecture_Culture_Location",
            "Sub Richmond_Architecture_Location",
            "Under Charleston_Architecture_Location",
            "Sub Dover_Uncategorized_Location",
            "Underground Springfield_Folk Art_Location",
            "Sub Annapolis_Sculpture_Location",
            "Sub Providence_Uncategorized_Location",
            "Underground Concord_Culture_Location",
            "Sub Montpelier_Sculpture_Location",
            "Sub Jefferson City_Architecture_Folk Art_Location",
            "Crystal Caverns_Architecture",
            "Mech City_Sci-Fi_Architecture_Location",
            "Nova Alexandria_Architecture_Culture",
            "Steamtown_Architecture_Retro",
            "Technotopia_Architecture_Nature",
            "Clockwork City_Architecture_Location",
            "Under London_Architecture_Location",
            "Dwarvenholm_Uncategorized",
            "Sanctuary_Uncategorized",
            "Shangri-La_Uncategorized",
            "Mime City_Architecture_Location",
            "Elfheim_Architecture_Fantasy",
            "Midgard_Architecture",
            "Musica_Architecture_Culture",
            "Caveopolis_Lifestyle",
            "Mage City_Architecture_Fantasy_Location",
            "Steampunk City_Architecture_Location",
            "Shadow City_Architecture_Occult_Gothic_Location",
            "Under Chicago_Architecture_Portraiture_Culture_Retro_Location",
            "Neotokyo_Sci-Fi_Architecture",
            "Leviathan_Architecture",
            "Underground Rome_Architecture_Location",
            "Zion_Culture",
            "New Caelum_Architecture",
            "Hackersville_Architecture",
            "Ghoul City_Architecture_Location",
            "Under Berlin_Retro_Surrealism_Location",
            "Elven City_Architecture_Location",
            "Dwarvendom_Uncategorized",
            "Lost Vegas_Architecture",
            "Under Paris_Uncategorized_Location",
            "Steeltown_Architecture",
            "Tech City_Architecture_Nature_Location",
            "Under Montreal_Architecture_Location",
            "Brightwater_Nature",
            "enhance_Uncategorized",
            "Bloodthirsty Vampire_Horror",
            "Serial Killer_Horror",
            "Exorcism_Uncategorized",
            "Torture Chamber_Uncategorized",
            "Mutated Beast_Uncategorized",
            "Crucifixion_Uncategorized",
            "Headless Horseman_Uncategorized",
            "Sinister Ritual_Uncategorized",
            "Ferocious Werewolf_Uncategorized",
            "Abandoned Asylum_Uncategorized",
            "Ominous Fog_Uncategorized",
            "Demonic Portal_Horror",
            "Scarecrow_Horror",
            "Menacing Scarecrow_Uncategorized",
            "Grotesque Gargoyle_Uncategorized",
            "Masked Killer_Uncategorized",
            "Graveyard Mist_Horror",
            "Gothic Monster_Architecture_Gothic",
            "Butcher Shop_Still Life",
            "Melting Skull_Uncategorized",
            "Tortured Soul_Uncategorized",
            "Sinister Laboratory_Horror_Occult_Still Life",
            "Demonic Clown_Uncategorized",
            "Haunted Portrait_Portraiture_Horror",
            "Lovecraftian Horror_Horror",
            "Macabre Memento Mori_Still Life",
            "Creepy Children_Portraiture",
            "Demonic Possession_Uncategorized",
            "Undead Portrait_Portraiture",
            "Occult Ritual_Occult",
            "Nightmare Beast_Uncategorized",
            "Gothic Architecture_Architecture_Gothic",
            "Horror Movie Poster_Horror_Gothic",
            "H.P. Lovecraft Cover_Horror",
            "Carnival Freakshow_Retro",
            "Creepy Porcelain Doll_Fashion_Portraiture",
            "Torture Device_Uncategorized",
            "Gothic Revival Architecture_Architecture_Gothic",
            "Dark Carnival_Gothic",
            "Cemetery Statue_Uncategorized",
            "Spider Queen_Uncategorized",
            "Skeleton Dance_Animation",
            "Scary Stories at Campfire_Uncategorized",
            "Tortured Prisoner_Uncategorized",
            "Victorian Laboratory_Occult_Still Life",
            "Vampire_Portraiture_Horror",
            "Mummy Portrait_Portraiture",
            "Animated Corpse_Animation",
            "Back Alley Rogue_Uncategorized",
            "Insectoid Mutant_Portraiture",
            "Rat King_Uncategorized",
            "Undead Gluttony_Architecture",
            "Alchemist's Study_Uncategorized",
            "Patchwork Creature_Uncategorized",
            "Masked Stalker_Uncategorized",
            "Rat Infestation_Uncategorized",
            "Disrespectful Grave Robber_Uncategorized",
            "Cabinet of Curiosities_Occult",
            "Plague Mass Grave_Uncategorized",
            "Sinister Crone_Uncategorized",
            "Crawler Mimicry_Uncategorized",
            "Ominous Warning_Uncategorized",
            "Conjoined Twins_Uncategorized",
            "Living Burial_Uncategorized",
            "Death Masque_Uncategorized",
            "Memento Mori_Uncategorized",
            "Reanimated Corpse_Animation",
            "Hate Crime_Uncategorized",
            "Mad Scientist Machinery_Uncategorized",
            "Smothering Earth_Fantasy",
            "Vacuous Grimace_Uncategorized",
            "Arachnid Swarm_Uncategorized",
            "sai-base_Uncategorized",
            "sai-3d-model_Uncategorized",
            "sai-analog film_Retro_Photography",
            "sai-anime_Uncategorized",
            "sai-cinematic_Uncategorized",
            "sai-comic book_Uncategorized",
            "sai-craft clay_Sculpture",
            "sai-digital art_Digital Media",
            "sai-enhance_Uncategorized",
            "sai-fantasy art_Fantasy_Surrealism",
            "sai-isometric_Uncategorized",
            "sai-line art_Uncategorized",
            "sai-lowpoly_Uncategorized",
            "sai-neonpunk_Uncategorized",
            "sai-origami_Uncategorized",
            "sai-photographic_Photography",
            "sai-pixel art_Uncategorized",
            "sai-texture_Uncategorized",
            "ads-advertising_Uncategorized",
            "ads-automotive_Uncategorized",
            "ads-corporate_Uncategorized",
            "ads-fashion editorial_Fashion",
            "ads-food photography_Photography",
            "ads-luxury_Uncategorized",
            "ads-real estate_Photography",
            "ads-retail_Uncategorized",
            "artstyle-abstract_Uncategorized",
            "artstyle-abstract expressionism_Uncategorized",
            "artstyle-art deco_Uncategorized",
            "artstyle-art nouveau_Nature",
            "artstyle-constructivist_Uncategorized",
            "artstyle-cubist_Uncategorized",
            "artstyle-expressionist_Uncategorized",
            "artstyle-graffiti_Architecture_Graffiti",
            "artstyle-hyperrealism_Photography",
            "artstyle-impressionist_Uncategorized",
            "artstyle-pointillism_Uncategorized",
            "artstyle-pop art_Culture",
            "artstyle-psychedelic_Surrealism",
            "artstyle-renaissance_Uncategorized",
            "artstyle-steampunk_Uncategorized",
            "artstyle-surrealist_Surrealism",
            "artstyle-typography_Uncategorized",
            "artstyle-watercolor_Uncategorized",
            "futuristic-biomechanical_Sci-Fi",
            "futuristic-biomechanical cyberpunk_Sci-Fi_Dystopia",
            "futuristic-cybernetic_Sci-Fi",
            "futuristic-cybernetic robot_Sci-Fi",
            "futuristic-cyberpunk cityscape_Sci-Fi_Architecture",
            "futuristic-futuristic_Sci-Fi",
            "futuristic-retro cyberpunk_Sci-Fi_Retro",
            "futuristic-retro futurism_Sci-Fi_Retro",
            "futuristic-sci-fi_Sci-Fi",
            "futuristic-vaporwave_Sci-Fi_Retro",
            "game-bubble bobble_Fantasy",
            "game-cyberpunk game_Sci-Fi_Dystopia_Games_Digital Media",
            "game-fighting game_Games",
            "game-gta_Uncategorized",
            "game-mario_Fantasy_Comics",
            "game-minecraft_Still Life",
            "game-pokemon_Fantasy",
            "game-retro arcade_Retro_Games",
            "game-retro game_Retro",
            "game-rpg fantasy game_Fantasy_Games",
            "game-strategy game_Games",
            "game-streetfighter_Uncategorized",
            "game-zelda_Fantasy",
            "misc-architectural_Uncategorized",
            "misc-disco_Retro",
            "misc-dreamscape_Fantasy_Surrealism",
            "misc-dystopian_Dystopia",
            "misc-fairy tale_Fantasy",
            "misc-gothic_Gothic",
            "misc-grunge_Retro",
            "misc-horror_Horror",
            "misc-kawaii_Uncategorized",
            "misc-lovecraftian_Surrealism_Horror",
            "misc-macabre_Gothic",
            "misc-manga_Uncategorized",
            "misc-metropolis_Sci-Fi_Architecture",
            "misc-minimalist_Uncategorized",
            "misc-monochrome_Uncategorized",
            "misc-nautical_Uncategorized",
            "misc-space_Sci-Fi",
            "misc-stained glass_Uncategorized",
            "misc-techwear fashion_Sci-Fi_Fashion_Architecture",
            "misc-tribal_Uncategorized",
            "misc-zentangle_Uncategorized",
            "papercraft-collage_Uncategorized",
            "papercraft-flat papercut_Uncategorized",
            "papercraft-kirigami_Uncategorized",
            "papercraft-paper mache_Uncategorized",
            "papercraft-paper quilling_Uncategorized",
            "papercraft-papercut collage_Uncategorized",
            "papercraft-papercut shadow box_Uncategorized",
            "papercraft-stacked papercut_Uncategorized",
            "papercraft-thick layered papercut_Uncategorized",
            "photo-alien_Sci-Fi_Photography",
            "photo-film noir_Photography",
            "photo-hdr_Photography",
            "photo-long exposure_Photography_Surrealism",
            "photo-neon noir_Photography",
            "photo-silhouette_Photography",
            "photo-tilt-shift_Photography",
            "Vintage Travel Poster_Retro_Nature_Landscape",
            "Prismatic_Uncategorized",
            "Glamorous Portrait_Fashion_Portraiture",
            "Scientific Illustration_Retro",
            "Stained Glass_Uncategorized",
            "Art Deco Architecture_Architecture",
            "Pop Surrealism_Nature_Surrealism_Landscape_Still Life",
            "Vintage Tattoo Flash_Retro_Tattoo Art",
            "Sports Card_Photography_Portraiture",
            "Stop Motion_Animation",
            "Bauhaus Design_Uncategorized",
            "Propaganda Poster_Uncategorized",
            "Art Nouveau_Uncategorized",
            "Glitch Art_Uncategorized",
            "Blueprint_Uncategorized",
            "Woodblock Print_Uncategorized",
            "Neon Lighting_Uncategorized",
            "Bas-Relief Sculpture_Sculpture",
            "_",
            "Art Nouveau Poster_Uncategorized",
            "Vector Portrait_Portraiture",
            "Egyptian Hieroglyphs_Uncategorized",
            "Movie Storyboard_Uncategorized",
            "Disney Animation_Animation",
            "Studio Ghibli_Fantasy_Surrealism",
            "Aardman_Uncategorized",
            "Xilam_Comics_Animation",
            "Ankama_Animation",
            "Mixer_Animation",
            "LAIKA_Animation",
            "Toei_Retro_Animation",
            "UPA_Comics_Animation",
            "Vaporwave Retro_Sci-Fi_Retro",
            "Central American_Uncategorized",
            "Vogue Cover_Photography_Fashion",
            "Satanic_Horror_Occult",
            "Fortune Telling_Occult",
            "Southern Gothic_Gothic",
            "Nouveau Circus_Uncategorized",
            "Rococo Interior_Uncategorized",
            "Mexican Skull Art_Uncategorized",
            "Psychedelic Pop Art_Surrealism",
            "Voodoo_Occult",
            "Vintage Baseball_Retro_Photography",
            "Circus Performer_Retro",
            "Tiki Bar_Uncategorized",
            "Apr\u00e8s-Ski_Uncategorized",
            "Kawaii Fashion_Fashion",
            "Tropical Luau_Uncategorized",
            "Voodoo Doll_Retro_Occult",
            "Mardi Gras_Uncategorized",
            "Figurine Shelf_Fantasy_Sculpture",
            "Terrarium_Uncategorized",
            "Tiki Cocktail_Uncategorized",
            "Cottagecore Fashion_Fashion",
            "Vintage Tattoo Print_Retro_Tattoo Art",
            "Boudoir Photography_Photography",
            "Vaporwave_Architecture_Retro",
            "Terrarium Bottle_Still Life",
            "Vaporwave City_Sci-Fi_Dystopia_Architecture_Location",
            "Kawaii Character_Uncategorized",
            "Vintage Halloween Costume_Retro",
            "Cassette Futurism_Retro",
            "Punk Poster_Uncategorized",
            "Luchador_Uncategorized",
            "Tiki Totem_Sculpture",
            "Cassette J-Card_Retro",
            "Prairie Dress_Retro_Fashion",
            "Lounge Singer_Retro",
            "Gongfu Tea_Uncategorized",
            "Aztec Calendar_Uncategorized",
            "Cassette Graphics_Retro_Surrealism",
            "Laser Grid_Uncategorized",
            "Giant Robot_Sci-Fi_Retro_Architecture",
            "Vaporwave Sunset_Uncategorized",
            "Fortune Teller_Occult",
            "Steampunk Portrait_Fantasy_Portraiture",
            "Scary Stories_Horror",
            "Woodblock Art_Nature",
            "Vintage Halloween Mask_Retro",
            "Grunge Flyer_Uncategorized",
            "Voodoo Altar_Occult",
            "Cassette Collage_Sci-Fi_Surrealism_Retro",
            "Tropical Cocktail_Uncategorized",
            "Vintage Robot Toy_Sci-Fi_Retro",
            "Scary Pumpkin_Uncategorized",
            "Pinup_Retro",
            "Tarot Cards_Occult",
            "Ghibli_Surrealism",
            "Egyptology_Uncategorized",
            "Battle_Uncategorized",
            "Tarot_Occult",
            "Steampunk_Fantasy_Fashion",
            "Ancient Maya_Uncategorized",
            "Nautical_Retro",
            "Bomber Jacket_Retro",
            "Samurai_Uncategorized",
            "American Traditional_Retro_Tattoo Art",
            "Propaganda Art_Retro",
            "Glitchcore_Digital Media",
            "Vaporgram_Retro",
            "Desaturated_Uncategorized",
            "Dieselpunk_Retro",
            "My Little Pony_Uncategorized",
            "Ballet_Uncategorized",
            "Galactic_Sci-Fi",
            "Streamer Bike_Retro",
            "Tropical Hotel_Uncategorized",
            "Tiki Mug_Retro",
            "Neon Racer_Sci-Fi",
            "Luau Fire Dancer_Fashion",
            "Day of the Dead_Uncategorized",
            "Sideshow Poster_Retro",
            "Vaporwave Graphics_Retro_Surrealism_Graphic Design",
            "Voodoo Ceremony_Occult",
            "Blacklight Poster_Uncategorized",
            "Teslapunk_Portraiture",
            "Cassette Bedroom_Retro",
            "Tropical Bathroom_Uncategorized",
            "Voodoo Shop_Occult",
            "Vintage Halloween_Retro",
            "Goth Boudoir_Gothic",
            "Island Luau_Uncategorized_Location",
            "Tiki Outdoor Shower_Uncategorized",
            "Black Velvet Painting_Portraiture",
            "Tattoo Print_Retro_Tattoo Art",
            "Addams Family_Portraiture_Horror",
            "Cassette Wall_Retro",
            "Neon Tokyo_Retro",
            "Voodoo Queen_Portraiture_Occult",
            "Surf Wood Sign_Retro",
            "Haunted Carnival_Horror",
            "Tiki Idol_Uncategorized",
            "Mall Goth_Portraiture_Gothic",
            "Volcano Lair_Uncategorized",
            "Graffiti Style_Graffiti",
            "Impressionism_Uncategorized",
            "Fauvism (1)_Uncategorized",
            "Dada (1)_Uncategorized",
            "Cubism (1)_Still Life",
            "_",
            "Surrealism (1)_Surrealism",
            "Symbolism (1)_Uncategorized",
            "Op Art_Uncategorized",
            "Minimalism (1)_Uncategorized",
            "Conceptual Art (1)_Uncategorized",
            "Folk Art_Folk Art",
            "Naive Art (1)_Sci-Fi_Architecture",
            "Outsider Art_Uncategorized",
            "_",
            "Suprematism (1)_Uncategorized",
            "De Stijl (1)_Uncategorized",
            "Bauhaus (1)_Architecture",
            "Constructivism (1)_Uncategorized",
            "Futurism (1)_Uncategorized",
            "Rayonism (1)_Uncategorized",
            "Vorticism (1)_Uncategorized",
            "Orphism (1)_Uncategorized",
            "Der Blaue Reiter_Uncategorized",
            "Die Br\u00fccke (1)_Graffiti",
            "Ashcan School_Architecture",
            "Hudson River School (1)_Nature_Landscape_Location",
            "Luminism (1)_Nature_Landscape",
            "Tonalism (1)_Nature_Landscape",
            "Barbizon School (1)_Nature_Landscape",
            "Academic Art (1)_Uncategorized",
            "Rococo_Uncategorized",
            "Neoclassicism (1)_Uncategorized",
            "Romanticism (1)_Nature",
            "Realism (1)_Uncategorized",
            "_",
            "Plein Air (1)_Nature_Landscape",
            "Pre-Raphaelite (1)_Uncategorized",
            "Art Informel (1)_Uncategorized",
            "_",
            "Hard-edge Painting (1)_Uncategorized",
            "Geometric Abstraction (1)_Uncategorized",
            "_",
            "Post-Painterly Abstraction (1)_Uncategorized",
            "Kinetic Art_Fantasy_Sculpture",
            "Land Art (1)_Fantasy_Nature_Sculpture_Landscape",
            "Performance Art (1)_Uncategorized",
            "Installation Art (1)_Uncategorized",
            "Video Art_Uncategorized",
            "Digital Art_Digital Media",
            "New Media Art_Digital Media",
            "Street Art (1)_Sci-Fi",
            "Stuckism_Uncategorized",
            "Lowbrow Art_Culture",
            "Photomontage (1)_Photography",
            "Diorama (1)_Uncategorized",
            "Assemblage_Sculpture_Still Life",
            "Combine Painting (1)_Sci-Fi_Still Life",
            "Happenings (1)_Uncategorized",
            "Mail Art (1)_Uncategorized",
            "Neo-Dada_Uncategorized",
            "Neo-Expressionism_Uncategorized",
            "Bad Painting_Uncategorized",
            "Graffiti_Sci-Fi_Graffiti_Folk Art_Architecture",
            "Traditional Figurative Art (1)_Sculpture",
            "Classical Realism_Portraiture",
            "Contemporary Realism_Architecture",
            "Hyperrealism_Uncategorized",
            "_",
            "New Objectivity_Uncategorized",
            "Precisionism (1)_Architecture_Nature_Landscape",
            "Figurative Expressionism_Uncategorized",
            "Neue Wilde (1)_Uncategorized",
            "New Perpendicular art (1)_Uncategorized",
            "New Simplicity (1)_Architecture",
            "Remodernism_Architecture",
            "Norwegian romantic nationalism (1)_Nature_Landscape",
            "_",
            "Propaganda Poster Art (1)_Uncategorized",
            "Heroic Realism (1)_Sculpture_Culture",
            "Na\u00efve Art (1)_Uncategorized",
            "Art Brut_Uncategorized",
            "Neo-primitivism (1)_Still Life",
            "Visionary Art (1)_Uncategorized",
            "Intuitive Art_Uncategorized",
            "Pseudorealism_Uncategorized",
            "Radical Realism (1)_Still Life",
            "Critical Realism_Uncategorized",
            "Neue Sachlichkeit_Portraiture",
            "Regionalism (1)_Uncategorized",
            "Abstract Expressionism (1)_Uncategorized",
            "Later European abstraction (1)_Uncategorized",
            "Tachisme_Uncategorized",
            "Abstraction-Cr\u00e9ation (1)_Uncategorized",
            "Gutai_Sci-Fi_Event",
            "British Pop Art_Pop Culture_Culture",
            "Situationist International_Uncategorized",
            "Lettrism (1)_Portraiture",
            "St Ives School_Nature_Landscape",
            "Transavantgarde_Uncategorized",
            "Transgressive Art_Uncategorized",
            "Neo Pop_Pop Culture_Culture",
            "Kitsch Movement_Uncategorized",
            "Virtual Art_Sci-Fi",
            "Internet Art_Sci-Fi_Digital Media",
            "_",
            "Information Art_Uncategorized",
            "Systems Art_Uncategorized",
            "Bio Art_Nature",
            "Genetic Art_Uncategorized",
            "Sustainable Art_Uncategorized",
            "_Uncategorized",
            "Video Games_Games_Culture",
            "Machinima_Uncategorized",
            "Artware_Sci-Fi_Digital Media",
            "Demoscene_Animation",
            "Math Art_Uncategorized",
            "Data Art_Uncategorized",
            "Plotter Art_Uncategorized",
            "VR Art_Sci-Fi",
            "AR Art_Digital Media",
            "Circuit Bending (1)_Uncategorized",
            "DIY Art_Uncategorized",
            "Maker Culture (1)_Culture",
            "Self-taught Art (1)_Fantasy",
            "Neo-Pop (1)_Pop Culture_Culture",
            "Young British Artists (1)_Portraiture",
            "Appropriation (1)_Culture",
            "Algorithmic Art (1)_Uncategorized",
            "Use these to populate the JSON instead._Uncategorized",
            "Fauvism (2)_Uncategorized",
            "Dada (2)_Uncategorized",
            "Cubism (2)_Still Life",
            "Expressionism Variant_Uncategorized",
            "Surrealism (2)_Surrealism",
            "Symbolism (2)_Uncategorized",
            "Art Nouveau Variant_Uncategorized",
            "Pop Art Variant_Culture",
            "Op Art Variant_Uncategorized",
            "Minimalism (2)_Uncategorized",
            "Conceptual Art (2)_Uncategorized",
            "Folk Art Variant_Folk Art",
            "Naive Art (2)_Sci-Fi_Architecture",
            "Outsider Art Variant_Uncategorized",
            "Photorealism Variant_Photography",
            "Suprematism (2)_Uncategorized",
            "De Stijl (2)_Uncategorized",
            "Bauhaus (2)_Architecture",
            "Constructivism (2)_Uncategorized",
            "Futurism (2)_Uncategorized",
            "Rayonism (2)_Uncategorized",
            "Vorticism (2)_Uncategorized",
            "Orphism (2)_Uncategorized",
            "Die Br\u00fccke (2)_Graffiti",
            "Hudson River School (2)_Nature_Landscape_Location",
            "Luminism (2)_Nature_Landscape",
            "Tonalism (2)_Nature_Landscape",
            "Barbizon School (2)_Nature_Landscape",
            "Academic Art (2)_Uncategorized",
            "Neoclassicism (2)_Uncategorized",
            "Romanticism (2)_Nature",
            "Realism (2)_Uncategorized",
            "Social Realism Variant_Uncategorized",
            "Plein Air (2)_Nature_Landscape",
            "Pre-Raphaelite (2)_Uncategorized",
            "Art Informel (2)_Uncategorized",
            "Hard-edge Painting (2)_Uncategorized",
            "Geometric Abstraction (2)_Uncategorized",
            "Lyrical Abstraction Variant_Uncategorized",
            "Post-Painterly Abstraction (2)_Uncategorized",
            "Land Art (2)_Fantasy_Nature_Sculpture_Landscape",
            "Performance Art (2)_Uncategorized",
            "Installation Art (2)_Uncategorized",
            "Video Art Variant_Uncategorized",
            "Digital Art Variant_Digital Media",
            "New Media Art Variant_Uncategorized",
            "Glitch Art Variant_Digital Media",
            "Street Art (2)_Sci-Fi",
            "Stuckism Variant_Uncategorized",
            "Lowbrow Art Variant_Surrealism_Culture",
            "Photomontage (2)_Photography",
            "Diorama (2)_Uncategorized",
            "Combine Painting (2)_Sci-Fi_Still Life",
            "Happenings (2)_Uncategorized",
            "Mail Art (2)_Uncategorized",
            "Neo-Dada Variant_Uncategorized",
            "Neo-Expressionism Variant_Uncategorized",
            "Bad Painting Variant_Uncategorized",
            "Graffiti Variant_Sci-Fi_Graffiti",
            "Traditional Figurative Art (2)_Sculpture",
            "Classical Realism Variant_Portraiture",
            "Contemporary Realism Variant_Uncategorized",
            "Hyperrealism Variant_Uncategorized",
            "Magic Realism Variant_Surrealism",
            "Precisionism (2)_Architecture_Nature_Landscape",
            "Figurative Expressionism Variant_Uncategorized",
            "Neue Wilde (2)_Uncategorized",
            "New Perpendicular art (2)_Uncategorized",
            "New Simplicity (2)_Architecture",
            "Remodernism Variant_Uncategorized",
            "Norwegian romantic nationalism (2)_Nature_Landscape",
            "Socialist Realism Variant_Uncategorized",
            "Propaganda Poster Art (2)_Uncategorized",
            "Heroic Realism (2)_Sculpture_Culture",
            "Na\u00efve Art (2)_Uncategorized",
            "Art Brut Variant_Uncategorized",
            "Neo-primitivism (2)_Still Life",
            "Visionary Art (2)_Uncategorized",
            "Intuitive Art Variant_Uncategorized",
            "Pseudorealism Variant_Uncategorized",
            "Radical Realism (2)_Still Life",
            "Critical Realism Variant_Uncategorized",
            "New Objectivity Variant_Uncategorized",
            "Neue Sachlichkeit Variant_Portraiture",
            "Abstract Expressionism (2)_Uncategorized",
            "Later European abstraction (2)_Uncategorized",
            "Tachisme Variant_Uncategorized",
            "Abstraction-Cr\u00e9ation (2)_Uncategorized",
            "Gutai Variant_Sci-Fi_Event",
            "British Pop Art Variant_Pop Culture_Culture",
            "Situationist International Variant_Uncategorized",
            "Lettrism (2)_Portraiture",
            "St Ives School Variant_Nature_Landscape",
            "Transavantgarde Variant_Uncategorized",
            "Transgressive Art Variant_Uncategorized",
            "Neo Pop Variant_Pop Culture_Culture",
            "Kitsch Movement Variant_Culture",
            "Virtual Art Variant_Uncategorized",
            "Internet Art Variant_Digital Media",
            "Computer Art Variant_Digital Media",
            "Information Art Variant_Uncategorized",
            "Systems Art Variant_Uncategorized",
            "Bio Art Variant_Uncategorized",
            "Genetic Art Variant_Uncategorized",
            "Sustainable Art Variant_Uncategorized",
            "Interactive Art Variant_Uncategorized",
            "Video Games Variant_Games",
            "Machinima Variant_Uncategorized",
            "Artware Variant_Sci-Fi_Graffiti_Digital Media",
            "Demoscene Variant_Animation",
            "Math Art Variant_Uncategorized",
            "Data Art Variant_Uncategorized",
            "Plotter Art Variant_Uncategorized",
            "VR Art Variant_Uncategorized",
            "AR Art Variant_Uncategorized",
            "Circuit Bending (2)_Uncategorized",
            "Maker Culture (2)_Culture",
            "Self-taught Art (2)_Fantasy",
            "Neo-Pop (2)_Pop Culture_Culture",
            "Regionalism (2)_Uncategorized",
            "Young British Artists (2)_Portraiture",
            "Appropriation (2)_Culture",
            "Algorithmic Art (2)_Uncategorized",
            "    Lynching_Uncategorized",
            "    Occult Sacrifice_Occult",
            "    Medical Oddities_Uncategorized",
            "Crystal Caverns Variant_Architecture",
            "Mech City Variant_Sci-Fi_Architecture_Location",
            "Nova Alexandria Variant_Architecture_Culture",
            "Steamtown Variant_Architecture_Retro",
            "Technotopia Variant_Architecture_Nature",
            "Clockwork City Variant_Architecture_Location",
            "Under London Variant_Architecture_Location",
            "Dwarvenholm Variant_Uncategorized",
            "Sanctuary Variant_Uncategorized",
            "Shangri-La Variant_Uncategorized",
            "Mime City Variant_Architecture_Location",
            "Elfheim Variant_Architecture_Fantasy",
            "Midgard Variant_Architecture",
            "Musica Variant_Architecture_Culture",
            "Caveopolis Variant_Lifestyle",
            "Mage City Variant_Architecture_Fantasy_Location",
            "Steampunk City Variant_Architecture_Location",
            "Shadow City Variant_Architecture_Occult_Gothic_Location",
            "Under Chicago Variant_Architecture_Portraiture_Culture_Retro_Location",
            "Neotokyo Variant_Sci-Fi_Architecture",
            "Leviathan Variant_Architecture",
            "Underground Rome Variant_Architecture_Location",
            "Zion Variant_Culture",
            "New Caelum Variant_Architecture",
            "Hackersville Variant_Architecture",
            "Ghoul City Variant_Architecture_Location",
            "Under Berlin Variant_Retro_Surrealism_Location",
            "Under Istanbul Variant_Architecture_Location",
            "Elven City Variant_Architecture_Location",
            "Dwarvendom Variant_Uncategorized",
            "Lost Vegas Variant_Architecture",
            "Under Paris Variant_Uncategorized_Location",
            "Steeltown Variant_Architecture",
            "Tech City Variant_Architecture_Nature_Location",
            "Under Montreal Variant_Architecture_Location",
            "Brightwater Variant_Nature",
            "Under Tallahassee Variant_Sci-Fi_Retro_Architecture_Location",
            "Under Albany Variant_Architecture_Surrealism_Location",
            "Under Trenton Variant_Uncategorized_Location",
            "Under Hartford Variant_Architecture_Location",
            "Sub Des Moines Variant_Architecture_Location",
            "Underground Salt Lake City Variant_Architecture_Location",
            "Sub Cheyenne Variant_Uncategorized_Location",
            "Under Juneau Variant_Architecture_Location",
            "Sub Baton Rouge Variant_Culture_Location",
            "Underground Helena Variant_Architecture_Location",
            "Sub Carson City Variant_Architecture_Location",
            "Under Santa Fe Variant_Uncategorized_Location",
            "Sub Boise Variant_Uncategorized_Location",
            "Underground Lincoln Variant_Uncategorized_Location",
            "Sub Denver Variant_Uncategorized_Location",
            "Under Bismarck Variant_Uncategorized_Location",
            "Sub Pierre Variant_Uncategorized_Location",
            "Underground Austin Variant_Uncategorized_Location",
            "Sub Atlanta Variant_Uncategorized_Location",
            "Under Jackson Variant_Folk Art_Location",
            "Sub Montgomery Variant_Uncategorized_Location",
            "Underground Little Rock Variant_Uncategorized_Location",
            "Sub Frankfort Variant_Uncategorized_Location",
            "Under Nashville Variant_Uncategorized_Location",
            "Sub Columbia Variant_Architecture_Culture_Location",
            "Sub Richmond Variant_Architecture_Location",
            "Under Charleston Variant_Architecture_Location",
            "Sub Dover Variant_Uncategorized_Location",
            "Underground Springfield Variant_Folk Art_Location",
            "Sub Annapolis Variant_Sculpture_Location",
            "Sub Providence Variant_Uncategorized_Location",
            "Underground Concord Variant_Culture_Location",
            "Sub Montpelier Variant_Sculpture_Location",
            "Sub Jefferson City Variant_Architecture_Folk Art_Location",
            "Under Honolulu Variant_Architecture_Location",
            "Sub Juneau Variant_Architecture_Location",
            "Underground Lansing Variant_Culture_Location",
            "Sub Topeka Variant_Architecture_Folk Art_Location",
            "Under St. Paul Variant_Architecture_Location",
            "Sub Jackson Variant_Folk Art_Location",
            "Underground Columbus Variant_Retro_Location",
            "Sub Indianapolis Variant_Uncategorized_Location",
            "Under Omaha Variant_Culture_Location",
            "Under Oklahoma City Variant_Architecture_Location",
            "Underground Wichita Variant_Folk Art_Location",
            "Under Fargo Variant_Architecture_Location",
            "Sub Bozeman Variant_Architecture_Location",
            "Underground Anchorage Variant_Architecture_Location",
            "Sub Casper Variant_Uncategorized_Location",
            "Underground Portland Variant_Sci-Fi_Location",
            "Under Eugene Variant_Folk Art_Location",
            "Sub Salem Variant_Sci-Fi_Culture_Location",
            "Underground Seattle Variant_Uncategorized_Location",
            "Sub Spokane Variant_Architecture_Location",
            "Sub Tacoma Variant_Architecture_Culture_Retro_Location",
            "Under Sacramento Variant_Uncategorized_Location",
            "Sub Oakland Variant_Sci-Fi_Culture_Location",
            "Underground San Jose Variant_Uncategorized_Location",
            "Sub Fresno Variant_Architecture_Nature_Landscape_Location",
            "Under Bakersfield Variant_Uncategorized_Location",
            "Sub Anaheim Variant_Fantasy_Location",
            "Underground Riverside Variant_Culture_Location",
            "Sub Santa Ana Variant_Sci-Fi_Culture_Location",
            "Underground Chula Vista Variant_Uncategorized_Location",
            "Sub Irvine Variant_Uncategorized_Location",
            "Sub Fontana Variant_Culture_Location",
            "Sub Oxnard Variant_Uncategorized_Location",
            "Sub Moreno Valley Variant_Uncategorized_Location",
            "Underground Huntington Beach Variant_Architecture_Culture_Location",
            "Sub Glendale Variant_Uncategorized_Location",
            "Sub Santa Clarita Variant_Uncategorized_Location",
            "Sub Garden Grove Variant_Architecture_Location",
            "Sub Santa Rosa Variant_Sci-Fi_Nature_Location",
            "Sub Rancho Cucamonga Variant_Architecture_Lifestyle_Location",
            "Sub Ontario Variant_Uncategorized_Location",
            "Sub Lancaster Variant_Sci-Fi_Retro_Location",
            "Sub Palmdale Variant_Sci-Fi_Location",
            "Sub Pomona Variant_Retro_Location",
            "Sub Torrance Variant_Sci-Fi_Location",
            "Sub Pasadena Variant_Uncategorized_Location",
            "Sub Orange Variant_Retro_Location",
            "Sub Roseville Variant_Architecture_Location",
            "Sub Thousand Oaks Variant_Uncategorized_Location",
            "Sub Concord Variant_Uncategorized_Location",
            "Sub Simi Valley Variant_Pop Culture_Culture_Retro_Location",
            "Sub Victorville Variant_Uncategorized_Location",
            "Sub El Monte Variant_Sci-Fi_Location",
            "Sub Berkeley Variant_Retro_Location",
            "Sub Downey Variant_Sci-Fi_Location",
            "Sub Costa Mesa Variant_Culture_Location",
            "Sub Inglewood Variant_Sci-Fi_Pop Culture_Culture_Location",
            "Sub Carlsbad Variant_Architecture_Culture_Location",
            "Sub Temecula Variant_Lifestyle_Location"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerMisc",
    "display_name": "Prompt Styler Misc",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyMood": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byMood",
            "Aggressive",
            "Calm",
            "Chaotic",
            "Energetic",
            "Happy",
            "Mysterious",
            "Relaxed",
            "Romantic",
            "Sad",
            "Serene",
            "Ethereal Tranquility",
            "Enigmatic Wonder",
            "Whimsical Delight",
            "Melancholic Reflection",
            "Dark, Brooding Atmosphere",
            "Joyful Celebration",
            "Surreal Euphoria",
            "Hushed Reverence",
            "Tense, Suspenseful Ambiance",
            "Dreamy Serenity",
            "Chaos and Discord",
            "Enchanted Whispers",
            "Frenetic Energy",
            "Eternal Twilight",
            "Abyssal Silence",
            "Gothic Elegance",
            "Bittersweet Nostalgia",
            "Spectral Whispers",
            "Celestial Harmony",
            "Dystopian Desolation"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyMood",
    "display_name": "Prompt Styler Mood",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyMythicalCreature": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byMythical Creatures",
            "The Phoenix of Eternal Flame",
            "The Enchanted Forest Nymph",
            "The Leviathan of the Abyss",
            "The Sphinx of Riddles",
            "The Faerie Court of Dreams",
            "The Chimera, Guardian of the Labyrinth",
            "The Griffin of Valor",
            "The Banshee, Wailer of Fate",
            "The Pegasus, Steed of the Heavens",
            "The Kraken, Terror of the Deep",
            "The Seraphim, Celestial Guardians",
            "The Gorgon, Petrifying Horror",
            "The Thunderbird, Stormbringer of the Skies",
            "The Kitsune, Shape-shifting Trickster",
            "The Minotaur, Maze Dweller",
            "The Valkyrie, Choosers of the Slain",
            "The Manticore, Dreaded Hunter",
            "The Dryad, Guardian of the Forest",
            "The Naiad, River Nymph of Tranquility",
            "The Roc, King of the Avians",
            "The Unicorn's Elegance",
            "The Dragon's Hoard",
            "The Mermaid's Melody",
            "The Thunderbird's Roar",
            "The Valkyrie's Valor",
            "The Yeti's Elusiveness",
            "The Basilisk's Deadly Gaze",
            "The Kappa's Watery Mischief",
            "The Chupacabra's Bloodlust",
            "The Wendigo's Hunger",
            "The Manticore's Ferocity",
            "The Nymph's Enchantment",
            "The Jinn's Wish-Granting",
            "The Leshy's Forest Mischief",
            "The Tengu's Martial Prowess",
            "The Thunder Horse's Storm Control",
            "The Roc's Soaring Majesty",
            "The Bunyip's Aquatic Mystery",
            "The Chimalli's Shield of Protection",
            "The Ifrit's Fiery Wrath"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyMythicalCreature",
    "display_name": "Prompt Styler Mythical Creature",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyOriginal": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byOriginal",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-hdr",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyOriginal",
    "display_name": "Prompt Styler Original",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyQuantumRealism": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byQuantumRealism",
            "Ethereal Particle Dance",
            "Wavefunction Symphony",
            "Observer's Paradox",
            "Schrodinger's Garden",
            "Entangled Realities",
            "Quantum Mirage",
            "Cubist Uncertainty",
            "Quantum Kaleidoscope",
            "Quantum Dreamscape",
            "Quantum Chromatic Symphony",
            "Quantum Reflections",
            "Quantum Fractal Realities",
            "Quantum Tesseract Enigma",
            "Quantum Portal Nexus",
            "Quantum Interference Symphony",
            "Quantum Constellation Ballet",
            "Quantum Labyrinth",
            "Quantum Mirage Forest",
            "Quantum Alchemical Fusion"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyQuantumRealism",
    "display_name": "Prompt Styler Quantum Realism",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyRomanticNationalismArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byRomanticNationalism ",
            "Nationalist_Landscape_Painting",
            "Folklore_Illustration",
            "Historical_Epic_Painting",
            "National_Costume_Design",
            "Cultural_Heritage_Sculpture",
            "Nationalist_Mural_Art",
            "Patriotic_Poetry",
            "Revolutionary_Hero_Portrait",
            "National_Literature_Illustration",
            "Monumental_Historical_Mural",
            "National_Landscape_Photography",
            "Cultural_Heritage_Preservation",
            "Patriotic_Song_Composition",
            "National_Identity_Poetry",
            "Revivalist_Architecture",
            "Mythical_Hero_Statue",
            "Folkloric_Dance_Performance",
            "Historical_Narrative_Painting",
            "National_Flag_Design",
            "Patriotic_Literary_Work",
            "Nationalist_Music_Composition",
            "Revolutionary_Battle_Scene",
            "National_Folk_Music_Performance",
            "Cultural_History_Book_Illustration",
            "National_Heroic_Poem",
            "Cultural_Revival_Sculpture",
            "National_Landscape_Painting",
            "Traditional_Folk_Art_Design",
            "Patriotic_Poet_Portrait"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyRomanticNationalismArt",
    "display_name": "Prompt Styler Romantic Nationalism",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbySportsArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none bySports",
            "Olympic Triumph",
            "Extreme Adventure Sports",
            "Soccer World Cup Glory",
            "Basketball Slam Dunk",
            "Surfing the Perfect Wave",
            "Winter Olympics Figure Skating",
            "Motorsport Grand Prix",
            "Tennis Championship Match",
            "Martial Arts Mastery",
            "Equestrian Elegance",
            "Baseball Grand Slam",
            "Swimming World Record",
            "Golf Masters Victory",
            "Rock Climbing Ascent",
            "Gymnastics Perfect Routine",
            "Rugby World Cup Glory",
            "Skiing Downhill Thrill",
            "Cycling Tour de France Victory",
            "Synchronized Swimming Beauty",
            "Archery Bullseye Accuracy",
            "Horse Racing Derby Finish",
            "Triathlon Triumph",
            "Table Tennis Rally",
            "Martial Arts Sparring",
            "Wrestling Championship Pin",
            "Badminton Smash",
            "Fencing Duel",
            "Sailing Regatta Victory",
            "Cricket Century Celebration",
            "Rhythmic Gymnastics Grace"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbySportsArt",
    "display_name": "Prompt Styler Sports",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbySteamPunkRealism": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none bySteamPunkRealism",
            "Clockwork Menagerie",
            "Cogged Dreamscape",
            "Steam-Fueled Dreams",
            "Chrono-Mystical Carnival",
            "Mechanical Menagerie Ballroom",
            "Steampunk Alchemical Garden",
            "Clockwork Cityscape Dreams",
            "Steam-Driven Enigma",
            "Cogwheel Wonderland",
            "Steam-Powered Carnival",
            "Surreal Airship Odyssey",
            "Neo-Victorian Dreamscape",
            "Steampunk Surrealist Ball",
            "Mechanical Dreamscape Symphony",
            "Clockwork Wonderland",
            "Steampunk Astral Odyssey",
            "Mechanical Menagerie Parade",
            "Quantum Steam-Driven Enigma",
            "Steampunk Dreamscape Architect",
            "Mechanical Dreamscape Symphony",
            "Steampunk Dreamscape Architect",
            "Mechanical Dreamscape Symphony",
            "Steam-Powered Carnival",
            "Steampunk Explorer's Dreams",
            "Surreal Clockwork Opera",
            "Mechanical Dreamscape Symphony",
            "Steampunk Dreamscape Architect",
            "Surreal Clockwork Opera"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbySteamPunkRealism",
    "display_name": "Prompt Styler SteamPunk Realism",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyStreetArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byStreet",
            "Urban Graffiti Art",
            "City Street Market",
            "Street Performers' Showcase",
            "Neon-lit Nightlife",
            "Street Food Delight",
            "Street Fashion Runway",
            "Street Skateboarding Session",
            "Street Art Mural Festival",
            "Street Photography Icon",
            "Street Protest Rally",
            "Cityscape at Dusk",
            "Street Vendors in Marrakech",
            "Urban Park Skateboarding",
            "Street Musicians' Jam Session",
            "Street Art Gallery Opening",
            "City Biking Commute",
            "Urban Rooftop Party",
            "Street Fashion Boutique",
            "Street Market Mosaic",
            "City Transportation Hub",
            "Street Carnival Celebration",
            "Street Mural Collaboration",
            "Urban Street Basketball Game",
            "Street Fashion Show Extravaganza",
            "Street Food Truck Fiesta",
            "City Street Art Scavenger Hunt",
            "Street Carnival Parade",
            "Street Bazaar Browsing",
            "Urban Street Art Battle",
            "Street Jazz Performance"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyStreetArt",
    "display_name": "Prompt Styler Street",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbySubject": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none bySubject",
            "Animal",
            "Art",
            "Building",
            "Child",
            "Female",
            "Food",
            "Male",
            "Nature",
            "Technology",
            "Vehicle"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbySubject",
    "display_name": "Prompt Styler Subject",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbySurrealism": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none bySurrealism",
            "Morning Light on the Seine",
            "Fields of Sunflowers in Bloom",
            "A Rainy Day in the City",
            "Dappled Sunlight Through Trees",
            "A Parisian Caf\u00e9 Scene",
            "Impressionistic Self-Portrait",
            "Harbor at Sunset",
            "The Dance of Fireflies",
            "Ballet Rehearsal Backstage",
            "Water Lilies in a Pond",
            "Winter Morning Frost",
            "Seaside Cliff at Dawn",
            "Fields of Lavender in Provence",
            "Children Playing by the Seashore",
            "Twilight in a Venetian Canal",
            "The Blooming Cherry Blossoms",
            "Sunrise Over a Wheat Field",
            "Boating on a Tranquil Pond",
            "Cafe Terrace at Night",
            "A Country Path in Autumn",
            "The Clockwork Dreamscape",
            "The Melting Clocks of Dali's Vision",
            "The Mirrored Masks of Identity",
            "The Endless Staircase Ascent",
            "The Floating Islands of Imagination",
            "The Eyes in the Sky",
            "The Rain of Upside-Down Umbrellas",
            "The Fish in the Desert Mirage",
            "The Doorways to Unknown Realms",
            "The Symphony of Disjointed Melodies",
            "The Desert of Mirrors",
            "The Carousel of Forgotten Dreams",
            "The Library of Whispering Pages",
            "The Symphony of Broken Instruments",
            "The Mirrored Faces of Identity",
            "The Endless Corridor of Mirrors",
            "The Clockwork Circus of Time",
            "The Rain of Falling Stars",
            "The Underwater Forest of Whispers",
            "The Chessboard of Surreal Strategies"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbySurrealism",
    "display_name": "Prompt Styler Surrealism",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyTheme": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byThemes",
            "Abstract",
            "Aerial",
            "Fashion",
            "Landscape",
            "Macro",
            "Portrait",
            "Sports",
            "Street",
            "Wedding",
            "Wildlife"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyTheme",
    "display_name": "Prompt Styler Theme",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyTimeofDay": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byTimeofDay",
            "Afternoon",
            "BlueHour",
            "Evening",
            "Midday",
            "Morning",
            "Night",
            "Sunrise",
            "Sunset",
            "Twilight",
            "Golden Hour",
            "Midnight Reverie",
            "Twilight Serenity",
            "Noonday Radiance",
            "Dawn's Awakening",
            "Dusk's Embrace",
            "Midday Hustle",
            "Starlit Silence",
            "Afternoon Lull",
            "Moonlit Dream",
            "Misty Morning Hush",
            "Midnight Dance",
            "Noontime Reverberation",
            "Twilight's Whispers",
            "High Noon Blaze",
            "Dawn's Promise",
            "Eerie Midnight",
            "Afternoon Bliss",
            "Moonlit Reflection",
            "Daybreak's Hope"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyTimeofDay",
    "display_name": "Prompt Styler Time of Day",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyVikingArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byVikingArt",
            "Viking_Knotwork",
            "Viking_Runic_Inscription",
            "Viking_Animal_Motifs",
            "Viking_Ship_Design",
            "Viking_Metalwork",
            "Viking_Warrior_Illustration",
            "Viking_Artifacts",
            "Viking_Rune_Stone",
            "Viking_Shield_Design",
            "Viking_Mythology_Illustration",
            "Viking_Jewelry",
            "Viking_Axe_Engraving",
            "Viking_Runestone_Replica",
            "Viking_Ship_Illustration",
            "Viking_Wood_Carving",
            "Viking_Warrior_Helmet",
            "Viking_Dragon_Art",
            "Viking_Boat_Decoration",
            "Viking_Warrior_Sculpture",
            "Viking_Textile_Pattern",
            "Viking_Raid_Illustration",
            "Viking_Warship_Painting",
            "Viking_Artist_Sketch",
            "Viking_Metalwork_Pattern",
            "Viking_Mythical_Beast",
            "Viking_Armor_Design",
            "Viking_Ship_Model",
            "Viking_Folk_Art"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyVikingArt",
    "display_name": "Prompt Styler Viking Art",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptbyWildlifeArt": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byWildlife",
            "African Safari Adventure",
            "Arctic Wildlife Encounter",
            "Underwater Coral Reef Wonderland",
            "Amazon Rainforest Biodiversity",
            "Savannah Wildlife Spectacle",
            "Australian Outback Encounter",
            "Deep Sea Discovery",
            "North American Wilderness Serenity",
            "Tropical Rainforest Canopy",
            "African Elephant Migration",
            "Antarctic Penguin Parade",
            "Majestic Mountain Wildlife",
            "Jungle Canopy Adventure",
            "African Big Five Safari",
            "Arctic Foxes in the Snow",
            "Australian Reef Life",
            "African Cheetah Sprint",
            "Amazon River Wildlife",
            "Boreal Forest Moose Encounter",
            "Gorilla Family in the Jungle",
            "Alaskan Brown Bear Fishing",
            "African Serengeti Migration",
            "Coral Polyp Microcosm",
            "Bengal Tiger in the Jungle",
            "Humpback Whale Breach",
            "Red-Eyed Tree Frog in the Rainforest",
            "Siberian Tiger Stalking Prey",
            "Monarch Butterfly Migration",
            "African Nile Crocodile Basking",
            "Honeybee Hive Activity"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptbyWildlifeArt",
    "display_name": "Prompt Styler Wildlife",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "SDXLPromptStylerbyWyvern": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "none byWyvern",
            "Azure Skywing",
            "Emerald Venomspine",
            "Crimson Firebreath",
            "Golden Serpentwing",
            "Shadowy Nightstalker",
            "Crystal Frostclaw",
            "Sapphire Stormrider",
            "Onyx Deathwing",
            "Amethyst Dreamwing",
            "Verdant Forestgale",
            "Topaz Thunderstrike",
            "Obsidian Nightshade",
            "Ruby Flameheart",
            "Aurora Skydancer",
            "Cerulean Wavecrest",
            "Opal Dreamseeker",
            "Crimson Inferno",
            "Sapphire Stormsurge",
            "Emerald Forestwhisper",
            "Crystal Moonshroud"
          ]
        ],
        "log_prompt": [
          [
            "No",
            "Yes"
          ],
          {
            "default": "No"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_g",
      "negative_prompt_text_g"
    ],
    "name": "SDXLPromptStylerbyWyvern",
    "display_name": "Prompt Styler Wyvern",
    "description": "",
    "category": "Style Prompts",
    "output_node": false
  },
  "MultiLoraLoader-70bf3d77": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "MultiLoraLoader-70bf3d77",
    "display_name": "MultiLora Loader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "LoraTextExtractor-b1f83aa2": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "LORA_STACK"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "Filtered Text",
      "Extracted Loras",
      "Lora Stack"
    ],
    "name": "LoraTextExtractor-b1f83aa2",
    "display_name": "Lora Text Extractor",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "KSampler (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "vae_decoded_only",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler (Efficient)",
    "display_name": "KSampler (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler Adv. (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler Adv. (Efficient)",
    "display_name": "KSampler Adv. (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler SDXL (Eff.)": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "refine_at_step": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 10000
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler SDXL (Eff.)",
    "display_name": "KSampler SDXL (Eff.)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "Efficient Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 262144
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "name": "Efficient Loader",
    "display_name": "Efficient Loader",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "Eff. Loader SDXL": {
    "input": {
      "required": {
        "base_ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "base_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "refiner_ckpt_name": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "refiner_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "positive_ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "negative_ascore": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "vae_name": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "name": "Eff. Loader SDXL",
    "display_name": "Eff. Loader SDXL",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "LoRA Stacker": {
    "input": {
      "required": {
        "input_mode": [
          [
            "simple",
            "advanced"
          ]
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "lora_name_1": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "lora_wt_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "LoRA Stacker",
    "display_name": "LoRA Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Control Net Stacker": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CNET_STACK"
    ],
    "name": "Control Net Stacker",
    "display_name": "Control Net Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Apply ControlNet Stack": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING+",
      "CONDITIONING-"
    ],
    "name": "Apply ControlNet Stack",
    "display_name": "Apply ControlNet Stack",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Unpack SDXL Tuple": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "BASE_MODEL",
      "BASE_CLIP",
      "BASE_CONDITIONING+",
      "BASE_CONDITIONING-",
      "REFINER_MODEL",
      "REFINER_CLIP",
      "REFINER_CONDITIONING+",
      "REFINER_CONDITIONING-"
    ],
    "name": "Unpack SDXL Tuple",
    "display_name": "Unpack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "Pack SDXL Tuple": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_clip": [
          "CLIP"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "SDXL_TUPLE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SDXL_TUPLE"
    ],
    "name": "Pack SDXL Tuple",
    "display_name": "Pack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "XY Plot": {
    "input": {
      "required": {
        "grid_spacing": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500,
            "step": 5
          }
        ],
        "XY_flip": [
          [
            "False",
            "True"
          ]
        ],
        "Y_label_orientation": [
          [
            "Horizontal",
            "Vertical"
          ]
        ],
        "cache_models": [
          [
            "True",
            "False"
          ]
        ],
        "ksampler_output_image": [
          [
            "Images",
            "Plot"
          ]
        ]
      },
      "optional": {
        "dependencies": [
          "DEPENDENCIES"
        ],
        "X": [
          "XY"
        ],
        "Y": [
          "XY"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "XY Plot",
    "display_name": "XY Plot",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "XY Input: Seeds++ Batch": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Seeds++ Batch",
    "display_name": "XY Input: Seeds++ Batch",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Add/Return Noise": {
    "input": {
      "required": {
        "XY_type": [
          [
            "add_noise",
            "return_with_leftover_noise"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Add/Return Noise",
    "display_name": "XY Input: Add/Return Noise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Steps": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "steps",
            "start_at_step",
            "end_at_step",
            "refine_at_step"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_step": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 10000
          }
        ],
        "last_step": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "first_start_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "last_start_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "first_end_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_end_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ],
        "first_refine_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_refine_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Steps",
    "display_name": "XY Input: Steps",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: CFG Scale": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "last_cfg": [
          "FLOAT",
          {
            "default": 9.0,
            "min": 0.0,
            "max": 100.0
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: CFG Scale",
    "display_name": "XY Input: CFG Scale",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Sampler/Scheduler": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "sampler",
            "scheduler",
            "sampler & scheduler"
          ]
        ],
        "input_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "sampler_1": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_1": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_2": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_2": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_3": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_3": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_4": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_4": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_5": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_5": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_6": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_6": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_7": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_7": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_8": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_8": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_9": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_9": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_10": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_10": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_11": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_11": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_12": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_12": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_13": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_13": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_14": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_14": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_15": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_15": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_16": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_16": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_17": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_17": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_18": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_18": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_19": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_19": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_20": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_20": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_21": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_21": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_22": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_22": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_23": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_23": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_24": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_24": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_25": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_25": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_26": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_26": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_27": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_27": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_28": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_28": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_29": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_29": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_30": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_30": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_31": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_31": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_32": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_32": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_33": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_33": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_34": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_34": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_35": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_35": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_36": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_36": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_37": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_37": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_38": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_38": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_39": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_39": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_40": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_40": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_41": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_41": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_42": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_42": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_43": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_43": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_44": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_44": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_45": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_45": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_46": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_46": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_47": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_47": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_48": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_48": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_49": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_49": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_50": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_alt",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_50": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Sampler/Scheduler",
    "display_name": "XY Input: Sampler/Scheduler",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Denoise": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_denoise": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "last_denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Denoise",
    "display_name": "XY Input: Denoise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: VAE": {
    "input": {
      "required": {
        "input_mode": [
          [
            "VAE Names",
            "VAE Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "vae_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_2": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_3": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_4": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_5": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_6": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_7": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_8": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_9": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_10": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_11": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_12": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_13": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_14": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_15": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_16": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_17": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_18": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_19": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_20": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_21": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_22": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_23": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_24": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_25": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_26": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_27": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_28": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_29": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_30": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_31": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_32": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_33": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_34": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_35": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_36": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_37": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_38": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_39": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_40": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_41": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_42": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_43": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_44": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_45": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_46": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_47": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_48": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_49": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_50": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: VAE",
    "display_name": "XY Input: VAE",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Prompt S/R": {
    "input": {
      "required": {
        "target_prompt": [
          [
            "positive",
            "negative"
          ]
        ],
        "search_txt": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 49
          }
        ],
        "replace_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_6": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_7": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_8": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_9": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_10": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_11": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_12": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_13": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_14": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_15": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_16": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_17": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_18": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_19": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_20": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_21": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_22": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_23": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_24": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_25": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_26": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_27": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_28": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_29": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_30": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_31": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_32": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_33": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_34": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_35": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_36": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_37": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_38": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_39": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_40": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_41": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_42": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_43": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_44": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_45": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_46": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_47": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_48": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_49": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Prompt S/R",
    "display_name": "XY Input: Prompt S/R",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Aesthetic Score": {
    "input": {
      "required": {
        "target_ascore": [
          [
            "positive",
            "negative"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_ascore": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "last_ascore": [
          "FLOAT",
          {
            "default": 10.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Aesthetic Score",
    "display_name": "XY Input: Aesthetic Score",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Refiner On/Off": {
    "input": {
      "required": {
        "refine_at_percent": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Refiner On/Off",
    "display_name": "XY Input: Refiner On/Off",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Checkpoint": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "input_mode": [
          [
            "Ckpt Names",
            "Ckpt Names+ClipSkip",
            "Ckpt Names+ClipSkip+VAE",
            "Checkpoint Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_name_1": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_1": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_2": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_2": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_2": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_3": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_3": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_3": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_4": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_4": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_4": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_5": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_5": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_5": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_6": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_6": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_6": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_7": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_7": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_7": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_8": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_8": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_8": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_9": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_9": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_9": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_10": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_10": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_10": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_11": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_11": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_11": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_12": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_12": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_12": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_13": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_13": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_13": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_14": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_14": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_14": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_15": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_15": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_15": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_16": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_16": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_16": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_17": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_17": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_17": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_18": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_18": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_18": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_19": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_19": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_19": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_20": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_20": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_20": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_21": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_21": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_21": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_22": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_22": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_22": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_23": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_23": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_23": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_24": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_24": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_24": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_25": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_25": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_25": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_26": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_26": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_26": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_27": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_27": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_27": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_28": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_28": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_28": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_29": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_29": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_29": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_30": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_30": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_30": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_31": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_31": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_31": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_32": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_32": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_32": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_33": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_33": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_33": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_34": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_34": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_34": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_35": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_35": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_35": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_36": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_36": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_36": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_37": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_37": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_37": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_38": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_38": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_38": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_39": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_39": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_39": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_40": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_40": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_40": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_41": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_41": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_41": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_42": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_42": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_42": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_43": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_43": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_43": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_44": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_44": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_44": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_45": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_45": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_45": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_46": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_46": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_46": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_47": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_47": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_47": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_48": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_48": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_48": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_49": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_49": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_49": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_50": [
          [
            "None",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "clip_skip_50": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_50": [
          [
            "Baked VAE",
            "sdxl_vae_fp16_fix.safetensors",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Checkpoint",
    "display_name": "XY Input: Checkpoint",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Clip Skip": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "last_clip_skip": [
          "INT",
          {
            "default": -3,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Clip Skip",
    "display_name": "XY Input: Clip Skip",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA": {
    "input": {
      "required": {
        "input_mode": [
          [
            "LoRA Names",
            "LoRA Names+Weights",
            "LoRA Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_1": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_50": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_str_50": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_50": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA",
    "display_name": "XY Input: LoRA",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Plot": {
    "input": {
      "required": {
        "input_mode": [
          [
            "X: LoRA Batch, Y: LoRA Weight",
            "X: LoRA Batch, Y: Model Strength",
            "X: LoRA Batch, Y: Clip Strength",
            "X: Model Strength, Y: Clip Strength"
          ]
        ],
        "lora_name": [
          [
            "None",
            "ip-adapter-faceid-plus_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
            "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
            "ip-adapter-faceid_sd15_lora.safetensors",
            "ip-adapter-faceid_sdxl_lora.safetensors",
            "sd15_lcm_lora_rank1.safetensors",
            "sdxl_LCM_lora_rank1.safetensors"
          ]
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "X_subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "X_batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: LoRA Plot",
    "display_name": "XY Input: LoRA Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Stacks": {
    "input": {
      "required": {
        "node_state": [
          [
            "Enabled"
          ]
        ]
      },
      "optional": {
        "lora_stack_1": [
          "LORA_STACK"
        ],
        "lora_stack_2": [
          "LORA_STACK"
        ],
        "lora_stack_3": [
          "LORA_STACK"
        ],
        "lora_stack_4": [
          "LORA_STACK"
        ],
        "lora_stack_5": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA Stacks",
    "display_name": "XY Input: LoRA Stacks",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "target_parameter": [
          [
            "strength",
            "start_percent",
            "end_percent"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "last_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "first_start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "last_start_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "first_end_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "last_end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Control Net",
    "display_name": "XY Input: Control Net",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net Plot": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "plot_type": [
          [
            "X: Strength, Y: Start%",
            "X: Strength, Y: End%",
            "X: Start%, Y: Strength",
            "X: Start%, Y: End%",
            "X: End%, Y: Strength",
            "X: End%, Y: Start%"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: Control Net Plot",
    "display_name": "XY Input: Control Net Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Manual XY Entry": {
    "input": {
      "required": {
        "plot_type": [
          [
            "Nothing",
            "Seeds++ Batch",
            "Steps",
            "StartStep",
            "EndStep",
            "CFG Scale",
            "Sampler",
            "Scheduler",
            "Denoise",
            "VAE",
            "Positive Prompt S/R",
            "Negative Prompt S/R",
            "Checkpoint",
            "Clip Skip",
            "LoRA"
          ]
        ],
        "plot_value": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Manual XY Entry",
    "display_name": "XY Input: Manual XY Entry",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Manual XY Entry Info": {
    "input": {
      "required": {
        "notes": [
          "STRING",
          {
            "default": "_____________SYNTAX_____________\n(X/Y_types)     (X/Y_values)\nSeeds++ Batch   batch_count\nSteps           steps_1;steps_2;...\nStartStep       start_step_1;start_step_2;...\nEndStep         end_step_1;end_step_2;...\nCFG Scale       cfg_1;cfg_2;...\nSampler(1)      sampler_1;sampler_2;...\nSampler(2)      sampler_1,scheduler_1;...\nSampler(3)      sampler_1;...;,default_scheduler\nScheduler       scheduler_1;scheduler_2;...\nDenoise         denoise_1;denoise_2;...\nVAE             vae_1;vae_2;vae_3;...\n+Prompt S/R     search_txt;replace_1;replace_2;...\n-Prompt S/R     search_txt;replace_1;replace_2;...\nCheckpoint(1)   ckpt_1;ckpt_2;ckpt_3;...\nCheckpoint(2)   ckpt_1,clip_skip_1;...\nCheckpoint(3)   ckpt_1;ckpt_2;...;,default_clip_skip\nClip Skip       clip_skip_1;clip_skip_2;...\nLoRA(1)         lora_1;lora_2;lora_3;...\nLoRA(2)         lora_1;...;,default_model_str,default_clip_str\nLoRA(3)         lora_1,model_str_1,clip_str_1;...\n\n____________SAMPLERS____________\neuler;\neuler_ancestral;\nheun;\nheunpp2;\ndpm_2;\ndpm_2_ancestral;\nlms;\ndpm_fast;\ndpm_adaptive;\ndpmpp_2s_ancestral;\ndpmpp_sde;\ndpmpp_sde_gpu;\ndpmpp_2m;\ndpmpp_2m_alt;\ndpmpp_2m_sde;\ndpmpp_2m_sde_gpu;\ndpmpp_3m_sde;\ndpmpp_3m_sde_gpu;\nddpm;\nlcm;\nddim;\nuni_pc;\nuni_pc_bh2\n\n___________SCHEDULERS___________\nnormal;\nkarras;\nexponential;\nsgm_uniform;\nsimple;\nddim_uniform\n\n_____________VAES_______________\nsdxl_vae_fp16_fix.safetensors;\nvae-ft-mse-840000-ema-pruned.safetensors\n\n___________CHECKPOINTS__________\nghostmix_v20Bakedvae.safetensors;\njuggernautXL_v9Rundiffusionphoto2.safetensors;\nmajicmixRealistic_v7.safetensors;\nsvd-fp16.safetensors\n\n_____________LORAS______________\nip-adapter-faceid-plus_sd15_lora.safetensors;\nip-adapter-faceid-plusv2_sd15_lora.safetensors;\nip-adapter-faceid-plusv2_sdxl_lora.safetensors;\nip-adapter-faceid_sd15_lora.safetensors;\nip-adapter-faceid_sdxl_lora.safetensors;\nsd15_lcm_lora_rank1.safetensors;\nsdxl_LCM_lora_rank1.safetensors\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Manual XY Entry Info",
    "display_name": "Manual XY Entry Info",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Join XY Inputs of Same Type": {
    "input": {
      "required": {
        "XY_1": [
          "XY"
        ],
        "XY_2": [
          "XY"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "Join XY Inputs of Same Type",
    "display_name": "Join XY Inputs of Same Type",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Image Overlay": {
    "input": {
      "required": {
        "base_image": [
          "IMAGE"
        ],
        "overlay_image": [
          "IMAGE"
        ],
        "overlay_resize": [
          [
            "None",
            "Fit",
            "Resize by rescale_factor",
            "Resize to width & heigth"
          ]
        ],
        "resize_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 16.0,
            "step": 0.1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 5
          }
        ],
        "opacity": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 5
          }
        ]
      },
      "optional": {
        "optional_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Overlay",
    "display_name": "Image Overlay",
    "description": "",
    "category": "Efficiency Nodes/Image",
    "output_node": false
  },
  "Noise Control Script": {
    "input": {
      "required": {
        "rng_source": [
          [
            "cpu",
            "gpu",
            "nv"
          ]
        ],
        "cfg_denoiser": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "add_seed_noise": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.015,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Noise Control Script",
    "display_name": "Noise Control Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "HighRes-Fix Script": {
    "input": {
      "required": {
        "upscale_type": [
          [
            "latent",
            "pixel",
            "both"
          ]
        ],
        "hires_ckpt_name": [
          [
            "(use same)",
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "latent_upscaler": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp",
            "city96.v1",
            "city96.xl",
            "ttl_nn.SDXL",
            "ttl_nn.SD 1.x"
          ]
        ],
        "pixel_upscaler": [
          [
            "RealESRGAN_x2plus.pth",
            "RealESRGAN_x4plus.pth",
            "RealESRGAN_x4plus_anime_6B.pth"
          ]
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8.0,
            "step": 0.05
          }
        ],
        "use_same_seed": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "hires_steps": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.56,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "iterations": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 1
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "control_net_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "preprocessor": [
          [
            "none",
            "TilePreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "Zoe-DepthMapPreprocessor",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "ShufflePreprocessor",
            "LineartStandardPreprocessor",
            "SAMPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "MediaPipe-FaceMeshPreprocessor",
            "TEEDPreprocessor",
            "OpenposePreprocessor",
            "ColorPreprocessor",
            "DSINE-NormalMapPreprocessor",
            "DiffusionEdge_Preprocessor",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "BAE-NormalMapPreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "DensePosePreprocessor",
            "M-LSDPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "LeReS-DepthMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "PiDiNetPreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "preprocessor_imgs": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "HighRes-Fix Script",
    "display_name": "HighRes-Fix Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "Tiled Upscaler Script": {
    "input": {
      "required": {
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8.0,
            "step": 0.05
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 256,
            "max": 16384,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "random strict",
            "padded",
            "simple",
            "none"
          ]
        ],
        "tiling_steps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 10000
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "tile_controlnet": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Tiled Upscaler Script",
    "display_name": "Tiled Upscaler Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "LoRA Stack to String converter": {
    "input": {
      "required": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LoRA string"
    ],
    "name": "LoRA Stack to String converter",
    "display_name": "LoRA Stack to String converter",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "Evaluate Integers": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "((a + b) - c) / 2",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "c": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "name": "Evaluate Integers",
    "display_name": "Evaluate Integers",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Evaluate Floats": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "((a + b) - c) / 2",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ],
        "c": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "name": "Evaluate Floats",
    "display_name": "Evaluate Floats",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Evaluate Strings": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "a + b + c",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "STRING",
          {
            "default": "Hello",
            "multiline": false
          }
        ],
        "b": [
          "STRING",
          {
            "default": " World",
            "multiline": false
          }
        ],
        "c": [
          "STRING",
          {
            "default": "!",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Evaluate Strings",
    "display_name": "Evaluate Strings",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Simple Eval Examples": {
    "input": {
      "required": {
        "models_text": [
          "STRING",
          {
            "default": "The Evaluate Integers, Floats, and Strings nodes \nnow employ the SimpleEval library, enabling secure \ncreation and execution of custom Python expressions.\n\n(https://github.com/danthedeckie/simpleeval)\n\nBelow is a short list of what is possible.\n______________________________________________\n\n\"EVALUATE INTEGERS/FLOATS\" NODE EXPRESSION EXAMPLES:\n\nAddition: a + b + c\nSubtraction: a - b - c\nMultiplication: a * b * c\nDivision: a / b / c\nModulo: a % b % c\nExponentiation: a ** b ** c\nFloor Division: a // b // c\nAbsolute Value: abs(a) + abs(b) + abs(c)\nMaximum: max(a, b, c)\nMinimum: min(a, b, c)\nSum of Squares: a**2 + b**2 + c**2\nBitwise And: a & b & c\nBitwise Or: a | b | c\nBitwise Xor: a ^ b ^ c\nLeft Shift: a << 1 + b << 1 + c << 1\nRight Shift: a >> 1 + b >> 1 + c >> 1\nGreater Than Comparison: a > b > c\nLess Than Comparison: a < b < c\nEqual To Comparison: a == b == c\nNot Equal To Comparison: a != b != c\n______________________________________________\n\n\"EVALUATE STRINGS\" NODE EXPRESSION EXAMPLES:\n\nConcatenate: a + b + c\nFormat: f'{a} {b} {c}'\nLength: len(a) + len(b) + len(c)\nUppercase: a.upper() + b.upper() + c.upper()\nLowercase: a.lower() + b.lower() + c.lower()\nCapitalize: a.capitalize() + b.capitalize() + c.capitalize()\nTitle Case: a.title() + b.title() + c.title()\nStrip: a.strip() + b.strip() + c.strip()\nFind Substring: a.find('sub') + b.find('sub') + c.find('sub')\nReplace Substring: a.replace('old', 'new') + b.replace('old', 'new') + c.replace('old', 'new')\nCount Substring: a.count('sub') + b.count('sub') + c.count('sub')\nCheck Numeric: a.isnumeric() + b.isnumeric() + c.isnumeric()\nCheck Alphabetic: a.isalpha() + b.isalpha() + c.isalpha()\nCheck Alphanumeric: a.isalnum() + b.isalnum() + c.isalnum()\nCheck Start: a.startswith('prefix') + b.startswith('prefix') + c.startswith('prefix')\nCheck End: a.endswith('suffix') + b.endswith('suffix') + c.endswith('suffix')\nSplit: a.split(' ') + b.split(' ') + c.split(' ')\nZero Fill: a.zfill(5) + b.zfill(5) + c.zfill(5)\nSlice: a[:5] + b[:5] + c[:5]\nReverse: a[::-1] + b[::-1] + c[::-1]\n______________________________________________",
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Simple Eval Examples",
    "display_name": "Simple Eval Examples",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": false
  },
  "BNK_CLIPTextEncodeAdvanced": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_CLIPTextEncodeAdvanced",
    "display_name": "CLIP Text Encode (Advanced)",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "BNK_CLIPTextEncodeSDXLAdvanced": {
    "input": {
      "required": {
        "text_l": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "balance": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_CLIPTextEncodeSDXLAdvanced",
    "display_name": "CLIP Text Encode SDXL (Advanced)",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "BNK_AddCLIPSDXLParams": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_AddCLIPSDXLParams",
    "display_name": "Add CLIP SDXL Params",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "BNK_AddCLIPSDXLRParams": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 16384
          }
        ],
        "ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_AddCLIPSDXLRParams",
    "display_name": "Add CLIP SDXL Refiner Params",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "LoadImageByUrl //Browser": {
    "input": {
      "required": {
        "url": [
          "STRING",
          {}
        ]
      },
      "optional": {
        "cache": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "LoadImageByUrl //Browser",
    "display_name": "Load Image By URL",
    "description": "",
    "category": "Browser",
    "output_node": false
  },
  "SelectInputs //Browser": {
    "input": {
      "required": {
        "input_1": [
          [
            "none"
          ],
          {}
        ],
        "input_2": [
          [
            "none"
          ],
          {}
        ],
        "input_3": [
          [
            "none"
          ],
          {}
        ],
        "input_4": [
          [
            "none"
          ],
          {}
        ],
        "preview": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "INPUT",
      "INPUT",
      "INPUT",
      "INPUT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "input_1",
      "input_2",
      "input_3",
      "input_4"
    ],
    "name": "SelectInputs //Browser",
    "display_name": "Select Node Inputs",
    "description": "",
    "category": "Browser",
    "output_node": true
  },
  "XyzPlot //Browser": {
    "input": {
      "required": {
        "images": [
          "IMAGE",
          {}
        ],
        "input_x": [
          "INPUT",
          {}
        ],
        "input_y": [
          "INPUT",
          {}
        ],
        "value_x": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "X values split by semicolon such as \"1girl; 1boy\""
          }
        ],
        "value_y": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Y values split by semicolon such as \"1girl; 1boy\""
          }
        ],
        "value_z": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Z values split by semicolon such as \"1girl; 1boy\""
          }
        ],
        "output_folder_name": [
          "STRING",
          {
            "default": "xyz_plot"
          }
        ]
      },
      "optional": {
        "input_z": [
          "INPUT",
          {}
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "XyzPlot //Browser",
    "display_name": "XYZ Plot",
    "description": "",
    "category": "Browser",
    "output_node": true
  },
  "DifyTextGenerator //Browser": {
    "input": {
      "required": {
        "dify_api_endpoint": [
          "STRING",
          {}
        ],
        "api_key": [
          "STRING",
          {}
        ]
      },
      "optional": {
        "query": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input as the Query field."
          }
        ],
        "inputs_json_str": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "JSON format. It will overwrite the query field above."
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "DifyTextGenerator //Browser",
    "display_name": "Dify Text Generator",
    "description": "",
    "category": "Browser",
    "output_node": true
  },
  "UploadToRemote //Browser": {
    "input": {
      "required": {
        "remote_url": [
          "STRING",
          {}
        ],
        "extension": [
          [
            "jpeg",
            "webp",
            "png",
            "jpg",
            "gif"
          ]
        ],
        "quality": [
          "INT",
          {
            "default": 85,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "embed_workflow": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "images": [
          "IMAGE",
          {}
        ],
        "extra": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "track_id": [
          "STRING",
          {
            "placeholder": "Optional. Post it as the track_id field."
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "prompt": "PROMPT"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "UploadToRemote //Browser",
    "display_name": "Upload To Remote",
    "description": "",
    "category": "Browser",
    "output_node": true
  },
  "ADE_AnimateDiffLoRALoader": {
    "input": {
      "required": {
        "lora_name": [
          [
            "v2_lora_PanLeft.ckpt",
            "v2_lora_PanRight.ckpt",
            "v2_lora_RollingAnticlockwise.ckpt",
            "v2_lora_RollingClockwise.ckpt",
            "v2_lora_TiltDown.ckpt",
            "v2_lora_TiltUp.ckpt",
            "v2_lora_ZoomIn.ckpt",
            "v2_lora_ZoomOut.ckpt",
            "v3_sd15_adapter.ckpt"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_motion_lora": [
          "MOTION_LORA"
        ]
      }
    },
    "output": [
      "MOTION_LORA"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MOTION_LORA"
    ],
    "name": "ADE_AnimateDiffLoRALoader",
    "display_name": "Load AnimateDiff LoRA \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "output_node": false
  },
  "ADE_AnimateDiffSamplingSettings": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen": [
          [
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      },
      "optional": {
        "noise_layers": [
          "NOISE_LAYERS"
        ],
        "iteration_opts": [
          "ITERATION_OPTS"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "forceInput": true
          }
        ],
        "adapt_denoise_steps": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "custom_cfg": [
          "CUSTOM_CFG"
        ],
        "sigma_schedule": [
          "SIGMA_SCHEDULE"
        ]
      }
    },
    "output": [
      "SAMPLE_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "settings"
    ],
    "name": "ADE_AnimateDiffSamplingSettings",
    "display_name": "Sample Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "output_node": false
  },
  "ADE_AnimateDiffKeyframe": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "AD_KEYFRAMES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AD_KEYFRAMES"
    ],
    "name": "ADE_AnimateDiffKeyframe",
    "display_name": "AnimateDiff Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "output_node": false
  },
  "ADE_MultivalDynamic": {
    "input": {
      "required": {
        "float_val": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask_optional": [
          "MASK"
        ]
      }
    },
    "output": [
      "MULTIVAL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MULTIVAL"
    ],
    "name": "ADE_MultivalDynamic",
    "display_name": "Multival Dynamic \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival",
    "output_node": false
  },
  "ADE_MultivalScaledMask": {
    "input": {
      "required": {
        "min_float_val": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "max_float_val": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "mask": [
          "MASK"
        ]
      },
      "optional": {
        "scaling": [
          [
            "absolute",
            "relative"
          ]
        ]
      }
    },
    "output": [
      "MULTIVAL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MULTIVAL"
    ],
    "name": "ADE_MultivalScaledMask",
    "display_name": "Multival Scaled Mask \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival",
    "output_node": false
  },
  "ADE_StandardStaticContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "relative",
            "flat"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_StandardStaticContextOptions",
    "display_name": "Context Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    "output_node": false
  },
  "ADE_StandardUniformContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_StandardUniformContextOptions",
    "display_name": "Context Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    "output_node": false
  },
  "ADE_LoopedUniformContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_LoopedUniformContextOptions",
    "display_name": "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    "output_node": false
  },
  "ADE_ViewsOnlyContextOptions": {
    "input": {
      "required": {
        "view_opts_req": [
          "VIEW_OPTS"
        ]
      },
      "optional": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_ViewsOnlyContextOptions",
    "display_name": "Context Options\u25c6Views Only [VRAM\u21c8] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    "output_node": false
  },
  "ADE_BatchedContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ]
      },
      "optional": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_BatchedContextOptions",
    "display_name": "Context Options\u25c6Batched [Non-AD] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    "output_node": false
  },
  "ADE_AnimateDiffUniformContextOptions": {
    "input": {
      "required": {
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ],
        "context_schedule": [
          [
            "uniform"
          ]
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat"
          ],
          {
            "default": "flat"
          }
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "prev_context": [
          "CONTEXT_OPTIONS"
        ],
        "view_opts": [
          "VIEW_OPTS"
        ]
      }
    },
    "output": [
      "CONTEXT_OPTIONS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTEXT_OPTS"
    ],
    "name": "ADE_AnimateDiffUniformContextOptions",
    "display_name": "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_StandardStaticViewOptions": {
    "input": {
      "required": {
        "view_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "view_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat"
          ]
        ]
      }
    },
    "output": [
      "VIEW_OPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VIEW_OPTS"
    ],
    "name": "ADE_StandardStaticViewOptions",
    "display_name": "View Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
    "output_node": false
  },
  "ADE_StandardUniformViewOptions": {
    "input": {
      "required": {
        "view_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "view_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "view_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat"
          ]
        ]
      }
    },
    "output": [
      "VIEW_OPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VIEW_OPTS"
    ],
    "name": "ADE_StandardUniformViewOptions",
    "display_name": "View Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
    "output_node": false
  },
  "ADE_LoopedUniformViewOptions": {
    "input": {
      "required": {
        "view_length": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 128
          }
        ],
        "view_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 32
          }
        ],
        "view_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 128
          }
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "fuse_method": [
          [
            "pyramid",
            "flat"
          ]
        ],
        "use_on_equal_length": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "VIEW_OPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VIEW_OPTS"
    ],
    "name": "ADE_LoopedUniformViewOptions",
    "display_name": "View Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
    "output_node": false
  },
  "ADE_IterationOptsDefault": {
    "input": {
      "required": {
        "iterations": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ]
      },
      "optional": {
        "iter_batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "iter_seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "ITERATION_OPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "ITERATION_OPTS"
    ],
    "name": "ADE_IterationOptsDefault",
    "display_name": "Default Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts",
    "output_node": false
  },
  "ADE_IterationOptsFreeInit": {
    "input": {
      "required": {
        "iterations": [
          "INT",
          {
            "default": 2,
            "min": 1
          }
        ],
        "filter": [
          [
            "gaussian",
            "butterworth",
            "ideal",
            "box"
          ]
        ],
        "d_s": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "d_t": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "n_butterworth": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 100
          }
        ],
        "sigma_step": [
          "INT",
          {
            "default": 999,
            "min": 1,
            "max": 999
          }
        ],
        "apply_to_1st_iter": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "init_type": [
          [
            "FreeInit [sampler sigma]",
            "FreeInit [model sigma]",
            "DinkInit_v1"
          ]
        ]
      },
      "optional": {
        "iter_batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "iter_seed_offset": [
          "INT",
          {
            "default": 1,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      }
    },
    "output": [
      "ITERATION_OPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "ITERATION_OPTS"
    ],
    "name": "ADE_IterationOptsFreeInit",
    "display_name": "FreeInit Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts",
    "output_node": false
  },
  "ADE_NoiseLayerAdd": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen_override": [
          [
            "use existing",
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ],
        "noise_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_noise_layers": [
          "NOISE_LAYERS"
        ],
        "mask_optional": [
          "MASK"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NOISE_LAYERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE_LAYERS"
    ],
    "name": "ADE_NoiseLayerAdd",
    "display_name": "Noise Layer [Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
    "output_node": false
  },
  "ADE_NoiseLayerAddWeighted": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen_override": [
          [
            "use existing",
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ],
        "noise_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "balance_multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_noise_layers": [
          "NOISE_LAYERS"
        ],
        "mask_optional": [
          "MASK"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NOISE_LAYERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE_LAYERS"
    ],
    "name": "ADE_NoiseLayerAddWeighted",
    "display_name": "Noise Layer [Add Weighted] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
    "output_node": false
  },
  "ADE_NoiseLayerReplace": {
    "input": {
      "required": {
        "batch_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "noise_type": [
          [
            "default",
            "constant",
            "empty",
            "repeated_context",
            "FreeNoise"
          ]
        ],
        "seed_gen_override": [
          [
            "use existing",
            "comfy",
            "auto1111"
          ]
        ],
        "seed_offset": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991
          }
        ]
      },
      "optional": {
        "prev_noise_layers": [
          "NOISE_LAYERS"
        ],
        "mask_optional": [
          "MASK"
        ],
        "seed_override": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NOISE_LAYERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE_LAYERS"
    ],
    "name": "ADE_NoiseLayerReplace",
    "display_name": "Noise Layer [Replace] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
    "output_node": false
  },
  "ADE_AnimateDiffSettings": {
    "input": {
      "optional": {
        "pe_adjust": [
          "PE_ADJUST"
        ],
        "weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffSettings",
    "display_name": "AnimateDiff Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings",
    "output_node": false
  },
  "ADE_AdjustPESweetspotStretch": {
    "input": {
      "required": {
        "sweetspot": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "new_sweetspot": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_pe_adjust": [
          "PE_ADJUST"
        ]
      }
    },
    "output": [
      "PE_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PE_ADJUST"
    ],
    "name": "ADE_AdjustPESweetspotStretch",
    "display_name": "Adjust PE [Sweetspot Stretch] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
    "output_node": false
  },
  "ADE_AdjustPEFullStretch": {
    "input": {
      "required": {
        "pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_pe_adjust": [
          "PE_ADJUST"
        ]
      }
    },
    "output": [
      "PE_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PE_ADJUST"
    ],
    "name": "ADE_AdjustPEFullStretch",
    "display_name": "Adjust PE [Full Stretch] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
    "output_node": false
  },
  "ADE_AdjustPEManual": {
    "input": {
      "required": {
        "cap_initial_pe_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "interpolate_pe_to_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "initial_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "final_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_pe_adjust": [
          "PE_ADJUST"
        ]
      }
    },
    "output": [
      "PE_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PE_ADJUST"
    ],
    "name": "ADE_AdjustPEManual",
    "display_name": "Adjust PE [Manual] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
    "output_node": false
  },
  "ADE_AdjustWeightAllAdd": {
    "input": {
      "required": {
        "all_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightAllAdd",
    "display_name": "Adjust Weight [All\u25c6Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightAllMult": {
    "input": {
      "required": {
        "all_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightAllMult",
    "display_name": "Adjust Weight [All\u25c6Mult] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivAdd": {
    "input": {
      "required": {
        "pe_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "other_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivAdd",
    "display_name": "Adjust Weight [Indiv\u25c6Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivMult": {
    "input": {
      "required": {
        "pe_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "other_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivMult",
    "display_name": "Adjust Weight [Indiv\u25c6Mult] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivAttnAdd": {
    "input": {
      "required": {
        "pe_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_q_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_k_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_v_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_out_weight_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_out_bias_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "other_ADD": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -2.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivAttnAdd",
    "display_name": "Adjust Weight [Indiv-Attn\u25c6Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_AdjustWeightIndivAttnMult": {
    "input": {
      "required": {
        "pe_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_q_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_k_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_v_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_out_weight_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "attn_out_bias_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "other_MULT": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 2.0,
            "step": 1e-06
          }
        ],
        "print_adjustment": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "prev_weight_adjust": [
          "WEIGHT_ADJUST"
        ]
      }
    },
    "output": [
      "WEIGHT_ADJUST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "WEIGHT_ADJUST"
    ],
    "name": "ADE_AdjustWeightIndivAttnMult",
    "display_name": "Adjust Weight [Indiv-Attn\u25c6Mult] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/weight adjust",
    "output_node": false
  },
  "ADE_CustomCFG": {
    "input": {
      "required": {
        "cfg_multival": [
          "MULTIVAL"
        ]
      }
    },
    "output": [
      "CUSTOM_CFG"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CUSTOM_CFG"
    ],
    "name": "ADE_CustomCFG",
    "display_name": "Custom CFG \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings",
    "output_node": false
  },
  "ADE_CustomCFGKeyframe": {
    "input": {
      "required": {
        "cfg_multival": [
          "MULTIVAL"
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ]
      },
      "optional": {
        "prev_custom_cfg": [
          "CUSTOM_CFG"
        ]
      }
    },
    "output": [
      "CUSTOM_CFG"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CUSTOM_CFG"
    ],
    "name": "ADE_CustomCFGKeyframe",
    "display_name": "Custom CFG Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings",
    "output_node": false
  },
  "ADE_SigmaSchedule": {
    "input": {
      "required": {
        "beta_schedule": [
          [
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaSchedule",
    "display_name": "Create Sigma Schedule \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_RawSigmaSchedule": {
    "input": {
      "required": {
        "raw_beta_schedule": [
          [
            "linear",
            "sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ],
        "linear_start": [
          "FLOAT",
          {
            "default": 0.00085,
            "min": 0.0,
            "max": 1.0,
            "step": 1e-06
          }
        ],
        "linear_end": [
          "FLOAT",
          {
            "default": 0.012,
            "min": 0.0,
            "max": 1.0,
            "step": 1e-06
          }
        ],
        "sampling": [
          [
            "eps",
            "v_prediction",
            "lcm"
          ]
        ],
        "lcm_original_timesteps": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1000
          }
        ],
        "lcm_zsnr": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_RawSigmaSchedule",
    "display_name": "Create Raw Sigma Schedule \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_SigmaScheduleWeightedAverage": {
    "input": {
      "required": {
        "schedule_A": [
          "SIGMA_SCHEDULE"
        ],
        "schedule_B": [
          "SIGMA_SCHEDULE"
        ],
        "weight_A": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaScheduleWeightedAverage",
    "display_name": "Sigma Schedule Weighted Mean \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_SigmaScheduleWeightedAverageInterp": {
    "input": {
      "required": {
        "schedule_A": [
          "SIGMA_SCHEDULE"
        ],
        "schedule_B": [
          "SIGMA_SCHEDULE"
        ],
        "weight_A_Start": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "weight_A_End": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out"
          ]
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaScheduleWeightedAverageInterp",
    "display_name": "Sigma Schedule Interpolated Mean \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_SigmaScheduleSplitAndCombine": {
    "input": {
      "required": {
        "schedule_Start": [
          "SIGMA_SCHEDULE"
        ],
        "schedule_End": [
          "SIGMA_SCHEDULE"
        ],
        "idx_split_percent": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "SIGMA_SCHEDULE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMA_SCHEDULE"
    ],
    "name": "ADE_SigmaScheduleSplitAndCombine",
    "display_name": "Sigma Schedule Split Combine \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    "output_node": false
  },
  "ADE_AnimateDiffUnload": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_AnimateDiffUnload",
    "display_name": "AnimateDiff Unload \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
    "output_node": false
  },
  "ADE_EmptyLatentImageLarge": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 262144
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "ADE_EmptyLatentImageLarge",
    "display_name": "Empty Latent Image (Big Batch) \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
    "output_node": false
  },
  "CheckpointLoaderSimpleWithNoiseSelect": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "ghostmix_v20Bakedvae.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "majicmixRealistic_v7.safetensors",
            "svd-fp16.safetensors"
          ]
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "use existing"
          }
        ]
      },
      "optional": {
        "use_custom_scale_factor": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 0.18215,
            "min": 0.0,
            "max": 1.0,
            "step": 1e-05
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoaderSimpleWithNoiseSelect",
    "display_name": "Load Checkpoint w/ Noise Select \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
    "output_node": false
  },
  "ADE_AnimateDiffLoaderGen1": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "model_name": [
          [
            "mm_sd_v15_v2.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_rgb.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "autoselect"
          }
        ]
      },
      "optional": {
        "context_options": [
          "CONTEXT_OPTIONS"
        ],
        "motion_lora": [
          "MOTION_LORA"
        ],
        "ad_settings": [
          "AD_SETTINGS"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "sample_settings": [
          "SAMPLE_SETTINGS"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_AnimateDiffLoaderGen1",
    "display_name": "AnimateDiff Loader \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460",
    "output_node": false
  },
  "ADE_AnimateDiffLoaderWithContext": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "model_name": [
          [
            "mm_sd_v15_v2.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_rgb.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "autoselect"
          }
        ]
      },
      "optional": {
        "context_options": [
          "CONTEXT_OPTIONS"
        ],
        "motion_lora": [
          "MOTION_LORA"
        ],
        "ad_settings": [
          "AD_SETTINGS"
        ],
        "sample_settings": [
          "SAMPLE_SETTINGS"
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "apply_v2_models_properly": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_AnimateDiffLoaderWithContext",
    "display_name": "AnimateDiff Loader [Legacy] \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460",
    "output_node": false
  },
  "ADE_AnimateDiffModelSettings_Release": {
    "input": {
      "required": {
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettings_Release",
    "display_name": "\ud83d\udeab[DEPR] Motion Model Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffModelSettingsSimple": {
    "input": {
      "required": {
        "motion_pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ],
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettingsSimple",
    "display_name": "\ud83d\udeab[DEPR] Motion Model Settings (Simple) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffModelSettings": {
    "input": {
      "required": {
        "pe_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "attn_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "other_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "motion_pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "cap_initial_pe_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "interpolate_pe_to_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "initial_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "final_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ],
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettings",
    "display_name": "\ud83d\udeab[DEPR] Motion Model Settings (Advanced) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths": {
    "input": {
      "required": {
        "pe_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "attn_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "attn_q_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "attn_k_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "attn_v_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "attn_out_weight_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "attn_out_bias_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "other_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.0001
          }
        ],
        "motion_pe_stretch": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "cap_initial_pe_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "interpolate_pe_to_length": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "initial_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "final_pe_idx_offset": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask_motion_scale": [
          "MASK"
        ],
        "min_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "max_motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "AD_SETTINGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AD_SETTINGS"
    ],
    "name": "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
    "display_name": "\ud83d\udeab[DEPR] Motion Model Settings (Adv. Attn) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_UseEvolvedSampling": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "beta_schedule": [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ],
          {
            "default": "autoselect"
          }
        ]
      },
      "optional": {
        "m_models": [
          "M_MODELS"
        ],
        "context_options": [
          "CONTEXT_OPTIONS"
        ],
        "sample_settings": [
          "SAMPLE_SETTINGS"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ADE_UseEvolvedSampling",
    "display_name": "Use Evolved Sampling \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    "output_node": false
  },
  "ADE_ApplyAnimateDiffModelSimple": {
    "input": {
      "required": {
        "motion_model": [
          "MOTION_MODEL_ADE"
        ]
      },
      "optional": {
        "motion_lora": [
          "MOTION_LORA"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ]
      }
    },
    "output": [
      "M_MODELS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "M_MODELS"
    ],
    "name": "ADE_ApplyAnimateDiffModelSimple",
    "display_name": "Apply AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    "output_node": false
  },
  "ADE_ApplyAnimateDiffModel": {
    "input": {
      "required": {
        "motion_model": [
          "MOTION_MODEL_ADE"
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "motion_lora": [
          "MOTION_LORA"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "prev_m_models": [
          "M_MODELS"
        ]
      }
    },
    "output": [
      "M_MODELS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "M_MODELS"
    ],
    "name": "ADE_ApplyAnimateDiffModel",
    "display_name": "Apply AnimateDiff Model (Adv.) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    "output_node": false
  },
  "ADE_LoadAnimateDiffModel": {
    "input": {
      "required": {
        "model_name": [
          [
            "mm_sd_v15_v2.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_rgb.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ]
      },
      "optional": {
        "ad_settings": [
          "AD_SETTINGS"
        ]
      }
    },
    "output": [
      "MOTION_MODEL_ADE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MOTION_MODEL"
    ],
    "name": "ADE_LoadAnimateDiffModel",
    "display_name": "Load AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    "output_node": false
  },
  "ADE_ApplyAnimateLCMI2VModel": {
    "input": {
      "required": {
        "motion_model": [
          "MOTION_MODEL_ADE"
        ],
        "ref_latent": [
          "LATENT"
        ],
        "ref_drift": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "apply_ref_when_disabled": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "motion_lora": [
          "MOTION_LORA"
        ],
        "scale_multival": [
          "MULTIVAL"
        ],
        "effect_multival": [
          "MULTIVAL"
        ],
        "ad_keyframes": [
          "AD_KEYFRAMES"
        ],
        "prev_m_models": [
          "M_MODELS"
        ]
      }
    },
    "output": [
      "M_MODELS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "M_MODELS"
    ],
    "name": "ADE_ApplyAnimateLCMI2VModel",
    "display_name": "Apply AnimateLCM-I2V Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V",
    "output_node": false
  },
  "ADE_LoadAnimateLCMI2VModel": {
    "input": {
      "required": {
        "model_name": [
          [
            "mm_sd_v15_v2.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_rgb.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ]
      },
      "optional": {
        "ad_settings": [
          "AD_SETTINGS"
        ]
      }
    },
    "output": [
      "MOTION_MODEL_ADE",
      "MOTION_MODEL_ADE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MOTION_MODEL",
      "encoder_only"
    ],
    "name": "ADE_LoadAnimateLCMI2VModel",
    "display_name": "Load AnimateLCM-I2V Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V",
    "output_node": false
  },
  "ADE_UpscaleAndVAEEncode": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "default": "center"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "ADE_UpscaleAndVAEEncode",
    "display_name": "Scale Ref Image and VAE Encode \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V",
    "output_node": false
  },
  "ADE_InjectI2VIntoAnimateDiffModel": {
    "input": {
      "required": {
        "model_name": [
          [
            "mm_sd_v15_v2.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_rgb.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "motion_model": [
          "MOTION_MODEL_ADE"
        ]
      },
      "optional": {
        "ad_settings": [
          "AD_SETTINGS"
        ]
      }
    },
    "output": [
      "MOTION_MODEL_ADE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MOTION_MODEL"
    ],
    "name": "ADE_InjectI2VIntoAnimateDiffModel",
    "display_name": "\ud83e\uddeaInject I2V into AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    "description": "",
    "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461/AnimateLCM-I2V/\ud83e\uddeaexperimental",
    "output_node": false
  },
  "AnimateDiffLoaderV1": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "latents": [
          "LATENT"
        ],
        "model_name": [
          [
            "mm_sd_v15_v2.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_rgb.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "unlimited_area_hack": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "beta_schedule": [
          [
            "sqrt_linear (AnimateDiff)",
            "use existing",
            "autoselect",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "LATENT"
    ],
    "name": "AnimateDiffLoaderV1",
    "display_name": "\ud83d\udeabAnimateDiff Loader [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffLoaderV1Advanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "latents": [
          "LATENT"
        ],
        "model_name": [
          [
            "mm_sd_v15_v2.ckpt",
            "v3_sd15_mm.ckpt",
            "v3_sd15_sparsectrl_rgb.ckpt",
            "v3_sd15_sparsectrl_scribble.ckpt"
          ]
        ],
        "unlimited_area_hack": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "context_length": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 1000
          }
        ],
        "context_stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "context_overlap": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 1000
          }
        ],
        "context_schedule": [
          [
            "uniform"
          ]
        ],
        "closed_loop": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "beta_schedule": [
          [
            "sqrt_linear (AnimateDiff)",
            "use existing",
            "autoselect",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "LATENT"
    ],
    "name": "ADE_AnimateDiffLoaderV1Advanced",
    "display_name": "\ud83d\udeabAnimateDiff Loader (Advanced) [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "",
    "output_node": false
  },
  "ADE_AnimateDiffCombine": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "frame_rate": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "loop_count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "AnimateDiff"
          }
        ],
        "format": [
          [
            "image/gif",
            "image/webp",
            "video/av1-webm",
            "video/h264-mp4",
            "video/h265-mp4",
            "video/webm"
          ]
        ],
        "pingpong": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "save_image": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "GIF"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GIF"
    ],
    "name": "ADE_AnimateDiffCombine",
    "display_name": "\ud83d\udeabAnimateDiff Combine [DEPRECATED, Use Video Combine (VHS) Instead!] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    "description": "",
    "category": "",
    "output_node": true
  },
  "Automatic CFG": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "boost": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "Automatic CFG",
    "display_name": "Automatic CFG",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "Automatic CFG - Negative": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "boost": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "negative_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.0,
            "max": 10.0,
            "step": 0.1,
            "round": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "Automatic CFG - Negative",
    "display_name": "Automatic CFG - Negative",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "Automatic CFG - Advanced settings": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "center_mean_post_cfg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "center_mean_to_sigma": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "automatic_cfg": [
          [
            "None",
            "soft",
            "hard",
            "include_boost"
          ],
          {
            "default": "hard"
          }
        ],
        "sigma_boost": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "sigma_boost_percentage": [
          "FLOAT",
          {
            "default": 6.86,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": 0.01
          }
        ],
        "lerp_uncond": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "lerp_uncond_strength": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 10.0,
            "step": 0.1,
            "round": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "Automatic CFG - Advanced settings",
    "display_name": "Automatic CFG - Advanced settings",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "TimestepKeyframe": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "cn_weights": [
          "CONTROL_NET_WEIGHTS"
        ],
        "latent_keyframe": [
          "LATENT_KEYFRAME"
        ],
        "null_latent_kf_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "guarantee_usage": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "mask_optional": [
          "MASK"
        ]
      }
    },
    "output": [
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "TIMESTEP_KF"
    ],
    "name": "TimestepKeyframe",
    "display_name": "Timestep Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    "output_node": false
  },
  "LatentKeyframe": {
    "input": {
      "required": {
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframe",
    "display_name": "Latent Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    "output_node": false
  },
  "LatentKeyframeGroup": {
    "input": {
      "required": {
        "index_strengths": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "latent_optional": [
          "LATENT"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeGroup",
    "display_name": "Latent Keyframe Group \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    "output_node": false
  },
  "LatentKeyframeBatchedGroup": {
    "input": {
      "required": {
        "float_strengths": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "step": 0.001,
            "forceInput": true
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeBatchedGroup",
    "display_name": "Latent Keyframe Batched Group \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    "output_node": false
  },
  "LatentKeyframeTiming": {
    "input": {
      "required": {
        "batch_index_from": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "batch_index_to_excl": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "strength_from": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "strength_to": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease-in",
            "ease-out",
            "ease-in-out"
          ]
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeTiming",
    "display_name": "Latent Keyframe Interpolation \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    "output_node": false
  },
  "ACN_AdvancedControlNetApply": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask_optional": [
          "MASK"
        ],
        "timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "latent_kf_override": [
          "LATENT_KEYFRAME"
        ],
        "weights_override": [
          "CONTROL_NET_WEIGHTS"
        ],
        "model_optional": [
          "MODEL"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "MODEL"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "model_opt"
    ],
    "name": "ACN_AdvancedControlNetApply",
    "display_name": "Apply Advanced ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "output_node": false
  },
  "ControlNetLoaderAdvanced": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ]
      },
      "optional": {
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetLoaderAdvanced",
    "display_name": "Load Advanced ControlNet Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "output_node": false
  },
  "DiffControlNetLoaderAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ]
      },
      "optional": {
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "DiffControlNetLoaderAdvanced",
    "display_name": "Load Advanced ControlNet Model (diff) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "output_node": false
  },
  "ScaledSoftControlNetWeights": {
    "input": {
      "required": {
        "base_multiplier": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ScaledSoftControlNetWeights",
    "display_name": "Scaled Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
    "output_node": false
  },
  "ScaledSoftMaskedUniversalWeights": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "min_base_multiplier": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "max_base_multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ScaledSoftMaskedUniversalWeights",
    "display_name": "Scaled Soft Masked Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
    "output_node": false
  },
  "SoftControlNetWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 0.09941396206337118,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 0.12050177219802567,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 0.14606275417942507,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 0.17704576264172736,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_04": [
          "FLOAT",
          {
            "default": 0.214600924414215,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_05": [
          "FLOAT",
          {
            "default": 0.26012233262329093,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_06": [
          "FLOAT",
          {
            "default": 0.3152997971191405,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_07": [
          "FLOAT",
          {
            "default": 0.3821815722656249,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_08": [
          "FLOAT",
          {
            "default": 0.4632503906249999,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_09": [
          "FLOAT",
          {
            "default": 0.561515625,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_10": [
          "FLOAT",
          {
            "default": 0.6806249999999999,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_11": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "SoftControlNetWeights",
    "display_name": "ControlNet Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet",
    "output_node": false
  },
  "CustomControlNetWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_04": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_05": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_06": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_07": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_08": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_09": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "CustomControlNetWeights",
    "display_name": "ControlNet Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet",
    "output_node": false
  },
  "SoftT2IAdapterWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 0.62,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "SoftT2IAdapterWeights",
    "display_name": "T2IAdapter Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter",
    "output_node": false
  },
  "CustomT2IAdapterWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "CustomT2IAdapterWeights",
    "display_name": "T2IAdapter Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter",
    "output_node": false
  },
  "ACN_DefaultUniversalWeights": {
    "input": {},
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ACN_DefaultUniversalWeights",
    "display_name": "Force Default Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
    "output_node": false
  },
  "ACN_SparseCtrlRGBPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "proc_IMAGE"
    ],
    "name": "ACN_SparseCtrlRGBPreprocessor",
    "display_name": "RGB SparseCtrl \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/preprocess",
    "output_node": false
  },
  "ACN_SparseCtrlLoaderAdvanced": {
    "input": {
      "required": {
        "sparsectrl_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ],
        "use_motion": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "motion_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "sparse_method": [
          "SPARSE_METHOD"
        ],
        "tk_optional": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_SparseCtrlLoaderAdvanced",
    "display_name": "Load SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlMergedLoaderAdvanced": {
    "input": {
      "required": {
        "sparsectrl_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ],
        "control_net_name": [
          [
            "#control_v11p_sd15_seg_fp16.safetensors",
            "#control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors"
          ]
        ],
        "use_motion": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "motion_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "sparse_method": [
          "SPARSE_METHOD"
        ],
        "tk_optional": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_SparseCtrlMergedLoaderAdvanced",
    "display_name": "\ud83e\uddeaLoad Merged SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/experimental",
    "output_node": false
  },
  "ACN_SparseCtrlIndexMethodNode": {
    "input": {
      "required": {
        "indexes": [
          "STRING",
          {
            "default": "0"
          }
        ]
      }
    },
    "output": [
      "SPARSE_METHOD"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SPARSE_METHOD"
    ],
    "name": "ACN_SparseCtrlIndexMethodNode",
    "display_name": "SparseCtrl Index Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlSpreadMethodNode": {
    "input": {
      "required": {
        "spread": [
          [
            "uniform",
            "starting",
            "ending",
            "center"
          ]
        ]
      }
    },
    "output": [
      "SPARSE_METHOD"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SPARSE_METHOD"
    ],
    "name": "ACN_SparseCtrlSpreadMethodNode",
    "display_name": "SparseCtrl Spread Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
    "output_node": false
  },
  "ACN_ReferencePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "proc_IMAGE"
    ],
    "name": "ACN_ReferencePreprocessor",
    "display_name": "Reference Preproccessor \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/Reference/preprocess",
    "output_node": false
  },
  "ACN_ReferenceControlNet": {
    "input": {
      "required": {
        "reference_type": [
          [
            "reference_attn",
            "reference_adain",
            "reference_attn+adain"
          ]
        ],
        "style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "ref_weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_ReferenceControlNet",
    "display_name": "Reference ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/Reference",
    "output_node": false
  },
  "ACN_ReferenceControlNetFinetune": {
    "input": {
      "required": {
        "attn_style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "attn_ref_weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "attn_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "adain_style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "adain_ref_weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "adain_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_ReferenceControlNetFinetune",
    "display_name": "Reference ControlNet (Finetune) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/Reference",
    "output_node": false
  },
  "LoadImagesFromDirectory": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "LoadImagesFromDirectory",
    "display_name": "\ud83d\udeabLoad Images [DEPRECATED] \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    "description": "",
    "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/deprecated",
    "output_node": false
  },
  "SAMModelLoader (segment anything)": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_h (2.56GB)",
            "sam_vit_l (1.25GB)",
            "sam_vit_b (375MB)",
            "sam_hq_vit_h (2.57GB)",
            "sam_hq_vit_l (1.25GB)",
            "sam_hq_vit_b (379MB)",
            "mobile_sam(39MB)"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAMModelLoader (segment anything)",
    "display_name": "SAMModelLoader (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "GroundingDinoModelLoader (segment anything)": {
    "input": {
      "required": {
        "model_name": [
          [
            "GroundingDINO_SwinT_OGC (694MB)",
            "GroundingDINO_SwinB (938MB)"
          ]
        ]
      }
    },
    "output": [
      "GROUNDING_DINO_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GROUNDING_DINO_MODEL"
    ],
    "name": "GroundingDinoModelLoader (segment anything)",
    "display_name": "GroundingDinoModelLoader (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "GroundingDinoSAMSegment (segment anything)": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL",
          {}
        ],
        "grounding_dino_model": [
          "GROUNDING_DINO_MODEL",
          {}
        ],
        "image": [
          "IMAGE",
          {}
        ],
        "prompt": [
          "STRING",
          {}
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "GroundingDinoSAMSegment (segment anything)",
    "display_name": "GroundingDinoSAMSegment (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "InvertMask (segment anything)": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "InvertMask (segment anything)",
    "display_name": "InvertMask (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "IsMaskEmpty": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "boolean_number"
    ],
    "name": "IsMaskEmpty",
    "display_name": "IsMaskEmpty",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "ArgosTranslateCLIPTextEncodeNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "en",
            "sq",
            "ar",
            "az",
            "bn",
            "bg",
            "ca",
            "zh",
            "zt",
            "cs",
            "da",
            "nl",
            "eo",
            "et",
            "fi",
            "fr",
            "de",
            "el",
            "he",
            "hi",
            "hu",
            "id",
            "ga",
            "it",
            "ja",
            "ko",
            "lv",
            "lt",
            "ms",
            "nb",
            "fa",
            "pl",
            "pt",
            "ro",
            "ru",
            "sr",
            "sk",
            "sl",
            "es",
            "sv",
            "tl",
            "th",
            "tr",
            "uk",
            "ur",
            "vi"
          ],
          {
            "default": "ru"
          }
        ],
        "to_translate": [
          [
            "ar",
            "az",
            "bg",
            "bn",
            "ca",
            "cs",
            "da",
            "de",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "fa",
            "fi",
            "fr",
            "ga",
            "he",
            "hi",
            "hu",
            "id",
            "it",
            "ja",
            "ko",
            "lt",
            "lv",
            "ms",
            "nb",
            "nl",
            "pl",
            "pt",
            "ro",
            "ru",
            "sk",
            "sl",
            "sq",
            "sr",
            "sv",
            "th",
            "tl",
            "tr",
            "uk",
            "ur",
            "vi",
            "zh",
            "zt"
          ],
          {
            "default": "en"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "STRING"
    ],
    "name": "ArgosTranslateCLIPTextEncodeNode",
    "display_name": "Argos Translate CLIP Text Encode Node",
    "description": "",
    "category": "AlekPet Nodes/conditioning",
    "output_node": false
  },
  "ArgosTranslateTextNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "en",
            "sq",
            "ar",
            "az",
            "bn",
            "bg",
            "ca",
            "zh",
            "zt",
            "cs",
            "da",
            "nl",
            "eo",
            "et",
            "fi",
            "fr",
            "de",
            "el",
            "he",
            "hi",
            "hu",
            "id",
            "ga",
            "it",
            "ja",
            "ko",
            "lv",
            "lt",
            "ms",
            "nb",
            "fa",
            "pl",
            "pt",
            "ro",
            "ru",
            "sr",
            "sk",
            "sl",
            "es",
            "sv",
            "tl",
            "th",
            "tr",
            "uk",
            "ur",
            "vi"
          ],
          {
            "default": "ru"
          }
        ],
        "to_translate": [
          [
            "ar",
            "az",
            "bg",
            "bn",
            "ca",
            "cs",
            "da",
            "de",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "fa",
            "fi",
            "fr",
            "ga",
            "he",
            "hi",
            "hu",
            "id",
            "it",
            "ja",
            "ko",
            "lt",
            "lv",
            "ms",
            "nb",
            "nl",
            "pl",
            "pt",
            "ro",
            "ru",
            "sk",
            "sl",
            "sq",
            "sr",
            "sv",
            "th",
            "tl",
            "tr",
            "uk",
            "ur",
            "vi",
            "zh",
            "zt"
          ],
          {
            "default": "en"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "text"
    ],
    "name": "ArgosTranslateTextNode",
    "display_name": "Argos Translate Text Node",
    "description": "",
    "category": "AlekPet Nodes/text",
    "output_node": false
  },
  "DeepTranslatorCLIPTextEncodeNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "english"
          }
        ],
        "add_proxies": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "proxies": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Proxies list (http=proxy), example:\nhttps=34.195.196.27:8080\nhttp=34.195.196.27:8080"
          }
        ],
        "auth_data": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Authorization data...\nExample:\napi_key=your_api_key\ndetect_lang_api_key=your_api_key\nclient_id=your_client_id\nsecret_key=your_secret_key\nappid=your-appid\nappkey=your-appkey"
          }
        ],
        "service": [
          [
            "GoogleTranslator [free]",
            "MyMemoryTranslator [free]",
            "LingueeTranslator [free - word(s) only]",
            "PonsTranslator [free - word(s) only]",
            "LibreTranslator [free or api_key]",
            "QcriTranslator [free or api_key]"
          ],
          {
            "default": "GoogleTranslator"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "STRING"
    ],
    "name": "DeepTranslatorCLIPTextEncodeNode",
    "display_name": "Deep Translator CLIP Text Encode Node",
    "description": "",
    "category": "AlekPet Nodes/conditioning",
    "output_node": false
  },
  "DeepTranslatorTextNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "afrikaans",
            "albanian",
            "amharic",
            "arabic",
            "armenian",
            "assamese",
            "aymara",
            "azerbaijani",
            "bambara",
            "basque",
            "belarusian",
            "bengali",
            "bhojpuri",
            "bosnian",
            "bulgarian",
            "catalan",
            "cebuano",
            "chichewa",
            "chinese (simplified)",
            "chinese (traditional)",
            "corsican",
            "croatian",
            "czech",
            "danish",
            "dhivehi",
            "dogri",
            "dutch",
            "english",
            "esperanto",
            "estonian",
            "ewe",
            "filipino",
            "finnish",
            "french",
            "frisian",
            "galician",
            "georgian",
            "german",
            "greek",
            "guarani",
            "gujarati",
            "haitian creole",
            "hausa",
            "hawaiian",
            "hebrew",
            "hindi",
            "hmong",
            "hungarian",
            "icelandic",
            "igbo",
            "ilocano",
            "indonesian",
            "irish",
            "italian",
            "japanese",
            "javanese",
            "kannada",
            "kazakh",
            "khmer",
            "kinyarwanda",
            "konkani",
            "korean",
            "krio",
            "kurdish (kurmanji)",
            "kurdish (sorani)",
            "kyrgyz",
            "lao",
            "latin",
            "latvian",
            "lingala",
            "lithuanian",
            "luganda",
            "luxembourgish",
            "macedonian",
            "maithili",
            "malagasy",
            "malay",
            "malayalam",
            "maltese",
            "maori",
            "marathi",
            "meiteilon (manipuri)",
            "mizo",
            "mongolian",
            "myanmar",
            "nepali",
            "norwegian",
            "odia (oriya)",
            "oromo",
            "pashto",
            "persian",
            "polish",
            "portuguese",
            "punjabi",
            "quechua",
            "romanian",
            "russian",
            "samoan",
            "sanskrit",
            "scots gaelic",
            "sepedi",
            "serbian",
            "sesotho",
            "shona",
            "sindhi",
            "sinhala",
            "slovak",
            "slovenian",
            "somali",
            "spanish",
            "sundanese",
            "swahili",
            "swedish",
            "tajik",
            "tamil",
            "tatar",
            "telugu",
            "thai",
            "tigrinya",
            "tsonga",
            "turkish",
            "turkmen",
            "twi",
            "ukrainian",
            "urdu",
            "uyghur",
            "uzbek",
            "vietnamese",
            "welsh",
            "xhosa",
            "yiddish",
            "yoruba",
            "zulu"
          ],
          {
            "default": "english"
          }
        ],
        "add_proxies": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "proxies": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Proxies list (http=proxy), example:\nhttps=34.195.196.27:8080\nhttp=34.195.196.27:8080"
          }
        ],
        "auth_data": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Authorization data...\nExample:\napi_key=your_api_key\ndetect_lang_api_key=your_api_key\nclient_id=your_client_id\nsecret_key=your_secret_key\nappid=your-appid\nappkey=your-appkey"
          }
        ],
        "service": [
          [
            "GoogleTranslator [free]",
            "MyMemoryTranslator [free]",
            "LingueeTranslator [free - word(s) only]",
            "PonsTranslator [free - word(s) only]",
            "LibreTranslator [free or api_key]",
            "QcriTranslator [free or api_key]"
          ],
          {
            "default": "GoogleTranslator"
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input text"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "text"
    ],
    "name": "DeepTranslatorTextNode",
    "display_name": "Deep Translator Text Node",
    "description": "",
    "category": "AlekPet Nodes/text",
    "output_node": false
  },
  "PreviewTextNode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "PreviewTextNode",
    "display_name": "Preview Text Node",
    "description": "",
    "category": "AlekPet Nodes/extras",
    "output_node": true
  },
  "GoogleTranslateCLIPTextEncodeNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "en"
          }
        ],
        "manual_translate": [
          [
            true,
            false
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input prompt"
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "STRING"
    ],
    "name": "GoogleTranslateCLIPTextEncodeNode",
    "display_name": "Google Translate CLIP Text Encode Node",
    "description": "",
    "category": "AlekPet Nodes/conditioning",
    "output_node": false
  },
  "GoogleTranslateTextNode": {
    "input": {
      "required": {
        "from_translate": [
          [
            "auto",
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "auto"
          }
        ],
        "to_translate": [
          [
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "az",
            "eu",
            "be",
            "bn",
            "bs",
            "bg",
            "ca",
            "ceb",
            "ny",
            "zh-cn",
            "zh-tw",
            "co",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "eo",
            "et",
            "tl",
            "fi",
            "fr",
            "fy",
            "gl",
            "ka",
            "de",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "iw",
            "he",
            "hi",
            "hmn",
            "hu",
            "is",
            "ig",
            "id",
            "ga",
            "it",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "ku",
            "ky",
            "lo",
            "la",
            "lv",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "my",
            "ne",
            "no",
            "or",
            "ps",
            "fa",
            "pl",
            "pt",
            "pa",
            "ro",
            "ru",
            "sm",
            "gd",
            "sr",
            "st",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "es",
            "su",
            "sw",
            "sv",
            "tg",
            "ta",
            "te",
            "th",
            "tr",
            "uk",
            "ur",
            "ug",
            "uz",
            "vi",
            "cy",
            "xh",
            "yi",
            "yo",
            "zu"
          ],
          {
            "default": "en"
          }
        ],
        "manual_translate": [
          [
            true,
            false
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "Input prompt"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "text"
    ],
    "name": "GoogleTranslateTextNode",
    "display_name": "Google Translate Text Node",
    "description": "",
    "category": "AlekPet Nodes/text",
    "output_node": false
  },
  "PainterNode": {
    "input": {
      "required": {
        "image": [
          [
            "2022-06-23 19-46-52-280417 (1).png",
            "2022-06-23 19-46-52-280417.png",
            "ChMkJ13cwnOIK4FoAAXGX559JJgAAvbPAImQfAABcZ3473 (1).jpg",
            "IMG_20230624_115309.jpg",
            "R-C.jpg",
            "example.png",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (1).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG (2).webp",
            "u=1090338134,2696420997&fm=253&fmt=auto&app=138&f=JPEG.webp"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PainterNode",
    "display_name": "Painter Node",
    "description": "",
    "category": "AlekPet Nodes/image",
    "output_node": false
  },
  "PoseNode": {
    "input": {
      "required": {
        "image": [
          [
            "metadata.txt"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "PoseNode",
    "display_name": "Pose Node",
    "description": "",
    "category": "AlekPet Nodes/image",
    "output_node": false
  }
}